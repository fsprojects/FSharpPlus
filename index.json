[{"uri":"/FSharpPlus/reference/fsharpplus.html","title":"FSharpPlus","content":"Array \nAsync \nChoice \nDict \nDictionary \nEnumerator \nException \nExtensions \nGenericBuilders \nIList \nIReadOnlyCollection \nIReadOnlyDictionary \nIReadOnlyList \nLazy \nLens \nList \nMap \nMemoization \nNullable \nObservable \nOperators \nOption \nParsing \nResizeArray \nResult \nSeq \nString \nTask \nTuple2 \nTuple3 \nValueOption \nValueTuple2 \nValueTuple3"},{"uri":"/FSharpPlus/reference/fsharpplus-control.html","title":"FSharpPlus.Control","content":"TryBlock \nZipApplivativeConts \nAbs \nAbs\u0027 \nAcLeft \nAcMerge \nAcRight \nApp \nAppend \nApply \nArr \nArrCombine \nArrFirst \nArrSecond \nAsk \nBifold \nBifoldBack \nBifoldMap \nBimap \nBind \nBisequence \nBisum \nBitraverse \nCallCC \nCatch \nChoice \nChoose \nChooseIndexed \nChunkBy \nComp \nComposedStaticInvokable\u003C\u0027F, \u0027G\u003E \nContramap \nCurry \nDelay \nDimap \nDistinct \nDistinctBy \nDivRem \nDivide \nDrop \nDuplicate \nEmpty \nExists \nExplicit \nExtend \nExtract \nFanin \nFanout \nFilter \nFind \nFindIndex \nFindLastSliceIndex \nFindSliceIndex \nFold \nFoldBack \nFoldIndexed \nFoldMap \nForAll \nFromBigInt \nFromInt32 \nFromInt64 \nGather \nGet \nGroupBy \nHead \nId \nIntercalate \nIntersperse \nInvmap \nInvoke \nIsAltLeftZero \nIsLeftZero \nIsZipLeftZero \nItem \nItem1 \nItem2 \nItem3 \nItem4 \nItem5 \nIterate \nIterateIndexed \nJoin \nLength \nLift \nLift2 \nLift3 \nLiftAsync \nLimit \nListen \nLocal \nMap \nMap2 \nMap3 \nMapFirst \nMapIndexed \nMapItem1 \nMapItem2 \nMapItem3 \nMapItem4 \nMapItem5 \nMax \nMaxBy \nMaxValue \nMin \nMinBy \nMinValue \nNth \nOfBytes \nOfList \nOfSeq \nOne \nParse \nPass \nPi \nPick \nPlus \nPure \nPut \nReduce \nReplace \nReturn \nRev \nScan \nSequence \nSignum \nSignum\u0027 \nSkip \nSkipWhile \nSort \nSortBy \nSortByDescending \nSplit \nSqrt \nSubtract \nSum \nTake \nTakeWhile \nTell \nThrow \nToArray \nToBigInt \nToBytes \nToList \nToSeq \nTranspose \nTraverse \nTraverseIndexed \nTryDivide \nTryFinally \nTryFind \nTryFindIndex \nTryFindLastSliceIndex \nTryFindSliceIndex \nTryHead \nTryItem \nTryLast \nTryNegate \nTryNegate\u0027 \nTryParse \nTryPick \nTrySqrt \nTrySqrtRem \nTrySubtract \nTryWith \nUncurry \nUnzip \nUsing \nZero \nZip \nZipApply"},{"uri":"/FSharpPlus/reference/fsharpplus-data.html","title":"FSharpPlus.Data","content":"ChoiceT \nCompose \nConst \nCont \nContT \nCoproductPrimitives \nDList \nDual \nEndo \nFree \nFreePrimitives \nIdentity \nInternal \nKleisli \nList \nListT \nMultiMap \nNonEmptyList \nNonEmptyListBuilder \nNonEmptyListBuilderExtensions \nNonEmptyMap \nNonEmptySeq \nNonEmptySeqBuilder \nNonEmptySet \nOption \nOptionT \nParallelArray \nParallelArrayOperators \nReader \nReaderT \nResult \nResultOrException \nResultT \nSeq \nSeqT \nSeqTOperations \nSeqT_V2 \nSpecialBuilders \nState \nStateT \nValidation \nValueOption \nValueOptionT \nWriter \nWriterT \nZipList \nAll \nAny \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E \nConst\u003C\u0027t, \u0027u\u003E \nCont\u003C\u0027r, \u0027t\u003E \nContT\u003C\u0027r, \u0027t\u003E \nCoproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E \nCoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E \nDList\u003C\u0027T\u003E \nDListData\u003C\u0027T\u003E \nDual\u003C\u0027t\u003E \nEndo\u003C\u0027t\u003E \nFirst\u003C\u0027t\u003E \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E \nIEnumerableM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nIEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nIdentity\u003C\u0027t\u003E \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E \nLast\u003C\u0027t\u003E \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E \nMonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E \nMonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E \nMult\u003C\u0027a\u003E \nMultiMap\u003C\u0027Key, \u0027Value\u003E \nNonEmptyList\u003C\u0027t\u003E \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E \nNonEmptySeq\u003C\u0027T\u003E \nNonEmptySet\u003C\u0027a\u003E \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E \nParallelArray\u003C\u0027t\u003E \nReader\u003C\u0027r, \u0027t\u003E \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E \nSeqTOperations \nState\u003C\u0027s, \u0027t\u003E \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E \nValidation\u003C\u0027error, \u0027t\u003E \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E \nWriter\u003C\u0027monoid, \u0027t\u003E \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E \nZipList\u003C\u0027s\u003E \nnelist\u003C\u0027t\u003E \nnemap\u003C\u0027Key, \u0027Value\u003E \nneseq\u003C\u0027t\u003E \nneset\u003C\u0027t\u003E \nparray\u003C\u0027t\u003E"},{"uri":"/FSharpPlus/reference/fsharpplus-internals.html","title":"FSharpPlus.Internals","content":"BigInteger \nConstraints \nDecimal \nErrors \nFindLastSliceIndex \nFindSliceIndex \nId \nRational \nBitConverter \nDefault1 \nDefault2 \nDefault3 \nDefault4 \nDefault5 \nDefault6 \nDmStruct \nDmStruct1\u003C\u0027T1\u003E \nEither\u003C\u0027t, \u0027u\u003E \nId\u003C\u0027t\u003E \nId0 \nKeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E \nSet2\u003C\u0027T\u003E \n_Dual\u003C\u0027T\u003E \n_Endo\u003C\u0027T\u003E"},{"uri":"/FSharpPlus/reference/fsharpplus-math.html","title":"FSharpPlus.Math","content":"Applicative \nGeneric \nZipApplicative"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html","title":"Array","content":"Array \n\n Additional operations on Array\n \nArray.apply \napply \nArray.lift2 \nlift2 \nArray.lift3 \nlift3 \nArray.intercalate \nintercalate \nArray.intersperse \nintersperse \nArray.split \nsplit \nArray.replace \nreplace \nArray.findSliceIndex \nfindSliceIndex \nArray.tryFindSliceIndex \ntryFindSliceIndex \nArray.findLastSliceIndex \nfindLastSliceIndex \nArray.tryFindLastSliceIndex \ntryFindLastSliceIndex \nArray.partitionMap \npartitionMap \nArray.map2Shortest \nmap2Shortest \nArray.map3Shortest \nmap3Shortest \nArray.zipShortest \nzipShortest \nArray.zip3Shortest \nzip3Shortest \nArray.choosei \nchoosei"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#apply","title":"Array.apply","content":"Array.apply \napply \nApplies an array of functions to an array of values and concatenates them."},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#lift2","title":"Array.lift2","content":"Array.lift2 \nlift2 \n\n Combines all values from the first array with the second, using the supplied mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#lift3","title":"Array.lift3","content":"Array.lift3 \nlift3 \nCombines all values from three arrays and calls a mapping function on this combination."},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#intercalate","title":"Array.intercalate","content":"Array.intercalate \nintercalate \n\n Concatenates all elements, using the specified separator between each element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#intersperse","title":"Array.intersperse","content":"Array.intersperse \nintersperse \n\n Inserts a separator element between each element in the source array.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#split","title":"Array.split","content":"Array.split \nsplit \n\n Creates a sequence of arrays by splitting the source array on any of the given separators.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#replace","title":"Array.replace","content":"Array.replace \nreplace \n\n Replaces a subsequence of the source array with the given replacement array.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#findSliceIndex","title":"Array.findSliceIndex","content":"Array.findSliceIndex \nfindSliceIndex \n\n Returns the index of the first occurrence of the specified slice in the source.\n \n Returns the index of the first occurrence of the specified slice in the source.\n Note: this is unsafe and will throw ArgumentException when the specified slice is not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#tryFindSliceIndex","title":"Array.tryFindSliceIndex","content":"Array.tryFindSliceIndex \ntryFindSliceIndex \n\n Returns the index of the first occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#findLastSliceIndex","title":"Array.findLastSliceIndex","content":"Array.findLastSliceIndex \nfindLastSliceIndex \n\n Returns the index of the last occurrence of the specified slice in the source.\n Note: this is unsafe and will throw ArgumentException when the specified slice is not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#tryFindLastSliceIndex","title":"Array.tryFindLastSliceIndex","content":"Array.tryFindLastSliceIndex \ntryFindLastSliceIndex \n\n Returns the index of the last occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#partitionMap","title":"Array.partitionMap","content":"Array.partitionMap \npartitionMap \n\n Creates two arrays by applying the mapper function to each element in the array\n and classifies the transformed values depending on whether they were wrapped with Choice1Of2 or Choice2Of2.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#map2Shortest","title":"Array.map2Shortest","content":"Array.map2Shortest \nmap2Shortest \nSafely build a new array whose elements are the results of applying the given function\n to each of the elements of the two arrays pairwise."},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#map3Shortest","title":"Array.map3Shortest","content":"Array.map3Shortest \nmap3Shortest \nSafely build a new array whose elements are the results of applying the given function\n to each of the elements of the three arrays pairwise."},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#zipShortest","title":"Array.zipShortest","content":"Array.zipShortest \nzipShortest \n\n Zip safely two arrays. If one array is shorter, excess elements are discarded from the right end of the longer array. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#zip3Shortest","title":"Array.zip3Shortest","content":"Array.zip3Shortest \nzip3Shortest \n\n Zip safely three arrays. If one array is shorter, excess elements are discarded from the right end of the longer array. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-array.html#choosei","title":"Array.choosei","content":"Array.choosei \nchoosei \nSame as choose but with access to the index."},{"uri":"/FSharpPlus/reference/fsharpplus-async.html","title":"Async","content":"Async \n\n Additional operations on Async\n \nAsync.map \nmap \nAsync.lift2 \nlift2 \nAsync.lift3 \nlift3 \nAsync.map2 \nmap2 \nAsync.map3 \nmap3 \nAsync.zipSequentially \nzipSequentially \nAsync.zip \nzip \nAsync.zip3 \nzip3 \nAsync.join \njoin \nAsync.apply \napply \nAsync.raise \nraise"},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#map","title":"Async.map","content":"Async.map \nmap \nCreates an async workflow from another workflow \u0027x\u0027, mapping its result with \u0027f\u0027."},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#lift2","title":"Async.lift2","content":"Async.lift2 \nlift2 \nCreates an async workflow from two workflows \u0027x\u0027 and \u0027y\u0027, mapping its results with \u0027f\u0027. \nWorkflows are run in sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#lift3","title":"Async.lift3","content":"Async.lift3 \nlift3 \nCreates an async workflow from three workflows \u0027x\u0027, \u0027y\u0027 and \u0027z\u0027, mapping its results with \u0027f\u0027. \nWorkflows are run in sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#map2","title":"Async.map2","content":"Async.map2 \nmap2 \nCreates an async workflow from two workflows, mapping its results with a specified function. \nSimilar to lift2 but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#map3","title":"Async.map3","content":"Async.map3 \nmap3 \nCreates an async workflow from three workflows, mapping its results with a specified function. \nSimilar to lift3 but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#zipSequentially","title":"Async.zipSequentially","content":"Async.zipSequentially \nzipSequentially \nCreates an async workflow from two workflows \u0027x\u0027 and \u0027y\u0027, tupling its results."},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#zip","title":"Async.zip","content":"Async.zip \nzip \nCreates an async workflow from two workflows, tupling its results. \nSimilar to zipSequentially but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#zip3","title":"Async.zip3","content":"Async.zip3 \nzip3 \nCreates an async workflow from three workflows, tupling its results. \nSimilar to zipSequentially but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#join","title":"Async.join","content":"Async.join \njoin \n\n Flatten two nested asyncs into one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#apply","title":"Async.apply","content":"Async.apply \napply \nCreates an async workflow that is the result of applying the resulting function of\n an async workflow to the resulting value of another async workflow."},{"uri":"/FSharpPlus/reference/fsharpplus-async.html#raise","title":"Async.raise","content":"Async.raise \nraise \n\n Raises an exception in the async workflow\n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html","title":"Choice","content":"Choice \n\n Additional operations on Choice\n \nChoice.result \nresult \nChoice.throw \nthrow \nChoice.apply \napply \nChoice.map \nmap \nChoice.map2 \nmap2 \nChoice.map3 \nmap3 \nChoice.flatten \nflatten \nChoice.bind \nbind \nChoice.catch \ncatch \nChoice.bindChoice2Of2 \nbindChoice2Of2 \nChoice.either \neither \nChoice.protect \nprotect \nChoice.apply2With \napply2With \nChoice.apply3With \napply3With"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#result","title":"Choice.result","content":"Choice.result \nresult \n\n Creates a Choice1Of2 with the supplied value.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#throw","title":"Choice.throw","content":"Choice.throw \nthrow \n\n Creates a Choice2Of2 with the supplied value.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#apply","title":"Choice.apply","content":"Choice.apply \napply \n\n Applies the wrapped value to the wrapped function when both are Choice1Of2 and returns a wrapped result or the first Choice2Of2.\n This is as if Choice1Of2 respresents a Success value and Choice2Of2 a Failure.\n \u003Cparam name=\u0022f\u0022\u003EThe function wrapped in a Choice1Of2 or a Choice2Of2.\u003C/param\u003E\n \u003Cparam name=\u0022x\u0022\u003EThe value wrapped in a Choice1Of2 or a Choice2Of2.\u003C/param\u003E\n \u003Creturns\u003EA Choice1Of2 of the function applied to the value, or the first \u003Cc\u003EChoice2Of2\u003C/c\u003E if either the function or the value is \u003Cc\u003EChoice2Of2\u003C/c\u003E.\u003C/returns\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#map","title":"Choice.map","content":"Choice.map \nmap \nMaps the value on the Choice1Of2 if any."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#map2","title":"Choice.map2","content":"Choice.map2 \nmap2 \nCreates a Choice value from a pair of Choice values, using a function to combine the Choice1Of2 values."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#map3","title":"Choice.map3","content":"Choice.map3 \nmap3 \nCreates a Choice value from three of Choice values, using a function to combine the Choice1Of2 values."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#flatten","title":"Choice.flatten","content":"Choice.flatten \nflatten \nFlattens two nested Choice. \n\u003Ccode\u003Eflatten\u003C/code\u003E is equivalent to \u003Ccode\u003Ebind id\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#bind","title":"Choice.bind","content":"Choice.bind \nbind \nIf the input value is a Choice2Of2 leaves it unchanged, otherwise maps the value on the Choice1Of2 and flattens the resulting nested Choice."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#catch","title":"Choice.catch","content":"Choice.catch \ncatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#bindChoice2Of2","title":"Choice.bindChoice2Of2","content":"Choice.bindChoice2Of2 \nbindChoice2Of2 \nIf the input value is a Choice1Of2 leaves it unchanged, otherwise maps the value on the Choice2Of2 and flattens the resulting nested Choice."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#either","title":"Choice.either","content":"Choice.either \neither \nExtracts a value from either side of a Choice."},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#protect","title":"Choice.protect","content":"Choice.protect \nprotect \n\n Creates a safe version of the supplied function, which returns a Choice\u003C\u0027U,exn\u003E instead of throwing exceptions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#apply2With","title":"Choice.apply2With","content":"Choice.apply2With \napply2With \n"},{"uri":"/FSharpPlus/reference/fsharpplus-choice.html#apply3With","title":"Choice.apply3With","content":"Choice.apply3With \napply3With \n"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html","title":"Dict","content":"Dict \n\n Additional operations on IDictionary\u003C\u0027Key, \u0027Value\u003E\n \nDict.toIReadOnlyDictionary \ntoIReadOnlyDictionary \nDict.tryGetValue \ntryGetValue \nDict.containsKey \ncontainsKey \nDict.keys \nkeys \nDict.values \nvalues \nDict.map \nmap \nDict.map2 \nmap2 \nDict.map3 \nmap3 \nDict.chooseValues \nchooseValues \nDict.zip \nzip \nDict.unzip \nunzip \nDict.unionWith \nunionWith \nDict.union \nunion \nDict.intersectWith \nintersectWith \nDict.intersect \nintersect \nDict.choosei \nchoosei"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#toIReadOnlyDictionary","title":"Dict.toIReadOnlyDictionary","content":"Dict.toIReadOnlyDictionary \ntoIReadOnlyDictionary \n\n Converts an IDictionary to an IReadOnlyDictionary.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#tryGetValue","title":"Dict.tryGetValue","content":"Dict.tryGetValue \ntryGetValue \nTries to get the value of the given key. \nThis is a function wrapper for the IDictionary.TryGetValue method,\n representing the result as an Option\u003Cvalue\u003E instead of a bool plus an out-value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#containsKey","title":"Dict.containsKey","content":"Dict.containsKey \ncontainsKey \nDoes the dictionary contain the given key? \nNote: this is a function wrapper for the IDictionary.ContainsKey method"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#keys","title":"Dict.keys","content":"Dict.keys \nkeys \nReturns the keys of the given dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#values","title":"Dict.values","content":"Dict.values \nvalues \nReturns the values of the given dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#map","title":"Dict.map","content":"Dict.map \nmap \nMaps the given function over each value in the dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#map2","title":"Dict.map2","content":"Dict.map2 \nmap2 \nCreates a Dictionary value from a pair of Dictionaries, using a function to combine them. \nKeys that are not present on both dictionaries are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#map3","title":"Dict.map3","content":"Dict.map3 \nmap3 \nCombines values from three dictionaries using mapping function. \nKeys that are not present on every dictionary are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#chooseValues","title":"Dict.chooseValues","content":"Dict.chooseValues \nchooseValues \nApplies given function to each value of the given dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#zip","title":"Dict.zip","content":"Dict.zip \nzip \nTuples values of two dictionaries. \nKeys that are not present on both dictionaries are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#unzip","title":"Dict.unzip","content":"Dict.unzip \nunzip \nSplits a dictionary with tuple pair values to two separate dictionaries."},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#unionWith","title":"Dict.unionWith","content":"Dict.unionWith \nunionWith \n\n Returns the union of two dictionaries, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#union","title":"Dict.union","content":"Dict.union \nunion \n\nReturns the union of two maps, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#intersectWith","title":"Dict.intersectWith","content":"Dict.intersectWith \nintersectWith \n\n Returns the intersection of two Dicts, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#intersect","title":"Dict.intersect","content":"Dict.intersect \nintersect \n\nReturns the intersection of two Dicts, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dict.html#choosei","title":"Dict.choosei","content":"Dict.choosei \nchoosei \nChoose with access to the key."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html","title":"Dictionary","content":"Dictionary \n\n Additional operations on Dictionary\u003C\u0027Key, \u0027Value\u003E\n \nDictionary.toIReadOnlyDictionary \ntoIReadOnlyDictionary \nDictionary.tryGetValue \ntryGetValue \nDictionary.containsKey \ncontainsKey \nDictionary.keys \nkeys \nDictionary.values \nvalues \nDictionary.map \nmap \nDictionary.map2 \nmap2 \nDictionary.map3 \nmap3 \nDictionary.chooseValues \nchooseValues \nDictionary.zip \nzip \nDictionary.unzip \nunzip \nDictionary.unionWith \nunionWith \nDictionary.union \nunion \nDictionary.intersectWith \nintersectWith \nDictionary.intersect \nintersect \nDictionary.choosei \nchoosei"},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#toIReadOnlyDictionary","title":"Dictionary.toIReadOnlyDictionary","content":"Dictionary.toIReadOnlyDictionary \ntoIReadOnlyDictionary \n\n Converts a Dictionary to an IReadOnlyDictionary\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#tryGetValue","title":"Dictionary.tryGetValue","content":"Dictionary.tryGetValue \ntryGetValue \nTries to get the value of the given key. \nNote: this is a function wrapper for the Dictionary.TryGetValue method,\n which also represents the result as an Option\u003Cvalue\u003E instead of a bool\n and an out-value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#containsKey","title":"Dictionary.containsKey","content":"Dictionary.containsKey \ncontainsKey \nDoes the dictionary contain the given key? \nNote: this is a function wrapper for the Dictionary.ContainsKey method."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#keys","title":"Dictionary.keys","content":"Dictionary.keys \nkeys \nReturns the keys of the given dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#values","title":"Dictionary.values","content":"Dictionary.values \nvalues \nReturns the values of the given dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#map","title":"Dictionary.map","content":"Dictionary.map \nmap \nMaps the given function over each value in the dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#map2","title":"Dictionary.map2","content":"Dictionary.map2 \nmap2 \nCreates a Dictionary value from a pair of Dictionaries, using a function to combine them. \nKeys that are not present on both dictionaries are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#map3","title":"Dictionary.map3","content":"Dictionary.map3 \nmap3 \nCombines values from three Dictionaries using mapping function. \nKeys that are not present on every Dictionary are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#chooseValues","title":"Dictionary.chooseValues","content":"Dictionary.chooseValues \nchooseValues \nApplies given function to each value of the given dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#zip","title":"Dictionary.zip","content":"Dictionary.zip \nzip \nTuples values of two dictionaries. \nKeys that are not present on both dictionaries are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#unzip","title":"Dictionary.unzip","content":"Dictionary.unzip \nunzip \nSplits a dictionary with tuple pair values to two separate dictionaries."},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#unionWith","title":"Dictionary.unionWith","content":"Dictionary.unionWith \nunionWith \n\n Returns the union of two dictionaries, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#union","title":"Dictionary.union","content":"Dictionary.union \nunion \n\nReturns the union of two maps, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#intersectWith","title":"Dictionary.intersectWith","content":"Dictionary.intersectWith \nintersectWith \n\n Returns the intersection of two Dicts, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#intersect","title":"Dictionary.intersect","content":"Dictionary.intersect \nintersect \n\nReturns the intersection of two maps, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-dictionary.html#choosei","title":"Dictionary.choosei","content":"Dictionary.choosei \nchoosei \nSame as chooseValues but with access to the key."},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html","title":"Enumerator","content":"Enumerator \n\n Additional operations on IEnumerator\n \nEnumerator.invalidArgFmt \ninvalidArgFmt \nEnumerator.noReset \nnoReset \nEnumerator.notStarted \nnotStarted \nEnumerator.alreadyFinished \nalreadyFinished \nEnumerator.check \ncheck \nEnumerator.dispose \ndispose \nEnumerator.Empty \nEmpty \nEnumerator.singleton \nsingleton \nEnumerator.concat \nconcat \nEnumerator.tryItem \ntryItem \nEnumerator.nth \nnth \nEnumerator.map \nmap \nEnumerator.mapi \nmapi \nEnumerator.map2 \nmap2 \nEnumerator.mapi2 \nmapi2 \nEnumerator.map3 \nmap3 \nEnumerator.choose \nchoose \nEnumerator.filter \nfilter \nEnumerator.unfold \nunfold \nEnumerator.upto \nupto \nEnumerator.zip \nzip \nEnumerator.zip3 \nzip3"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#invalidArgFmt","title":"Enumerator.invalidArgFmt","content":"Enumerator.invalidArgFmt \ninvalidArgFmt \n\n [omit]\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#noReset","title":"Enumerator.noReset","content":"Enumerator.noReset \nnoReset \n\n [omit]\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#notStarted","title":"Enumerator.notStarted","content":"Enumerator.notStarted \nnotStarted \n\n [omit]\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#alreadyFinished","title":"Enumerator.alreadyFinished","content":"Enumerator.alreadyFinished \nalreadyFinished \n\n [omit]\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#check","title":"Enumerator.check","content":"Enumerator.check \ncheck \n\n [omit]\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#dispose","title":"Enumerator.dispose","content":"Enumerator.dispose \ndispose \n\n [omit]\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#Empty","title":"Enumerator.Empty","content":"Enumerator.Empty \nEmpty \n\n Constructs an EmptyEnumerator of type \u0027T.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#singleton","title":"Enumerator.singleton","content":"Enumerator.singleton \nsingleton \n\n Constructs an Enumerator that yields the single value given.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#concat","title":"Enumerator.concat","content":"Enumerator.concat \nconcat \n\n Enumerates the elements of each of the Enumerators in order.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#tryItem","title":"Enumerator.tryItem","content":"Enumerator.tryItem \ntryItem \n\n Tries to find the nth element in the Enumerator.\n Returns None if index is negative or the Enumerator does not contain enough elements. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#nth","title":"Enumerator.nth","content":"Enumerator.nth \nnth \n\n Retuns the nth element in the Enumerator.\n  \n\n This is called \u003Ccode\u003Eitem\u003C/code\u003E in some other parts of core.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#map","title":"Enumerator.map","content":"Enumerator.map \nmap \n\n Maps over an enumerator.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#mapi","title":"Enumerator.mapi","content":"Enumerator.mapi \nmapi \n\n Maps over an Enumerator, with the mapping function also given the index.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#map2","title":"Enumerator.map2","content":"Enumerator.map2 \nmap2 \n\n Maps over two Enumerators, with the mapping function is given the corresponding elements\n of the two Enumerators pairwise.\n  \n\n Stops enumerating when either of the input Enumerators are finished enumerating.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#mapi2","title":"Enumerator.mapi2","content":"Enumerator.mapi2 \nmapi2 \n\n Maps over two Enumerators, where the mapping function is given the index and corresponding elements\n of the two input Enumerators pairwise.\n  \n\n Stops enumerating when either of the input Enumerators are finished enumerating.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#map3","title":"Enumerator.map3","content":"Enumerator.map3 \nmap3 \n\n Maps over three Enumerators, where the mapping function is given the corresponding elements\n of the three Enumerators.\n  \n\n Stops enumerating when any of the input Enumerators are finished enumerating.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#choose","title":"Enumerator.choose","content":"Enumerator.choose \nchoose \n\n Applies the given function to each element in the input Enumerator.\n Returns an Enumerator comprised of the resuls \u003Ccode\u003Ex\u003C/code\u003E for each element\n where the function returns \u003Ccode\u003ESome(x)\u003C/code\u003E.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#filter","title":"Enumerator.filter","content":"Enumerator.filter \nfilter \n\n Returns a new Enumerator yielding only the elements of the input Enumerator for which the\n given predicate returns \u0022true\u0022.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#unfold","title":"Enumerator.unfold","content":"Enumerator.unfold \nunfold \n\n Returns a new Enumerator yielding elements \u003Ccode\u003Ex\u003C/code\u003E generated by the given computation\n so long as it generates a \u003Ccode\u003ESome(x)\u003C/code\u003E - and stops when it generates a \u003Ccode\u003ENone\u003C/code\u003E.\n The given initial \u003Ccode\u003Estate\u003C/code\u003E argument is passed to the element generator.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#upto","title":"Enumerator.upto","content":"Enumerator.upto \nupto \n\n Enumerates from zero up to the given \u003Ccode\u003ElastOption\u003C/code\u003E, yielding elements\n generated by the given function applied to the index.\n  \n\n The Current value for a valid index is \u0022f i\u0022.\n\n Lazy\u003C_\u003E values are used as caches, to store either the result or an exception if thrown.\n \n These \u0022Lazy\u003C_\u003E\u0022 caches are created only on the first call to current and forced immediately.\n The lazy creation of the cache nodes means enumerations that skip many Current values are not delayed by GC.\n For example, the full enumeration of Seq.initInfinite in the tests.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#zip","title":"Enumerator.zip","content":"Enumerator.zip \nzip \n\n Zip two input Enumerators into a new Enumerator yielding pairs.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-enumerator.html#zip3","title":"Enumerator.zip3","content":"Enumerator.zip3 \nzip3 \n\n Zip three input Enumerators into a new Enumerator yielding triples.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-exception.html","title":"Exception","content":"Exception \n\n Additional operations on Exception\n \nException.rethrow \nrethrow \nException.add \nadd"},{"uri":"/FSharpPlus/reference/fsharpplus-exception.html#rethrow","title":"Exception.rethrow","content":"Exception.rethrow \nrethrow \n\n Throws the given exception with its original stacktrace.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-exception.html#add","title":"Exception.add","content":"Exception.add \nadd \n\n Combines exceptions from 2 exceptions into a single AggregateException.\n Exceptions already present in the first argument won\u0027t be added.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html","title":"Extensions","content":"Extensions \n\n Module containing F#\u002B Extension Methods on existing types\n \nExtensions.GetSlice \nGetSlice \nExtensions.GetSlice \nGetSlice \nExtensions.GetSlice \nGetSlice \nExtensions.GetSlice \nGetSlice \nExtensions.WhenAll \nWhenAll \nExtensions.Sequential \nSequential \nExtensions.Sequential \nSequential \nExtensions.AsTask \nAsTask \nExtensions.Await \nAwait \nExtensions.Await \nAwait \nExtensions.SequentialLazy \nSequentialLazy \nExtensions.Sequence \nSequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Bisequential \nBisequential \nExtensions.Bisequence \nBisequence \nExtensions.Bisequential \nBisequential \nExtensions.Bisequence \nBisequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Parallel \nParallel \nExtensions.Sequential \nSequential \nExtensions.Sequence \nSequence \nExtensions.Parallel \nParallel \nExtensions.Sequential \nSequential \nExtensions.Sequential \nSequential \nExtensions.Sequential \nSequential"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#GetSlice","title":"Extensions.GetSlice","content":"Extensions.GetSlice \nGetSlice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#GetSlice","title":"Extensions.GetSlice","content":"Extensions.GetSlice \nGetSlice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#GetSlice","title":"Extensions.GetSlice","content":"Extensions.GetSlice \nGetSlice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#GetSlice","title":"Extensions.GetSlice","content":"Extensions.GetSlice \nGetSlice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#WhenAll","title":"Extensions.WhenAll","content":"Extensions.WhenAll \nWhenAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Creates a task Result from a Result where the Ok case is a task.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Creates a task Result from a Result where the Ok case is a task.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#AsTask","title":"Extensions.AsTask","content":"Extensions.AsTask \nAsTask \nRuns an asynchronous computation, starting immediately on the current operating system\n thread, but also returns the execution as \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1\u0022\u003ETask\u003C/a\u003E\n This behaves exactly like Async.StartImmediateAsTask but without unexpected exceptions-wrapping.\n  \nIf no cancellation token is provided then the default cancellation token is used.\n You may prefer using this method if you want to achive a similar behviour to async await in C# as \n async computation starts on the current thread with an ability to return a result.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Await","title":"Extensions.Await","content":"Extensions.Await \nAwait \nReturn an asynchronous computation that will wait for the given task to complete and return\n its result. \nPrefer this over \u003Ccode\u003EAsync.AwaitTask\u003C/code\u003E.\n\n If an exception occurs in the asynchronous computation then an exception is re-raised by this function.\n\n If the task is cancelled then \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E is raised. Note\n that the task may be governed by a different cancellation token to the overall async computation where the\n Await occurs. In practice you should normally start the task with the cancellation token returned by\n \u003Ccode\u003Elet! ct = Async.CancellationToken\u003C/code\u003E, and catch any \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E\n at the point where the overall async is started.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Await","title":"Extensions.Await","content":"Extensions.Await \nAwait \nReturn an asynchronous computation that will wait for the given task to complete and return\n its result. \nPrefer this over \u003Ccode\u003EAsync.AwaitTask\u003C/code\u003E.\n\n If an exception occurs in the asynchronous computation then an exception is re-raised by this function.\n\n If the task is cancelled then \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E is raised. Note\n that the task may be governed by a different cancellation token to the overall async computation where the\n Await occurs. In practice you should normally start the task with the cancellation token returned by\n \u003Ccode\u003Elet! ct = Async.CancellationToken\u003C/code\u003E, and catch any \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E\n at the point where the overall async is started.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#SequentialLazy","title":"Extensions.SequentialLazy","content":"Extensions.SequentialLazy \nSequentialLazy \n\n Combine all asyncs in one, chaining them in sequence order.\n Similar to Async.Sequential but the returned Async contains a sequence, which is lazily evaluated.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Combine all asyncs in one, chaining them in sequence order.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Combine all asyncs in one, chaining them in sequence order.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Creates an async Result from a Result where the Ok case is async.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Creates an async Choice from a Choice where the Choice1Of2 case is async.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Bisequential","title":"Extensions.Bisequential","content":"Extensions.Bisequential \nBisequential \n\n Creates an async Result from a Result where both cases are async.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Bisequence","title":"Extensions.Bisequence","content":"Extensions.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Bisequential","title":"Extensions.Bisequential","content":"Extensions.Bisequential \nBisequential \n\n Creates an async Choice from a Choice where both cases are async.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Bisequence","title":"Extensions.Bisequence","content":"Extensions.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns None if it contains a None element, otherwise a list of all elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns None if it contains a None element, otherwise a list of all elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns the first Choice2Of2 if it contains a Choice2Of2 element, otherwise a list of all Choice1Of2 elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Parallel","title":"Extensions.Parallel","content":"Extensions.Parallel \nParallel \n\n Returns all Choice2Of2\u0027s combined, otherwise a sequence of all Choice1Of2 elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns the first Error if it contains an Error element, otherwise a sequence of all elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequence","title":"Extensions.Sequence","content":"Extensions.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Parallel","title":"Extensions.Parallel","content":"Extensions.Parallel \nParallel \n\n Returns all Errors combined, otherwise a sequence of all elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns the first Error if it contains an Error element, otherwise a list of all elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns the Error if it contains an Error element, otherwise the option inside an Ok.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-extensions.html#Sequential","title":"Extensions.Sequential","content":"Extensions.Sequential \nSequential \n\n Returns the Error if it contains an Error element, otherwise the voption inside an Ok.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html","title":"GenericBuilders","content":"GenericBuilders \n\n Constructs to express generic computations\n \nGenericBuilders.ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E \nGenericBuilders.ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E \nGenericBuilders.ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E \nGenericBuilders.Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.Idiomatic \nIdiomatic \nGenericBuilders.Ii \nIi \nGenericBuilders.J \nJ \nGenericBuilders.Ji \nJi \nGenericBuilders.MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nMonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \nGenericBuilders.ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E \nGenericBuilders.ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E \nGenericBuilders.ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E \nGenericBuilders.idiomatic \nidiomatic \nGenericBuilders.iI \niI \nGenericBuilders.monad \nmonad \nGenericBuilders.monad\u0027 \nmonad\u0027 \nGenericBuilders.applicative \napplicative \nGenericBuilders.applicative2 \napplicative2 \nGenericBuilders.applicative3 \napplicative3 \nGenericBuilders.applicative\u0027 \napplicative\u0027 \nGenericBuilders.applicative2\u0027 \napplicative2\u0027 \nGenericBuilders.applicative3\u0027 \napplicative3\u0027"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#idiomatic","title":"GenericBuilders.idiomatic","content":"GenericBuilders.idiomatic \nidiomatic \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#iI","title":"GenericBuilders.iI","content":"GenericBuilders.iI \niI \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#monad","title":"GenericBuilders.monad","content":"GenericBuilders.monad \nmonad \n\n Creates a (lazy) monadic computation expression with side-effects (see http://fsprojects.github.io/FSharpPlus/computation-expressions.html for more information)\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#monad\u0027","title":"GenericBuilders.monad\u0027","content":"GenericBuilders.monad\u0027 \nmonad\u0027 \n\n Creates a strict monadic computation expression with side-effects (see http://fsprojects.github.io/FSharpPlus/computation-expressions.html for more information)\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#applicative","title":"GenericBuilders.applicative","content":"GenericBuilders.applicative \napplicative \n\n Creates a (sequential) applicative computation expression.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#applicative2","title":"GenericBuilders.applicative2","content":"GenericBuilders.applicative2 \napplicative2 \n\n Creates a (sequential) applicative computation expression which compose effects of two Applicatives.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#applicative3","title":"GenericBuilders.applicative3","content":"GenericBuilders.applicative3 \napplicative3 \n\n Creates a (sequential) applicative computation expression which compose effects of three Applicatives.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#applicative\u0027","title":"GenericBuilders.applicative\u0027","content":"GenericBuilders.applicative\u0027 \napplicative\u0027 \n\n Creates a (non sequential) applicative computation expression.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#applicative2\u0027","title":"GenericBuilders.applicative2\u0027","content":"GenericBuilders.applicative2\u0027 \napplicative2\u0027 \n\n Creates a (non sequential) applicative computation expression which compose effects of two Applicatives.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders.html#applicative3\u0027","title":"GenericBuilders.applicative3\u0027","content":"GenericBuilders.applicative3\u0027 \napplicative3\u0027 \n\n Creates a (non sequential) applicative computation expression which compose effects of three Applicatives.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E \n\n Generic Applicative CE builder.\n \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.BindReturn \nBindReturn \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources \nMergeSources \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources3 \nMergeSources3 \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Return \nReturn \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.ReturnFrom \nReturnFrom \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Run \nRun \nApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#BindReturn","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.BindReturn","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.BindReturn \nBindReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#MergeSources","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#MergeSources3","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources3","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#Return","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Return","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#ReturnFrom","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.ReturnFrom","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#Run","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Run","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder-1.html#Yield","title":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Yield","content":"ApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E \n\n Generic 2 layers Applicative CE builder.\n \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.BindReturn \nBindReturn \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources \nMergeSources \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.ReturnFrom \nReturnFrom \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Run \nRun \nApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#BindReturn","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.BindReturn","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.BindReturn \nBindReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#MergeSources","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#MergeSources3","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources3","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#Return","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Return","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#ReturnFrom","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.ReturnFrom","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#Run","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Run","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder2-1.html#Yield","title":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Yield","content":"ApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E \n\n Generic 3 layers Applicative CE builder.\n \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.BindReturn \nBindReturn \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources \nMergeSources \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Return \nReturn \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.ReturnFrom \nReturnFrom \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Run \nRun \nApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#BindReturn","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.BindReturn","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.BindReturn \nBindReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#MergeSources","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#MergeSources3","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources3","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#Return","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Return","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#ReturnFrom","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.ReturnFrom","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#Run","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Run","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-applicativebuilder3-1.html#Yield","title":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Yield","content":"ApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Bind \nBind \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.ChunkBy \nChunkBy \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.GroupBy \nGroupBy \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.MergeSources \nMergeSources \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.MergeSources3 \nMergeSources3 \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.OrderBy \nOrderBy \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Return \nReturn \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.ReturnFrom \nReturnFrom \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Select \nSelect \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Top \nTop \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Where \nWhere \nBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#Bind","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Bind","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Bind \nBind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#ChunkBy","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.ChunkBy","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.ChunkBy \nChunkBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#GroupBy","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.GroupBy","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.GroupBy \nGroupBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#MergeSources","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.MergeSources","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#MergeSources3","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.MergeSources3","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#OrderBy","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.OrderBy","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.OrderBy \nOrderBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#Return","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Return","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#ReturnFrom","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.ReturnFrom","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#Select","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Select","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Select \nSelect \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#Top","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Top","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Top \nTop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#Where","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Where","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Where \nWhere \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-builder-1.html#Yield","title":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Yield","content":"Builder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Run \nRun \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryFinally \nTryFinally \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryWith \nTryWith \nDelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Using \nUsing"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html#Delay","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html#Run","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Run","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html#TryFinally","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryFinally","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html#TryWith","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryWith","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-delayedbuilder-1.html#Using","title":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Using","content":"DelayedBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-idiomatic.html","title":"Idiomatic","content":"Idiomatic \n \nIdiomatic.($) \n($) \nIdiomatic.($) \n($) \nIdiomatic.($) \n($) \nIdiomatic.($) \n($) \nIdiomatic.Idiomatic \nIdiomatic"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-idiomatic.html#($)","title":"Idiomatic.($)","content":"Idiomatic.($) \n($) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-idiomatic.html#($)","title":"Idiomatic.($)","content":"Idiomatic.($) \n($) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-idiomatic.html#($)","title":"Idiomatic.($)","content":"Idiomatic.($) \n($) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-idiomatic.html#($)","title":"Idiomatic.($)","content":"Idiomatic.($) \n($) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-idiomatic.html#Idiomatic","title":"Idiomatic.Idiomatic","content":"Idiomatic.Idiomatic \nIdiomatic \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-ii.html","title":"Ii","content":"Ii \n \nIi.Ii \nIi"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-ii.html#Ii","title":"Ii.Ii","content":"Ii.Ii \nIi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-j.html","title":"J","content":"J \n \nJ.J \nJ"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-j.html#J","title":"J.J","content":"J.J \nJ \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-ji.html","title":"Ji","content":"Ji \n \nJi.Ji \nJi"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-ji.html#Ji","title":"Ji.Ji","content":"Ji.Ji \nJi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.WhileImpl \nWhileImpl \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.plus \nplus \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.plus\u0027 \nplus\u0027 \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.fx \nfx \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.fx\u0027 \nfx\u0027 \nMonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.strict \nstrict"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#Combine","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#For","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#While","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#WhileImpl","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.WhileImpl","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.WhileImpl \nWhileImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#Zero","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#plus","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.plus","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.plus \nplus \n\n Makes it a (lazy) monadplus computation expression.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#plus\u0027","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.plus\u0027","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.plus\u0027 \nplus\u0027 \n\n Makes it a strict monadplus computation expression.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#fx","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.fx","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.fx \nfx \n\n Makes it a (lazy) monadic computation expression with side-effects\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#fx\u0027","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.fx\u0027","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.fx\u0027 \nfx\u0027 \n\n Makes it a strict monadic computation expression with side-effects\n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxbuilder-1.html#strict","title":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.strict","content":"MonadFxBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.strict \nstrict \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxstrictbuilder-1.html","title":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nMonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \nMonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \nMonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \nMonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxstrictbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxstrictbuilder-1.html#Combine","title":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine","content":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxstrictbuilder-1.html#For","title":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For","content":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxstrictbuilder-1.html#While","title":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While","content":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadfxstrictbuilder-1.html#Zero","title":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero","content":"MonadFxStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.WhileImpl \nWhileImpl \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.YieldFrom \nYieldFrom \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero \nMonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.strict \nstrict"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#Combine","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#For","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#While","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#WhileImpl","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.WhileImpl","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.WhileImpl \nWhileImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#YieldFrom","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.YieldFrom","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.YieldFrom \nYieldFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#Zero","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusbuilder-1.html#strict","title":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.strict","content":"MonadPlusBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.strict \nstrict \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.YieldFrom \nYieldFrom \nMonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html#Combine","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html#For","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.For \nFor \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html#While","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.While \nWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html#YieldFrom","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.YieldFrom","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.YieldFrom \nYieldFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-monadplusstrictbuilder-1.html#Zero","title":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero","content":"MonadPlusStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Run \nRun \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryFinally \nTryFinally \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryWith \nTryWith \nStrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Using \nUsing"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html#Delay","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html#Run","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Run","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html#TryFinally","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryFinally","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html#TryWith","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryWith","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-strictbuilder-1.html#Using","title":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Using","content":"StrictBuilder\u003C\u0027monad\u003C\u0027t\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E \n\n Generic ZipApplicative CE builder.\n \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.BindReturn \nBindReturn \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources \nMergeSources \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources3 \nMergeSources3 \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Return \nReturn \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.ReturnFrom \nReturnFrom \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Run \nRun \nZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#BindReturn","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.BindReturn","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.BindReturn \nBindReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#MergeSources","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#MergeSources3","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources3","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#Return","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Return","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#ReturnFrom","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.ReturnFrom","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#Run","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Run","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder-1.html#Yield","title":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Yield","content":"ZipApplicativeBuilder\u003C\u0027applicative\u003C\u0027t\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E \n\n Generic 2 layers ZipApplicative CE builder.\n \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.BindReturn \nBindReturn \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources \nMergeSources \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.ReturnFrom \nReturnFrom \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Run \nRun \nZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#BindReturn","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.BindReturn","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.BindReturn \nBindReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#MergeSources","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#MergeSources3","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources3","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#Return","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Return","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#ReturnFrom","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.ReturnFrom","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#Run","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Run","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder2-1.html#Yield","title":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Yield","content":"ZipApplicativeBuilder2\u003C\u0027applicative1\u003Capplicative2\u003C\u0027t\u003E\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E \n\n Generic 3 layers ZipApplicative CE builder.\n \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.BindReturn \nBindReturn \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources \nMergeSources \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Return \nReturn \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.ReturnFrom \nReturnFrom \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Run \nRun \nZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Yield \nYield"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#BindReturn","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.BindReturn","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.BindReturn \nBindReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#MergeSources","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources \nMergeSources \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#MergeSources3","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources3","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.MergeSources3 \nMergeSources3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#Return","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Return","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#ReturnFrom","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.ReturnFrom","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.ReturnFrom \nReturnFrom \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#Run","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Run","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-genericbuilders-zipapplicativebuilder3-1.html#Yield","title":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Yield","content":"ZipApplicativeBuilder3\u003C\u0027applicative1\u003Capplicative2\u003Capplicative3\u003C\u0027t\u003E\u003E\u003E\u003E.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html","title":"IList","content":"IList \n\n Additional operations IList\u003C\u0027T\u003E\n \nIList.toIReadOnlyList \ntoIReadOnlyList \nIList.ofArray \nofArray \nIList.ofList \nofList \nIList.ofSeq \nofSeq \nIList.map \nmap \nIList.iter \niter"},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html#toIReadOnlyList","title":"IList.toIReadOnlyList","content":"IList.toIReadOnlyList \ntoIReadOnlyList \nConverts an IList to an IReadOnlyList (from System.Collections.Generic)."},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html#ofArray","title":"IList.ofArray","content":"IList.ofArray \nofArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html#ofList","title":"IList.ofList","content":"IList.ofList \nofList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html#ofSeq","title":"IList.ofSeq","content":"IList.ofSeq \nofSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html#map","title":"IList.map","content":"IList.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ilist.html#iter","title":"IList.iter","content":"IList.iter \niter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html","title":"IReadOnlyCollection","content":"IReadOnlyCollection \n\n Additional operations on IReadOnlyCollection\u003C\u0027T\u003E\n \nIReadOnlyCollection.empty \nempty \nIReadOnlyCollection.ofArray \nofArray \nIReadOnlyCollection.ofList \nofList \nIReadOnlyCollection.ofSeq \nofSeq \nIReadOnlyCollection.map \nmap \nIReadOnlyCollection.iter \niter \nIReadOnlyCollection.isEmpty \nisEmpty"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#empty","title":"IReadOnlyCollection.empty","content":"IReadOnlyCollection.empty \nempty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#ofArray","title":"IReadOnlyCollection.ofArray","content":"IReadOnlyCollection.ofArray \nofArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#ofList","title":"IReadOnlyCollection.ofList","content":"IReadOnlyCollection.ofList \nofList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#ofSeq","title":"IReadOnlyCollection.ofSeq","content":"IReadOnlyCollection.ofSeq \nofSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#map","title":"IReadOnlyCollection.map","content":"IReadOnlyCollection.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#iter","title":"IReadOnlyCollection.iter","content":"IReadOnlyCollection.iter \niter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlycollection.html#isEmpty","title":"IReadOnlyCollection.isEmpty","content":"IReadOnlyCollection.isEmpty \nisEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html","title":"IReadOnlyDictionary","content":"IReadOnlyDictionary \n\n Additional operations on IReadOnlyDictionary\u003C\u0027Key, \u0027Value\u003E\n \nIReadOnlyDictionary.add \nadd \nIReadOnlyDictionary.remove \nremove \nIReadOnlyDictionary.tryGetValue \ntryGetValue \nIReadOnlyDictionary.containsKey \ncontainsKey \nIReadOnlyDictionary.keys \nkeys \nIReadOnlyDictionary.values \nvalues \nIReadOnlyDictionary.mapValues \nmapValues \nIReadOnlyDictionary.map \nmap \nIReadOnlyDictionary.map2 \nmap2 \nIReadOnlyDictionary.map3 \nmap3 \nIReadOnlyDictionary.mapi \nmapi \nIReadOnlyDictionary.iter \niter \nIReadOnlyDictionary.chooseValues \nchooseValues \nIReadOnlyDictionary.choose \nchoose \nIReadOnlyDictionary.zip \nzip \nIReadOnlyDictionary.unzip \nunzip \nIReadOnlyDictionary.unionWith \nunionWith \nIReadOnlyDictionary.union \nunion \nIReadOnlyDictionary.intersectWith \nintersectWith \nIReadOnlyDictionary.intersect \nintersect \nIReadOnlyDictionary.empty \nempty \nIReadOnlyDictionary.toResizeArray \ntoResizeArray \nIReadOnlyDictionary.toSeq \ntoSeq \nIReadOnlyDictionary.fold \nfold \nIReadOnlyDictionary.foldBack \nfoldBack"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#add","title":"IReadOnlyDictionary.add","content":"IReadOnlyDictionary.add \nadd \n\n Replaces or sets the item associated with a specified key with the specified value.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#remove","title":"IReadOnlyDictionary.remove","content":"IReadOnlyDictionary.remove \nremove \n\n Removes the given key from the read-only dictionary.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#tryGetValue","title":"IReadOnlyDictionary.tryGetValue","content":"IReadOnlyDictionary.tryGetValue \ntryGetValue \nTries to get the value of the given key. \nThis is a function wrapper for the IReadOnlyDictionary.TryGetValue method,\n representing the result as an Option\u003Cvalue\u003E instead of a bool plus an out-value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#containsKey","title":"IReadOnlyDictionary.containsKey","content":"IReadOnlyDictionary.containsKey \ncontainsKey \nDoes the read-only dictionary contain the given key? \nNote: this is a function wrapper for the IReadOnlyDictionary.ContainsKey method."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#keys","title":"IReadOnlyDictionary.keys","content":"IReadOnlyDictionary.keys \nkeys \nReturns the keys of the given read-only dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#values","title":"IReadOnlyDictionary.values","content":"IReadOnlyDictionary.values \nvalues \nReturns the values of the given read-only dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#mapValues","title":"IReadOnlyDictionary.mapValues","content":"IReadOnlyDictionary.mapValues \nmapValues \nMaps the given function over each value in the read-only dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#map","title":"IReadOnlyDictionary.map","content":"IReadOnlyDictionary.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#map2","title":"IReadOnlyDictionary.map2","content":"IReadOnlyDictionary.map2 \nmap2 \nCreates a read-only dictionary value from a pair of read-only dictionaries,\n using a function to combine them. \nKeys that are not present on both read-only dictionaries are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#map3","title":"IReadOnlyDictionary.map3","content":"IReadOnlyDictionary.map3 \nmap3 \nCombines values from three read-only dictionaries using mapping function. \nKeys that are not present on every dictionary are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#mapi","title":"IReadOnlyDictionary.mapi","content":"IReadOnlyDictionary.mapi \nmapi \nMaps the given function over each key and value in the read-only dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#iter","title":"IReadOnlyDictionary.iter","content":"IReadOnlyDictionary.iter \niter \nApplies the given action over each key and value in the read-only dictionary."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#chooseValues","title":"IReadOnlyDictionary.chooseValues","content":"IReadOnlyDictionary.chooseValues \nchooseValues \nApplies a function to each value in a read-only dictionary and then returns\n a read-only dictionary of entries \u003Ccode\u003Ev\u003C/code\u003E where the applied function returned \u003Ccode\u003ESome(v)\u003C/code\u003E.\n \n Returns an empty read-only dictionary when the input read-only dictionary is empty or when the applied chooser function\n returns \u003Ccode\u003ENone\u003C/code\u003E for all elements.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#choose","title":"IReadOnlyDictionary.choose","content":"IReadOnlyDictionary.choose \nchoose \nApplies a function to each key and value in a read-only dictionary and then returns\n a read-only dictionary of entries \u003Ccode\u003Ev\u003C/code\u003E where the applied function returned \u003Ccode\u003ESome(v)\u003C/code\u003E.\n \n Returns an empty read-only dictionary when the input read-only dictionary is empty or when the applied chooser function\n returns \u003Ccode\u003ENone\u003C/code\u003E for all elements.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#zip","title":"IReadOnlyDictionary.zip","content":"IReadOnlyDictionary.zip \nzip \nTuples values of two read-only dictionaries. \nKeys that are not present on both read-only dictionaries are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#unzip","title":"IReadOnlyDictionary.unzip","content":"IReadOnlyDictionary.unzip \nunzip \nSplits a read-only dictionary with tuple pair values to two separate read-only dictionaries."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#unionWith","title":"IReadOnlyDictionary.unionWith","content":"IReadOnlyDictionary.unionWith \nunionWith \n\n Returns the union of two read-only dictionaries, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#union","title":"IReadOnlyDictionary.union","content":"IReadOnlyDictionary.union \nunion \n\n Returns the union of two read-only dictionaries, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#intersectWith","title":"IReadOnlyDictionary.intersectWith","content":"IReadOnlyDictionary.intersectWith \nintersectWith \n\n Returns the intersection of two read-only dictionaries, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#intersect","title":"IReadOnlyDictionary.intersect","content":"IReadOnlyDictionary.intersect \nintersect \n\n Returns the intersection of two read-only dictionaries, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#empty","title":"IReadOnlyDictionary.empty","content":"IReadOnlyDictionary.empty \nempty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#toResizeArray","title":"IReadOnlyDictionary.toResizeArray","content":"IReadOnlyDictionary.toResizeArray \ntoResizeArray \nConverts a read-only dictionary to a ResizeArray."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#toSeq","title":"IReadOnlyDictionary.toSeq","content":"IReadOnlyDictionary.toSeq \ntoSeq \nConverts a read-only dictionary to a sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#fold","title":"IReadOnlyDictionary.fold","content":"IReadOnlyDictionary.fold \nfold \n\n Folds over the bindings in the Dictionary\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlydictionary.html#foldBack","title":"IReadOnlyDictionary.foldBack","content":"IReadOnlyDictionary.foldBack \nfoldBack \n\n Folds over the bindings in the Dictionary\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html","title":"IReadOnlyList","content":"IReadOnlyList \n\n Additional operations on ReadOnlyList\u003C\u0027T\u003E\n \nIReadOnlyList.ofArray \nofArray \nIReadOnlyList.ofList \nofList \nIReadOnlyList.ofSeq \nofSeq \nIReadOnlyList.toArray \ntoArray \nIReadOnlyList.trySetItem \ntrySetItem \nIReadOnlyList.map \nmap \nIReadOnlyList.tryItem \ntryItem \nIReadOnlyList.iter \niter"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#ofArray","title":"IReadOnlyList.ofArray","content":"IReadOnlyList.ofArray \nofArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#ofList","title":"IReadOnlyList.ofList","content":"IReadOnlyList.ofList \nofList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#ofSeq","title":"IReadOnlyList.ofSeq","content":"IReadOnlyList.ofSeq \nofSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#toArray","title":"IReadOnlyList.toArray","content":"IReadOnlyList.toArray \ntoArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#trySetItem","title":"IReadOnlyList.trySetItem","content":"IReadOnlyList.trySetItem \ntrySetItem \n\n Returns a new IReadOnlyList from a given IReadOnlyList, with replaced binding for index.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#map","title":"IReadOnlyList.map","content":"IReadOnlyList.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#tryItem","title":"IReadOnlyList.tryItem","content":"IReadOnlyList.tryItem \ntryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-ireadonlylist.html#iter","title":"IReadOnlyList.iter","content":"IReadOnlyList.iter \niter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lazy.html","title":"Lazy","content":"Lazy \n\n Additional operations on Lazy - delayed computations\n \nLazy.map \nmap \nLazy.map2 \nmap2 \nLazy.map3 \nmap3 \nLazy.apply \napply"},{"uri":"/FSharpPlus/reference/fsharpplus-lazy.html#map","title":"Lazy.map","content":"Lazy.map \nmap \nCreates a Lazy value from another Lazy value, mapping through a function."},{"uri":"/FSharpPlus/reference/fsharpplus-lazy.html#map2","title":"Lazy.map2","content":"Lazy.map2 \nmap2 \nCreates a Lazy value from a pair of Lazy values, using a mapping function to combine them."},{"uri":"/FSharpPlus/reference/fsharpplus-lazy.html#map3","title":"Lazy.map3","content":"Lazy.map3 \nmap3 \nCreates a Lazy value from three Lazy values, using a function to combine them."},{"uri":"/FSharpPlus/reference/fsharpplus-lazy.html#apply","title":"Lazy.apply","content":"Lazy.apply \napply \nApplies a Lazy value to a Lazy function."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html","title":"Lens","content":"Lens \n\n Lens functions and operators\n \nLens.Array \nArray \nLens.IReadOnlyDictionary \nIReadOnlyDictionary \nLens.List \nList \nLens.Map \nMap \nLens.Set \nSet \nLens.setl \nsetl \nLens.over \nover \nLens.view \nview \nLens.preview \npreview \nLens.lens \nlens \nLens.prism \nprism \nLens.prism\u0027 \nprism\u0027 \nLens.iso \niso \nLens.choosing \nchoosing \nLens._1 \n_1 \nLens._2 \n_2 \nLens._3 \n_3 \nLens._4 \n_4 \nLens._5 \n_5 \nLens.non \nnon \nLens._Ok \n_Ok \nLens._Error \n_Error \nLens._Some \n_Some \nLens._None \n_None \nLens._all \n_all \nLens.to\u0027 \nto\u0027 \nLens.foldMapOf \nfoldMapOf \nLens.foldOf \nfoldOf \nLens.foldrOf \nfoldrOf \nLens.foldlOf \nfoldlOf \nLens.toListOf \ntoListOf \nLens.maximumOf \nmaximumOf \nLens.minimumOf \nminimumOf \nLens.anyOf \nanyOf \nLens.allOf \nallOf \nLens.elemOf \nelemOf \nLens.items \nitems \nLens.filtered \nfiltered \nLens.choosed \nchoosed \nLens.both \nboth \nLens.withIso \nwithIso \nLens.from\u0027 \nfrom\u0027 \nLens.mapping \nmapping \nLens.(^.) \n(^.) \nLens.(.-\u003E) \n(.-\u003E) \nLens.(%-\u003E) \n(%-\u003E) \nLens.(^?) \n(^?) \nLens.(^..) \n(^..) \nLens.(\u003C\u0026\u003E) \n(\u003C\u0026\u003E)"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#setl","title":"Lens.setl","content":"Lens.setl \nsetl \nWrite to a lens."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#over","title":"Lens.over","content":"Lens.over \nover \nUpdate a value in a lens."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#view","title":"Lens.view","content":"Lens.view \nview \nRead from a lens."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#preview","title":"Lens.preview","content":"Lens.preview \npreview \nRetrieve the first value targeted by a Prism, Fold or Traversal (or Some result from a Getter or Lens). See also (^?)."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#lens","title":"Lens.lens","content":"Lens.lens \nlens \nBuild a \u0027Lens\u0027 from a getter and a setter. \nThe lens should be assigned as an inline function of the free parameter, not a value, otherwise compiler will fail with a type constraint mismatch."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#prism","title":"Lens.prism","content":"Lens.prism \nprism \nBuild a \u0027Prism\u0027 from a constructor and a getter. \nThe prism should be assigned as an inline function of the free parameter, not a value, otherwise compiler will fail with a type constraint mismatch.Using Result instead of Option to permit the types of \u0027s and \u0027t to differ."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#prism\u0027","title":"Lens.prism\u0027","content":"Lens.prism\u0027 \nprism\u0027 \nBuild a \u0027Prism\u0027 from a constructor and a getter. \nThe prism should be assigned as an inline function of the free parameter, not a value, otherwise compiler will fail with a type constraint mismatch.Using Option which makes \u0027s and \u0027t the same type."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#iso","title":"Lens.iso","content":"Lens.iso \niso \nBuild an \u0027Iso\u0027 from a pair of inverse functions."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#choosing","title":"Lens.choosing","content":"Lens.choosing \nchoosing \n\n Merge two lenses, getters, setters, folds or traversals.\n \u003Cparam name=\u0022optic1\u0022\u003EThe first optic.\u003C/param\u003E\n \u003Cparam name=\u0022optic2\u0022\u003EThe second optic.\u003C/param\u003E\n \u003Cparam name=\u0022f\u0022\u003EThe free parameter.\u003C/param\u003E\n \u003Creturns\u003EAn optic for a Result which uses the first optic for the Ok and the second for the Error.\u003C/returns\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_1","title":"Lens._1","content":"Lens._1 \n_1 \n\n Lens for the first element of a tuple\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_2","title":"Lens._2","content":"Lens._2 \n_2 \n\n Lens for the second element of a tuple\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_3","title":"Lens._3","content":"Lens._3 \n_3 \n\n Lens for the third element of a tuple\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_4","title":"Lens._4","content":"Lens._4 \n_4 \n\n Lens for the fourth element of a tuple\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_5","title":"Lens._5","content":"Lens._5 \n_5 \n\n Lens for the fifth element of a tuple\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#non","title":"Lens.non","content":"Lens.non \nnon \n\n Lens for the value inside an Option or the given default value if the Option is None.  Works well when combined with Map._item\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_Ok","title":"Lens._Ok","content":"Lens._Ok \n_Ok \n\n Prism providing a Traversal for targeting the \u0027Ok\u0027 part of a Result\u003C\u0027T,\u0027Error\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_Error","title":"Lens._Error","content":"Lens._Error \n_Error \n\n Prism providing a Traversal for targeting the \u0027Error\u0027 part of a Result\u003C\u0027T,\u0027Error\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_Some","title":"Lens._Some","content":"Lens._Some \n_Some \n\n Prism providing a Traversal for targeting the \u0027Some\u0027 part of an Option\u003C\u0027T\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_None","title":"Lens._None","content":"Lens._None \n_None \n\n Prism providing a Traversal for targeting the \u0027None\u0027 part of an Option\u003C\u0027T\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#_all","title":"Lens._all","content":"Lens._all \n_all \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#to\u0027","title":"Lens.to\u0027","content":"Lens.to\u0027 \nto\u0027 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#foldMapOf","title":"Lens.foldMapOf","content":"Lens.foldMapOf \nfoldMapOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#foldOf","title":"Lens.foldOf","content":"Lens.foldOf \nfoldOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#foldrOf","title":"Lens.foldrOf","content":"Lens.foldrOf \nfoldrOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#foldlOf","title":"Lens.foldlOf","content":"Lens.foldlOf \nfoldlOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#toListOf","title":"Lens.toListOf","content":"Lens.toListOf \ntoListOf \n\n Extract a list of the targets of a Fold. See also (^..).\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#maximumOf","title":"Lens.maximumOf","content":"Lens.maximumOf \nmaximumOf \n\n Get the largest target of a Fold.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#minimumOf","title":"Lens.minimumOf","content":"Lens.minimumOf \nminimumOf \n\n Get the smallest target of a Fold.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#anyOf","title":"Lens.anyOf","content":"Lens.anyOf \nanyOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#allOf","title":"Lens.allOf","content":"Lens.allOf \nallOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#elemOf","title":"Lens.elemOf","content":"Lens.elemOf \nelemOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#items","title":"Lens.items","content":"Lens.items \nitems \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#filtered","title":"Lens.filtered","content":"Lens.filtered \nfiltered \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#choosed","title":"Lens.choosed","content":"Lens.choosed \nchoosed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#both","title":"Lens.both","content":"Lens.both \nboth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#withIso","title":"Lens.withIso","content":"Lens.withIso \nwithIso \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#from\u0027","title":"Lens.from\u0027","content":"Lens.from\u0027 \nfrom\u0027 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#mapping","title":"Lens.mapping","content":"Lens.mapping \nmapping \n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#(^.)","title":"Lens.(^.)","content":"Lens.(^.) \n(^.) \nRead from a lens. Same as \u0060\u0060view\u0060\u0060 but with the arguments flipped."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#(.-\u003E)","title":"Lens.(.-\u003E)","content":"Lens.(.-\u003E) \n(.-\u003E) \nWrite to a lens. Same as \u0060\u0060setl\u0060\u0060."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#(%-\u003E)","title":"Lens.(%-\u003E)","content":"Lens.(%-\u003E) \n(%-\u003E) \nUpdate a value in a lens. Same as \u0060\u0060over\u0060\u0060."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#(^?)","title":"Lens.(^?)","content":"Lens.(^?) \n(^?) \nRetrieve the first value targeted by a Prism, Fold or Traversal (or Some result from a Getter or Lens). Same as \u0060\u0060preview\u0060\u0060 but with the arguments flipped."},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#(^..)","title":"Lens.(^..)","content":"Lens.(^..) \n(^..) \n\n Extract a list of the targets of a Fold. Same as \u0060\u0060toListOf\u0060\u0060 but with the arguments flipped.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens.html#(\u003C\u0026\u003E)","title":"Lens.(\u003C\u0026\u003E)","content":"Lens.(\u003C\u0026\u003E) \n(\u003C\u0026\u003E) \nAn infix flipped map, restricted to non-primitive types."},{"uri":"/FSharpPlus/reference/fsharpplus-lens-array.html","title":"Array","content":"Array \n \nArray._item \n_item"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-array.html#_item","title":"Array._item","content":"Array._item \n_item \n\n Given a specific key, produces a Lens from a Array\u003Cvalue\u003E to an Option\u003Cvalue\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-ireadonlydictionary.html","title":"IReadOnlyDictionary","content":"IReadOnlyDictionary \n \nIReadOnlyDictionary._item \n_item"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-ireadonlydictionary.html#_item","title":"IReadOnlyDictionary._item","content":"IReadOnlyDictionary._item \n_item \n\n Given a specific key, produces a Lens from a IReadOnlyDictionary\u003Ckey, value\u003E to an Option\u003Cvalue\u003E.  When setting,\n a Some(value) will insert or replace the value into the dictionary at the given key.  Setting a value of\n None will delete the value at the specified key.  Works well together with non.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-list.html","title":"List","content":"List \n \nList._item \n_item"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-list.html#_item","title":"List._item","content":"List._item \n_item \n\n Given a specific key, produces a Lens from a List\u003Cvalue\u003E to an Option\u003Cvalue\u003E. When setting,\n a Some(value) will insert or replace the value into the list at the given index. Setting a value of\n None will delete the value at the specified index. Works well together with non.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-map.html","title":"Map","content":"Map \n \nMap._item \n_item"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-map.html#_item","title":"Map._item","content":"Map._item \n_item \n\n Given a specific key, produces a Lens from a Map\u003Ckey, value\u003E to an Option\u003Cvalue\u003E.  When setting,\n a Some(value) will insert or replace the value into the map at the given key.  Setting a value of\n None will delete the value at the specified key.  Works well together with non.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-set.html","title":"Set","content":"Set \n \nSet._contains \n_contains"},{"uri":"/FSharpPlus/reference/fsharpplus-lens-set.html#_contains","title":"Set._contains","content":"Set._contains \n_contains \n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html","title":"List","content":"List \n\n Additional operations on List\n \nList.singleton \nsingleton \nList.cons \ncons \nList.apply \napply \nList.lift2 \nlift2 \nList.lift3 \nlift3 \nList.tails \ntails \nList.take \ntake \nList.skip \nskip \nList.drop \ndrop \nList.intercalate \nintercalate \nList.intersperse \nintersperse \nList.split \nsplit \nList.replace \nreplace \nList.toIReadOnlyList \ntoIReadOnlyList \nList.findSliceIndex \nfindSliceIndex \nList.tryFindSliceIndex \ntryFindSliceIndex \nList.findLastSliceIndex \nfindLastSliceIndex \nList.tryFindLastSliceIndex \ntryFindLastSliceIndex \nList.partitionMap \npartitionMap \nList.map2Shortest \nmap2Shortest \nList.map3Shortest \nmap3Shortest \nList.zipShortest \nzipShortest \nList.chunkBy \nchunkBy \nList.choosei \nchoosei \nList.deleteAt \ndeleteAt \nList.removeAt \nremoveAt \nList.setAt \nsetAt \nList.cycle \ncycle"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#singleton","title":"List.singleton","content":"List.singleton \nsingleton \nReturns a list that contains one item only. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#cons","title":"List.cons","content":"List.cons \ncons \nAdds an element to the beginning of the given list \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#apply","title":"List.apply","content":"List.apply \napply \nApplies a list of functions to a list of values and concatenates them"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#lift2","title":"List.lift2","content":"List.lift2 \nlift2 \n\n Combines all values from the first list with the second, using the supplied mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#lift3","title":"List.lift3","content":"List.lift3 \nlift3 \nCombines values from three list and calls a mapping function on this combination."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#tails","title":"List.tails","content":"List.tails \ntails \n\n Returns a list with all possible tails of the source list.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#take","title":"List.take","content":"List.take \ntake \nReturns the first N elements of the list. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the list. \u003Ccode\u003EList.truncate\u003C/code\u003E\n returns as many items as the list contains instead of throwing an exception.\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#skip","title":"List.skip","content":"List.skip \nskip \nReturns the list after removing the first N elements. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#drop","title":"List.drop","content":"List.drop \ndrop \nReturns a list that drops N elements of the original list and then yields the\n remaining elements of the list. \nWhen count exceeds the number of elements in the list it\n returns an empty list instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#intercalate","title":"List.intercalate","content":"List.intercalate \nintercalate \n\n Concatenates all elements, using the specified separator between each element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#intersperse","title":"List.intersperse","content":"List.intersperse \nintersperse \n\n Inserts a separator element between each element in the source list.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#split","title":"List.split","content":"List.split \nsplit \n\n Creates a sequence of lists by splitting the source list on any of the given separators.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#replace","title":"List.replace","content":"List.replace \nreplace \n\n Replaces a subsequence of the source list with the given replacement list.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#toIReadOnlyList","title":"List.toIReadOnlyList","content":"List.toIReadOnlyList \ntoIReadOnlyList \nConverts a list to an IReadOnlyList (from System.Collections.Generic)."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#findSliceIndex","title":"List.findSliceIndex","content":"List.findSliceIndex \nfindSliceIndex \n\n Gets the index of the first occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#tryFindSliceIndex","title":"List.tryFindSliceIndex","content":"List.tryFindSliceIndex \ntryFindSliceIndex \n\n Gets the index of the first occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#findLastSliceIndex","title":"List.findLastSliceIndex","content":"List.findLastSliceIndex \nfindLastSliceIndex \n\n Gets the index of the last occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#tryFindLastSliceIndex","title":"List.tryFindLastSliceIndex","content":"List.tryFindLastSliceIndex \ntryFindLastSliceIndex \n\n Gets the index of the last occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#partitionMap","title":"List.partitionMap","content":"List.partitionMap \npartitionMap \n\n Creates two lists by applying the mapping function to each element in the list\n and classifying the transformed values depending on whether they were wrapped with Choice1Of2 or Choice2Of2.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#map2Shortest","title":"List.map2Shortest","content":"List.map2Shortest \nmap2Shortest \nSafely build a new list whose elements are the results of applying the given function\n to each of the elements of the two lists pairwise."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#map3Shortest","title":"List.map3Shortest","content":"List.map3Shortest \nmap3Shortest \n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#zipShortest","title":"List.zipShortest","content":"List.zipShortest \nzipShortest \n\n Zip safely two lists. If one list is shorter, excess elements are discarded from the right end of the longer list. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#chunkBy","title":"List.chunkBy","content":"List.chunkBy \nchunkBy \n\n Chunks the list up into groups with the same projected key by applying\n the key-generating projection function to each element and yielding a list of \n keys tupled with values.\n  \n\n Each key is tupled with an array of all adjacent elements that match \n to the key, therefore keys are not unique but can\u0027t be adjacent\n as each time the key changes a new group is yield.\n \n The ordering of the original list is respected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#choosei","title":"List.choosei","content":"List.choosei \nchoosei \nSame as choose but with access to the index."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#deleteAt","title":"List.deleteAt","content":"List.deleteAt \ndeleteAt \nAttempts to remove an item from a list. \nUse List.removeAt from FSharp.Core if you want to throw exceptions when using invalid indexes."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#removeAt","title":"List.removeAt","content":"List.removeAt \nremoveAt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#setAt","title":"List.setAt","content":"List.setAt \nsetAt \nUpdates the value of an item in a list \nUse List.updateAt from FSharp.Core if you want to throw exceptions when using invalid indexes."},{"uri":"/FSharpPlus/reference/fsharpplus-list.html#cycle","title":"List.cycle","content":"List.cycle \ncycle \n\n Creates an infinite list which cycles the element of the source.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-map.html","title":"Map","content":"Map \n\n Additional operations on Map\u003C\u0027Key, \u0027Value\u003E\n \nMap.keys \nkeys \nMap.values \nvalues \nMap.mapValues \nmapValues \nMap.mapValues2 \nmapValues2 \nMap.mapValues3 \nmapValues3 \nMap.chooseValues \nchooseValues \nMap.zip \nzip \nMap.unzip \nunzip \nMap.unionWith \nunionWith \nMap.union \nunion \nMap.intersectWith \nintersectWith \nMap.intersect \nintersect \nMap.choosei \nchoosei"},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#keys","title":"Map.keys","content":"Map.keys \nkeys \nReturns the keys of the given map. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#values","title":"Map.values","content":"Map.values \nvalues \nReturns the values of the given map. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#mapValues","title":"Map.mapValues","content":"Map.mapValues \nmapValues \nMaps the values of the original Map. \n\n The core \u0060Map.map\u0060 function maps over values too, but it passes both\n key and value to the mapping function.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#mapValues2","title":"Map.mapValues2","content":"Map.mapValues2 \nmapValues2 \nMaps values of two Maps. \nKeys that are not present on both Maps are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#mapValues3","title":"Map.mapValues3","content":"Map.mapValues3 \nmapValues3 \nCombines values from three maps using mapping function. \nKeys that are not present on every Map are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#chooseValues","title":"Map.chooseValues","content":"Map.chooseValues \nchooseValues \nApplies given function to each value of the given Map."},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#zip","title":"Map.zip","content":"Map.zip \nzip \nTuples values of two Maps. \nKeys that are not present on both Maps are dropped."},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#unzip","title":"Map.unzip","content":"Map.unzip \nunzip \nSplits a Map with tuple pair values to two separate Maps."},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#unionWith","title":"Map.unionWith","content":"Map.unionWith \nunionWith \n\n Returns the union of two maps, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#union","title":"Map.union","content":"Map.union \nunion \n\n Returns the union of two maps, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#intersectWith","title":"Map.intersectWith","content":"Map.intersectWith \nintersectWith \n\n Returns the intersection of two maps, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#intersect","title":"Map.intersect","content":"Map.intersect \nintersect \n\nReturns the intersection of two maps, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-map.html#choosei","title":"Map.choosei","content":"Map.choosei \nchoosei \nSame as chooseValues but with access to the key."},{"uri":"/FSharpPlus/reference/fsharpplus-memoization.html","title":"Memoization","content":"Memoization \n \nMemoization.MemoizationKeyWrapper\u003C\u0027a\u003E \nMemoizationKeyWrapper\u003C\u0027a\u003E \nMemoization.MemoizeN \nMemoizeN \nMemoization.memoizeN \nmemoizeN"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization.html#memoizeN","title":"Memoization.memoizeN","content":"Memoization.memoizeN \nmemoizeN \n\n Memoizes a function taking an arbitrary number of parameters.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization-memoizationkeywrapper-1.html","title":"MemoizationKeyWrapper\u003C\u0027a\u003E","content":"MemoizationKeyWrapper\u003C\u0027a\u003E \n \nMemoizationKeyWrapper\u003C\u0027a\u003E.MemoizationKeyWrapper \nMemoizationKeyWrapper"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization-memoizationkeywrapper-1.html#MemoizationKeyWrapper","title":"MemoizationKeyWrapper\u003C\u0027a\u003E.MemoizationKeyWrapper","content":"MemoizationKeyWrapper\u003C\u0027a\u003E.MemoizationKeyWrapper \nMemoizationKeyWrapper \n"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization-memoizen.html","title":"MemoizeN","content":"MemoizeN \n \nMemoizeN.MemoizeN \nMemoizeN \nMemoizeN.MemoizeN \nMemoizeN \nMemoizeN.getOrAdd \ngetOrAdd"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization-memoizen.html#MemoizeN","title":"MemoizeN.MemoizeN","content":"MemoizeN.MemoizeN \nMemoizeN \n"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization-memoizen.html#MemoizeN","title":"MemoizeN.MemoizeN","content":"MemoizeN.MemoizeN \nMemoizeN \n"},{"uri":"/FSharpPlus/reference/fsharpplus-memoization-memoizen.html#getOrAdd","title":"MemoizeN.getOrAdd","content":"MemoizeN.getOrAdd \ngetOrAdd \n"},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html","title":"Nullable","content":"Nullable \n\n Additional operations on Nullable\n \nNullable.bind \nbind \nNullable.map \nmap \nNullable.iter \niter \nNullable.hasValue \nhasValue \nNullable.isNull \nisNull \nNullable.count \ncount \nNullable.defaultValue \ndefaultValue \nNullable.defaultWith \ndefaultWith \nNullable.exists \nexists \nNullable.filter \nfilter \nNullable.fold \nfold \nNullable.foldBack \nfoldBack \nNullable.forall \nforall \nNullable.toArray \ntoArray \nNullable.toList \ntoList"},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#bind","title":"Nullable.bind","content":"Nullable.bind \nbind \nMonadic Bind; Transforms the value inside a Nullable to a Nullable using a specified binding function."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#map","title":"Nullable.map","content":"Nullable.map \nmap \nTransforms the value inside a Nullable by using a specified mapping function."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#iter","title":"Nullable.iter","content":"Nullable.iter \niter \nInvokes a side-effect function to the value of a Nullable if present and ignores the result."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#hasValue","title":"Nullable.hasValue","content":"Nullable.hasValue \nhasValue \nReturns whether a Nullable has a value."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#isNull","title":"Nullable.isNull","content":"Nullable.isNull \nisNull \nReturns whether a Nullable is empty."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#count","title":"Nullable.count","content":"Nullable.count \ncount \nReturns the number of values in the Nullable (0 or 1)."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#defaultValue","title":"Nullable.defaultValue","content":"Nullable.defaultValue \ndefaultValue \nReturns the value inside a Nullable if it has one, otherwise returns defValue."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#defaultWith","title":"Nullable.defaultWith","content":"Nullable.defaultWith \ndefaultWith \nReturns the value inside a Nullable if it has one, otherwise returns the result of evaluating defThunk."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#exists","title":"Nullable.exists","content":"Nullable.exists \nexists \nReturns whether a Nullable contains a value for which the given predicate returns true."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#filter","title":"Nullable.filter","content":"Nullable.filter \nfilter \nFilters the value in a Nullable with the given predicate."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#fold","title":"Nullable.fold","content":"Nullable.fold \nfold \nUpdates state data with an update function and the value from a Nullable if it has one."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#foldBack","title":"Nullable.foldBack","content":"Nullable.foldBack \nfoldBack \nFold, but the update function has reversed arguments."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#forall","title":"Nullable.forall","content":"Nullable.forall \nforall \nReturns whether a Nullable is empty or its value passes the given predicate. Like exists, but returns true when there is no value."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#toArray","title":"Nullable.toArray","content":"Nullable.toArray \ntoArray \nConverts a Nullable to an array with 0 or 1 items."},{"uri":"/FSharpPlus/reference/fsharpplus-nullable.html#toList","title":"Nullable.toList","content":"Nullable.toList \ntoList \nConverts a Nullable to a list with 0 or 1 items."},{"uri":"/FSharpPlus/reference/fsharpplus-observable.html","title":"Observable","content":"Observable \n\n Additional operations on Observable\u003C\u0027T\u003E\n \nObservable.toAsyncSeq \ntoAsyncSeq \nObservable.toTaskSeq \ntoTaskSeq"},{"uri":"/FSharpPlus/reference/fsharpplus-observable.html#toAsyncSeq","title":"Observable.toAsyncSeq","content":"Observable.toAsyncSeq \ntoAsyncSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-observable.html#toTaskSeq","title":"Observable.toTaskSeq","content":"Observable.toTaskSeq \ntoTaskSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html","title":"Operators","content":"Operators \n\n Generic functions and operators\n \nOperators.Arrows \nArrows \nOperators.Seq \nSeq \nOperators.flip \nflip \nOperators.konst \nkonst \nOperators.curry \ncurry \nOperators.uncurry \nuncurry \nOperators.curryN \ncurryN \nOperators.uncurryN \nuncurryN \nOperators.(\u003C/) \n(\u003C/) \nOperators.(/\u003E) \n(/\u003E) \nOperators.(|-) \n(|-) \nOperators.tap \ntap \nOperators.either \neither \nOperators.option \noption \nOperators.tuple2 \ntuple2 \nOperators.tuple3 \ntuple3 \nOperators.tuple4 \ntuple4 \nOperators.tuple5 \ntuple5 \nOperators.tuple6 \ntuple6 \nOperators.tuple7 \ntuple7 \nOperators.tuple8 \ntuple8 \nOperators.map \nmap \nOperators.(\u003C!\u003E) \n(\u003C!\u003E) \nOperators.(\u003C\u003C|) \n(\u003C\u003C|) \nOperators.(|\u003E\u003E) \n(|\u003E\u003E) \nOperators.(|\u003E\u003E\u003E) \n(|\u003E\u003E\u003E) \nOperators.(\u003C\u003C\u003C|) \n(\u003C\u003C\u003C|) \nOperators.iter \niter \nOperators.unzip \nunzip \nOperators.zip \nzip \nOperators.result \nresult \nOperators.(\u003C*\u003E) \n(\u003C*\u003E) \nOperators.lift2 \nlift2 \nOperators.liftA2 \nliftA2 \nOperators.lift3 \nlift3 \nOperators.( *\u003E ) \n( *\u003E ) \nOperators.( \u003C* ) \n( \u003C* ) \nOperators.(\u003C**\u003E) \n(\u003C**\u003E) \nOperators.optional \noptional \nOperators.opt \nopt \nOperators.pur \npur \nOperators.(\u003C.\u003E) \n(\u003C.\u003E) \nOperators.map2 \nmap2 \nOperators.map3 \nmap3 \nOperators.bind \nbind \nOperators.(\u003E\u003E=) \n(\u003E\u003E=) \nOperators.(=\u003C\u003C) \n(=\u003C\u003C) \nOperators.(\u003E=\u003E) \n(\u003E=\u003E) \nOperators.(\u003C=\u003C) \n(\u003C=\u003C) \nOperators.join \njoin \nOperators.liftM \nliftM \nOperators.getZero \ngetZero \nOperators.zero \nzero \nOperators.(\u002B\u002B) \n(\u002B\u002B) \nOperators.plus \nplus \nOperators.getEmpty \ngetEmpty \nOperators.empty \nempty \nOperators.(\u003C|\u003E) \n(\u003C|\u003E) \nOperators.guard \nguard \nOperators.contramap \ncontramap \nOperators.bimap \nbimap \nOperators.first \nfirst \nOperators.second \nsecond \nOperators.dimap \ndimap \nOperators.lmap \nlmap \nOperators.rmap \nrmap \nOperators.invmap \ninvmap \nOperators.getCatId \ngetCatId \nOperators.catId \ncatId \nOperators.catComp \ncatComp \nOperators.arr \narr \nOperators.arrFirst \narrFirst \nOperators.arrSecond \narrSecond \nOperators.( *** ) \n( *** ) \nOperators.fanout \nfanout \nOperators.fanin \nfanin \nOperators.(\u002B\u002B\u002B) \n(\u002B\u002B\u002B) \nOperators.left \nleft \nOperators.right \nright \nOperators.getApp \ngetApp \nOperators.app \napp \nOperators.foldBack \nfoldBack \nOperators.fold \nfold \nOperators.foldMap \nfoldMap \nOperators.toList \ntoList \nOperators.toArray \ntoArray \nOperators.toSeq \ntoSeq \nOperators.exists \nexists \nOperators.forall \nforall \nOperators.find \nfind \nOperators.tryFind \ntryFind \nOperators.pick \npick \nOperators.tryPick \ntryPick \nOperators.intercalate \nintercalate \nOperators.head \nhead \nOperators.tryHead \ntryHead \nOperators.tryLast \ntryLast \nOperators.length \nlength \nOperators.maximum \nmaximum \nOperators.minimum \nminimum \nOperators.maxBy \nmaxBy \nOperators.minBy \nminBy \nOperators.nth \nnth \nOperators.reduce \nreduce \nOperators.traverse \ntraverse \nOperators.sequence \nsequence \nOperators.gather \ngather \nOperators.transpose \ntranspose \nOperators.bifoldMap \nbifoldMap \nOperators.bifold \nbifold \nOperators.bifoldBack \nbifoldBack \nOperators.bisum \nbisum \nOperators.bitraverse \nbitraverse \nOperators.bisequence \nbisequence \nOperators.item \nitem \nOperators.tryItem \ntryItem \nOperators.mapi \nmapi \nOperators.choosei \nchoosei \nOperators.iteri \niteri \nOperators.foldi \nfoldi \nOperators.traversei \ntraversei \nOperators.findIndex \nfindIndex \nOperators.tryFindIndex \ntryFindIndex \nOperators.findSliceIndex \nfindSliceIndex \nOperators.tryFindSliceIndex \ntryFindSliceIndex \nOperators.findLastSliceIndex \nfindLastSliceIndex \nOperators.tryFindLastSliceIndex \ntryFindLastSliceIndex \nOperators.extract \nextract \nOperators.extend \nextend \nOperators.(=\u003E\u003E) \n(=\u003E\u003E) \nOperators.duplicate \nduplicate \nOperators.lift \nlift \nOperators.liftAsync \nliftAsync \nOperators.callCC \ncallCC \nOperators.get \nget \nOperators.gets \ngets \nOperators.put \nput \nOperators.modify \nmodify \nOperators.ask \nask \nOperators.local \nlocal \nOperators.tell \ntell \nOperators.listen \nlisten \nOperators.pass \npass \nOperators.throw \nthrow \nOperators.catch \ncatch \nOperators.bindError \nbindError \nOperators.ofList \nofList \nOperators.ofSeq \nofSeq \nOperators.filter \nfilter \nOperators.skip \nskip \nOperators.take \ntake \nOperators.drop \ndrop \nOperators.limit \nlimit \nOperators.groupBy \ngroupBy \nOperators.chunkBy \nchunkBy \nOperators.takeWhile \ntakeWhile \nOperators.skipWhile \nskipWhile \nOperators.choose \nchoose \nOperators.distinct \ndistinct \nOperators.distinctBy \ndistinctBy \nOperators.intersperse \nintersperse \nOperators.replace \nreplace \nOperators.rev \nrev \nOperators.scan \nscan \nOperators.sort \nsort \nOperators.sortBy \nsortBy \nOperators.sortByDescending \nsortByDescending \nOperators.split \nsplit \nOperators.item1 \nitem1 \nOperators.item2 \nitem2 \nOperators.item3 \nitem3 \nOperators.item4 \nitem4 \nOperators.item5 \nitem5 \nOperators.mapItem1 \nmapItem1 \nOperators.mapItem2 \nmapItem2 \nOperators.mapItem3 \nmapItem3 \nOperators.mapItem4 \nmapItem4 \nOperators.mapItem5 \nmapItem5 \nOperators.explicit \nexplicit \nOperators.ofBytesWithOptions \nofBytesWithOptions \nOperators.ofBytes \nofBytes \nOperators.ofBytesBE \nofBytesBE \nOperators.toBytes \ntoBytes \nOperators.toBytesBE \ntoBytesBE \nOperators.parse \nparse \nOperators.tryParse \ntryParse \nOperators.getOne \ngetOne \nOperators.one \none \nOperators.divRem \ndivRem \nOperators.getMinValue \ngetMinValue \nOperators.minValue \nminValue \nOperators.getMaxValue \ngetMaxValue \nOperators.maxValue \nmaxValue \nOperators.fromBigInt \nfromBigInt \nOperators.toBigInt \ntoBigInt \nOperators.getPi \ngetPi \nOperators.pi \npi \nOperators.negate \nnegate \nOperators.negate\u0027 \nnegate\u0027 \nOperators.tryNegate\u0027 \ntryNegate\u0027 \nOperators.subtract \nsubtract \nOperators.trySubtract \ntrySubtract \nOperators.div \ndiv \nOperators.tryDiv \ntryDiv \nOperators.sqrt \nsqrt \nOperators.trySqrt \ntrySqrt \nOperators.isqrt \nisqrt \nOperators.sqrtRem \nsqrtRem \nOperators.signum \nsignum \nOperators.signum\u0027 \nsignum\u0027 \nOperators.abs \nabs \nOperators.abs\u0027 \nabs\u0027 \nOperators.choice \nchoice \nOperators.mfilter \nmfilter \nOperators.sum \nsum \nOperators.implicit \nimplicit \nOperators.dispose \ndispose \nOperators.(|Parse|_|) \n(|Parse|_|) \nOperators.(|Parsed|_|) \n(|Parsed|_|)"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#flip","title":"Operators.flip","content":"Operators.flip \nflip \nCreates a new function with first two arguments flipped."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#konst","title":"Operators.konst","content":"Operators.konst \nkonst \n Creates a constant function."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#curry","title":"Operators.curry","content":"Operators.curry \ncurry \nTakes a function expecting a tuple of two elements and returns a function expecting two curried arguments."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#uncurry","title":"Operators.uncurry","content":"Operators.uncurry \nuncurry \n\n Takes a function expecting two curried arguments and returns a function expecting a tuple of two elements. Same as (\u003C||).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#curryN","title":"Operators.curryN","content":"Operators.curryN \ncurryN \n\n Takes a function expecting a tuple of any N number of elements and returns a function expecting N curried arguments.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#uncurryN","title":"Operators.uncurryN","content":"Operators.uncurryN \nuncurryN \n\n Takes a function expecting any N number of curried arguments and returns a function expecting a tuple of N elements.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C/)","title":"Operators.(\u003C/)","content":"Operators.(\u003C/) \n(\u003C/) \n\n Turn a function into something that looks like an operator. See \u003Ca href=\u0022../operators-common.html#Functions-as-operators\u0022\u003EFunctions as operators\u003C/a\u003E.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(/\u003E)","title":"Operators.(/\u003E)","content":"Operators.(/\u003E) \n(/\u003E) \n\n Turn a function into something that looks like an operator. See \u003Ca href=\u0022../operators-common.html#Functions-as-operators\u0022\u003EFunctions as operators\u003C/a\u003E.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(|-)","title":"Operators.(|-)","content":"Operators.(|-) \n(|-) \n\n Executes a side-effect function and returns the original input value. Same as \u0027tap\u0027 but with arguments flipped.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tap","title":"Operators.tap","content":"Operators.tap \ntap \n\n Executes a side-effect function and returns the original input value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#either","title":"Operators.either","content":"Operators.either \neither \nExtracts a value from either side of a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#option","title":"Operators.option","content":"Operators.option \noption \n\n Takes a function, a default value and a option value. If the option value is None, the function returns the default value.\n Otherwise, it applies the function to the value inside Some and returns the result.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple2","title":"Operators.tuple2","content":"Operators.tuple2 \ntuple2 \n\n Tuple two arguments\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple3","title":"Operators.tuple3","content":"Operators.tuple3 \ntuple3 \n\n Tuple three arguments\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple4","title":"Operators.tuple4","content":"Operators.tuple4 \ntuple4 \n\n Tuple four arguments\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple5","title":"Operators.tuple5","content":"Operators.tuple5 \ntuple5 \n\n Tuple five arguments\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple6","title":"Operators.tuple6","content":"Operators.tuple6 \ntuple6 \n\n Tuple six arguments\n \u003Ccategory index=\u00220\u0022\u003ECommon Combinators\u003C/category\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple7","title":"Operators.tuple7","content":"Operators.tuple7 \ntuple7 \n\n Tuple seven arguments\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tuple8","title":"Operators.tuple8","content":"Operators.tuple8 \ntuple8 \n\n Tuple eight arguments\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#map","title":"Operators.map","content":"Operators.map \nmap \nLifts a function into a Functor."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C!\u003E)","title":"Operators.(\u003C!\u003E)","content":"Operators.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Functor. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C\u003C|)","title":"Operators.(\u003C\u003C|)","content":"Operators.(\u003C\u003C|) \n(\u003C\u003C|) \n\n Lifts a function into a Functor. Same as map.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(|\u003E\u003E)","title":"Operators.(|\u003E\u003E)","content":"Operators.(|\u003E\u003E) \n(|\u003E\u003E) \n\n Lifts a function into a Functor. Same as map but with flipped arguments.\n To be used in pipe-forward style expressions\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(|\u003E\u003E\u003E)","title":"Operators.(|\u003E\u003E\u003E)","content":"Operators.(|\u003E\u003E\u003E) \n(|\u003E\u003E\u003E) \n\n Lifts a function into two Functors.\n To be used in pipe-forward style expressions\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C\u003C\u003C|)","title":"Operators.(\u003C\u003C\u003C|)","content":"Operators.(\u003C\u003C\u003C|) \n(\u003C\u003C\u003C|) \n\n Lifts a function into two Functors.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#iter","title":"Operators.iter","content":"Operators.iter \niter \n\n Like map but ignoring the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#unzip","title":"Operators.unzip","content":"Operators.unzip \nunzip \n\n Un-zips (un-tuple) two functors.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#zip","title":"Operators.zip","content":"Operators.zip \nzip \n\n Zips (tuple) two functors.\n  \n\n For collections, if one collection is shorter, excess elements are discarded from the right end of the longer collection. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#result","title":"Operators.result","content":"Operators.result \nresult \n\n Lifts a value into a Functor. Same as return in Computation Expressions.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C*\u003E)","title":"Operators.(\u003C*\u003E)","content":"Operators.(\u003C*\u003E) \n(\u003C*\u003E) \n\n Apply a lifted argument to a lifted function: f \u003C*\u003E arg\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#lift2","title":"Operators.lift2","content":"Operators.lift2 \nlift2 \n\n Applies 2 lifted arguments to a non-lifted function. Equivalent to map2 in non list-like types.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#liftA2","title":"Operators.liftA2","content":"Operators.liftA2 \nliftA2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#lift3","title":"Operators.lift3","content":"Operators.lift3 \nlift3 \n\n Applies 3 lifted arguments to a non-lifted function. Equivalent to map3 in non list-like types.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#( *\u003E )","title":"Operators.( *\u003E )","content":"Operators.( *\u003E ) \n( *\u003E ) \n\n Sequences two applicatives left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#( \u003C* )","title":"Operators.( \u003C* )","content":"Operators.( \u003C* ) \n( \u003C* ) \n\n Sequences two applicatives left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C**\u003E)","title":"Operators.(\u003C**\u003E)","content":"Operators.(\u003C**\u003E) \n(\u003C**\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#optional","title":"Operators.optional","content":"Operators.optional \noptional \n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#opt","title":"Operators.opt","content":"Operators.opt \nopt \n\n Transforms an alternative value (which has the notion of success/failure) to an alternative\n that always succeed, wrapping the original value into an option to signify success/failure of the original alternative.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#pur","title":"Operators.pur","content":"Operators.pur \npur \n\n Lifts a value into a ZipFunctor. Same as return in (zip) Computation Expressions.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C.\u003E)","title":"Operators.(\u003C.\u003E)","content":"Operators.(\u003C.\u003E) \n(\u003C.\u003E) \n\n Apply a lifted argument to a lifted function: f \u003C/\u003E arg.\n Same as \u003C*\u003E but for non sequential applicatives.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#map2","title":"Operators.map2","content":"Operators.map2 \nmap2 \n\n Applies 2 lifted arguments to a non-lifted function with pointwise and/or parallel semantics.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#map3","title":"Operators.map3","content":"Operators.map3 \nmap3 \n\n Applies 3 lifted arguments to a non-lifted function with pointwise and/or parallel semantics.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bind","title":"Operators.bind","content":"Operators.bind \nbind \n\n Takes a function from a plain type to a monadic value and a monadic value, and returns a new monadic value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003E\u003E=)","title":"Operators.(\u003E\u003E=)","content":"Operators.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Takes a monadic value and a function from a plain type to a monadic value, and returns a new monadic value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(=\u003C\u003C)","title":"Operators.(=\u003C\u003C)","content":"Operators.(=\u003C\u003C) \n(=\u003C\u003C) \n\n Takes a function from a plain type to a monadic value and a monadic value, and returns a new monadic value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003E=\u003E)","title":"Operators.(\u003E=\u003E)","content":"Operators.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two monadic functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C=\u003C)","title":"Operators.(\u003C=\u003C)","content":"Operators.(\u003C=\u003C) \n(\u003C=\u003C) \n\n Composes right-to-left two monadic functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#join","title":"Operators.join","content":"Operators.join \njoin \n\n Flattens two layers of monadic information into one.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#liftM","title":"Operators.liftM","content":"Operators.liftM \nliftM \n\n Equivalent to map but only for Monads.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getZero","title":"Operators.getZero","content":"Operators.getZero \ngetZero \n\n Gets a value that represents the 0 element of a Monoid.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#zero","title":"Operators.zero","content":"Operators.zero \nzero \n\n A value that represents the 0 element of a Monoid.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u002B\u002B)","title":"Operators.(\u002B\u002B)","content":"Operators.(\u002B\u002B) \n(\u002B\u002B) \n\n Combines two monoids in one.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#plus","title":"Operators.plus","content":"Operators.plus \nplus \n\n Combines two monoids in one.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getEmpty","title":"Operators.getEmpty","content":"Operators.getEmpty \ngetEmpty \n\n Gets a functor representing the empty value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#empty","title":"Operators.empty","content":"Operators.empty \nempty \n\n A functor representing the empty value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u003C|\u003E)","title":"Operators.(\u003C|\u003E)","content":"Operators.(\u003C|\u003E) \n(\u003C|\u003E) \n\n Combines two Alternatives\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#guard","title":"Operators.guard","content":"Operators.guard \nguard \n\n Conditional failure of Alternative computations.\n If true it lifts the unit value, else it returns empty.\n\n Common uses of guard include conditionally signaling an error in an error monad and conditionally rejecting the current choice in an Alternative-based parser.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#contramap","title":"Operators.contramap","content":"Operators.contramap \ncontramap \n\n Maps over the input.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bimap","title":"Operators.bimap","content":"Operators.bimap \nbimap \n\n Maps over both arguments of the Bifunctor at the same time.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#first","title":"Operators.first","content":"Operators.first \nfirst \n\n Maps covariantly over the first argument of the Bifunctor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#second","title":"Operators.second","content":"Operators.second \nsecond \n\n Maps covariantly over the second argument of the Bifunctor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#dimap","title":"Operators.dimap","content":"Operators.dimap \ndimap \n\n Maps over both arguments at the same time of a Profunctor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#lmap","title":"Operators.lmap","content":"Operators.lmap \nlmap \n\n Maps over the left part of a Profunctor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#rmap","title":"Operators.rmap","content":"Operators.rmap \nrmap \n\n Maps over the right part of a Profunctor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#invmap","title":"Operators.invmap","content":"Operators.invmap \ninvmap \n\n Maps a pair of functions over an Invariant Functor\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getCatId","title":"Operators.getCatId","content":"Operators.getCatId \ngetCatId \n\n Gets the identity morphism.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#catId","title":"Operators.catId","content":"Operators.catId \ncatId \n\n The identity morphism.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#catComp","title":"Operators.catComp","content":"Operators.catComp \ncatComp \n\n Right-to-left morphism composition.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#arr","title":"Operators.arr","content":"Operators.arr \narr \n\n Lifts a function to an arrow.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#arrFirst","title":"Operators.arrFirst","content":"Operators.arrFirst \narrFirst \n\n Sends the first component of the input through the argument arrow, and copy the rest unchanged to the output.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#arrSecond","title":"Operators.arrSecond","content":"Operators.arrSecond \narrSecond \n\n Sends the second component of the input through the argument arrow, and copy the rest unchanged to the output.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#( *** )","title":"Operators.( *** )","content":"Operators.( *** ) \n( *** ) \n\n Splits the input between the two argument arrows and combine their output. Note that this is in general not a functor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#fanout","title":"Operators.fanout","content":"Operators.fanout \nfanout \n\n Sends the input to both argument arrows and combine their output. Also known as the (\u0026\u0026\u0026) operator.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#fanin","title":"Operators.fanin","content":"Operators.fanin \nfanin \n\n Splits the input between the two argument arrows and merge their outputs. Also known as the (|||) operator.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(\u002B\u002B\u002B)","title":"Operators.(\u002B\u002B\u002B)","content":"Operators.(\u002B\u002B\u002B) \n(\u002B\u002B\u002B) \n\n Splits the input between both argument arrows, retagging and merging their outputs. Note that this is in general not a functor.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#left","title":"Operators.left","content":"Operators.left \nleft \n\n Feeds marked inputs through the left argument arrow, passing the rest through unchanged to the output.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#right","title":"Operators.right","content":"Operators.right \nright \n\n Feeds marked inputs through the right argument arrow, passing the rest through unchanged to the output.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getApp","title":"Operators.getApp","content":"Operators.getApp \ngetApp \n\n Applies an arrow produced as the output of some previous computation to an input, producing its output as the output of app.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#app","title":"Operators.app","content":"Operators.app \napp \n\n Applies an arrow produced as the output of some previous computation to an input, producing its output as the output of app.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#foldBack","title":"Operators.foldBack","content":"Operators.foldBack \nfoldBack \n\n Foldable\n \u003Csummary\u003EApplies a function to each element of the foldable, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Cc\u003Ef\u003C/c\u003E and the elements are \u003Cc\u003Ei0...iN\u003C/c\u003E then \n computes \u003Cc\u003Ef i0 (...(f iN s))\u003C/c\u003E.\u003C/summary\u003E\n \u003Ccategory index=\u002211\u0022\u003EFoldable\u003C/category\u003E\n \u003Cparam name=\u0022folder\u0022\u003EThe function to update the state given the input elements.\u003C/param\u003E\n \u003Cparam name=\u0022foldable\u0022\u003EThe input foldable.\u003C/param\u003E\n \u003Cparam name=\u0022state\u0022\u003EThe initial state.\u003C/param\u003E\n \u003Creturns\u003EThe state object after the folding function is applied to each element of the foldable.\u003C/returns\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#fold","title":"Operators.fold","content":"Operators.fold \nfold \nApplies a function to each element of the foldable, threading an accumulator argument\n through the computation. Take the second argument, and apply the function to it\n and the first element of the foldable. Then feed this result into the function along\n with the second element and so on. Return the final result.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then \n computes \u003Ccode\u003Ef (... (f s i0) i1 ...) iN\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#foldMap","title":"Operators.foldMap","content":"Operators.foldMap \nfoldMap \n\n Folds by mapping all values to a Monoid\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#toList","title":"Operators.toList","content":"Operators.toList \ntoList \nBuilds a list from the given foldable."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#toArray","title":"Operators.toArray","content":"Operators.toArray \ntoArray \nBuilds an array from the given foldable."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#toSeq","title":"Operators.toSeq","content":"Operators.toSeq \ntoSeq \nViews the given foldable as a sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#exists","title":"Operators.exists","content":"Operators.exists \nexists \nTests if any element of the list satisfies the given predicate. \nThe predicate is applied to the elements of the input foldable. If any application \n returns true then the overall result is true and no further elements are tested. \n Otherwise, false is returned."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#forall","title":"Operators.forall","content":"Operators.forall \nforall \nTests if all elements of the collection satisfy the given predicate. \nThe predicate is applied to the elements of the input foldable. If any application \n returns false then the overall result is false and no further elements are tested. \n Otherwise, true is returned."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#find","title":"Operators.find","content":"Operators.find \nfind \nGets the first element for which the given function returns true.\n Raises \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryFind","title":"Operators.tryFind","content":"Operators.tryFind \ntryFind \nGets the first element for which the given function returns true.\n Returns None if no such element exists."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#pick","title":"Operators.pick","content":"Operators.pick \npick \nApplies the given function to successive elements, returning the first\n result where function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some x. If no such\n element exists then raise \u003Ccode\u003ESystem.Collections.Generic.KeyNotFoundException\u003C/code\u003E"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryPick","title":"Operators.tryPick","content":"Operators.tryPick \ntryPick \nApplies the given function to successive elements, returning \u003Ccode\u003ESome(x)\u003C/code\u003E the first\n result where function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some x. If no such element \n exists then return \u003Ccode\u003ENone\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#intercalate","title":"Operators.intercalate","content":"Operators.intercalate \nintercalate \n\n Folds the source, inserting a separator between each element.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#head","title":"Operators.head","content":"Operators.head \nhead \nGets the first element of the foldable."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryHead","title":"Operators.tryHead","content":"Operators.tryHead \ntryHead \nGets the first element of the foldable, or\n \u003Ccode\u003ENone\u003C/code\u003E if the foldable is empty."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryLast","title":"Operators.tryLast","content":"Operators.tryLast \ntryLast \nGets the last element of the foldable, or\n \u003Ccode\u003ENone\u003C/code\u003E if the foldable is empty. \nUnsafe for infinite sequence input."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#length","title":"Operators.length","content":"Operators.length \nlength \nGets the number of elements in the foldable."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#maximum","title":"Operators.maximum","content":"Operators.maximum \nmaximum \n\n Gets the maximum value in the foldable\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#minimum","title":"Operators.minimum","content":"Operators.minimum \nminimum \n\n Gets the minimum value in the foldable\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#maxBy","title":"Operators.maxBy","content":"Operators.maxBy \nmaxBy \n\n Gets the maximum value after projecting in the foldable\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#minBy","title":"Operators.minBy","content":"Operators.minBy \nminBy \n\n Gets the minimum value after projecting in the foldable\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#nth","title":"Operators.nth","content":"Operators.nth \nnth \n\n Gets the nth value in the foldable - i.e. at position \u0027n\u0027\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#reduce","title":"Operators.reduce","content":"Operators.reduce \nreduce \nApplies a function to each element of the reducible, threading an accumulator argument\n through the computation. Apply the function to the first two elements of the reducible.\n Then feed this result into the function along with the third element and so on. \n Return the final result. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes \n \u003Ccode\u003Ef (... (f i0 i1) i2 ...) iN\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#traverse","title":"Operators.traverse","content":"Operators.traverse \ntraverse \n\n Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sequence","title":"Operators.sequence","content":"Operators.sequence \nsequence \n\n Evaluate each action in the structure from left to right, and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#gather","title":"Operators.gather","content":"Operators.gather \ngather \n\n Map each element of a structure to an action, evaluate these actions from left to right, pointwise, and/or in parallel, and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#transpose","title":"Operators.transpose","content":"Operators.transpose \ntranspose \n\n Evaluate each action in the structure from left to right, pointwise, and/or in parallel, and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bifoldMap","title":"Operators.bifoldMap","content":"Operators.bifoldMap \nbifoldMap \n\n Combines the elements of a structure, given ways of mapping them to a Common Combinators monoid.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bifold","title":"Operators.bifold","content":"Operators.bifold \nbifold \n\n Combines the elements of a structure in a right associative manner.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bifoldBack","title":"Operators.bifoldBack","content":"Operators.bifoldBack \nbifoldBack \n\n Combines the elements of a structure in a left associative manner.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bisum","title":"Operators.bisum","content":"Operators.bisum \nbisum \n\n Combines the elements of a structure using a monoid.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bitraverse","title":"Operators.bitraverse","content":"Operators.bitraverse \nbitraverse \n\n Evaluates the relevant functions at each element in the structure, running the action, and builds a new structure with the same shape, using the results produced from sequencing the actions.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bisequence","title":"Operators.bisequence","content":"Operators.bisequence \nbisequence \n\n Sequences all the actions in a structure, building a new structure with the same shape using the results of the actions.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#item","title":"Operators.item","content":"Operators.item \nitem \n\n Gets an item from the given index.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryItem","title":"Operators.tryItem","content":"Operators.tryItem \ntryItem \n\n Tries to get an item from the given index.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mapi","title":"Operators.mapi","content":"Operators.mapi \nmapi \n\n Maps with access to the index.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#choosei","title":"Operators.choosei","content":"Operators.choosei \nchoosei \n\n Choose with access to the index.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#iteri","title":"Operators.iteri","content":"Operators.iteri \niteri \n\n Maps an action with access to an index.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#foldi","title":"Operators.foldi","content":"Operators.foldi \nfoldi \n\n Left-associative fold of an indexed container with access to the index i.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#traversei","title":"Operators.traversei","content":"Operators.traversei \ntraversei \n\n Traverses an indexed container. Behaves exactly like a regular traverse except that the traversing function also has access to the key associated with a value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#findIndex","title":"Operators.findIndex","content":"Operators.findIndex \nfindIndex \n\n Gets the index of the first element in the source\n that satisfies the given predicate.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryFindIndex","title":"Operators.tryFindIndex","content":"Operators.tryFindIndex \ntryFindIndex \n\n Gets the index of the first element in the source\n that satisfies the given predicate.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#findSliceIndex","title":"Operators.findSliceIndex","content":"Operators.findSliceIndex \nfindSliceIndex \n\n Gets the index of the first occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryFindSliceIndex","title":"Operators.tryFindSliceIndex","content":"Operators.tryFindSliceIndex \ntryFindSliceIndex \n\n Gets the index of the first occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#findLastSliceIndex","title":"Operators.findLastSliceIndex","content":"Operators.findLastSliceIndex \nfindLastSliceIndex \n\n Gets the index of the last occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryFindLastSliceIndex","title":"Operators.tryFindLastSliceIndex","content":"Operators.tryFindLastSliceIndex \ntryFindLastSliceIndex \n\n Gets the index of the last occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#extract","title":"Operators.extract","content":"Operators.extract \nextract \n\n Extracts a value from a comonadic context.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#extend","title":"Operators.extend","content":"Operators.extend \nextend \n Extends a local context-dependent computation to a global computation. "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(=\u003E\u003E)","title":"Operators.(=\u003E\u003E)","content":"Operators.(=\u003E\u003E) \n(=\u003E\u003E) \n Extends a local context-dependent computation to a global computation.\n Same as \u003Ccode\u003Eextend\u003C/code\u003E but with flipped arguments. "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#duplicate","title":"Operators.duplicate","content":"Operators.duplicate \nduplicate \n\n Duplicates a comonadic context.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#lift","title":"Operators.lift","content":"Operators.lift \nlift \n\n Lifts a computation from the inner monad to the constructed monad.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#liftAsync","title":"Operators.liftAsync","content":"Operators.liftAsync \nliftAsync \n\n A specialized lift for Async\u003C\u0027T\u003E which is able to bring an Async value from any depth of monad-layers.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#callCC","title":"Operators.callCC","content":"Operators.callCC \ncallCC \n\n Calls a function with the current continuation as its argument (call-with-current-continuation).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#get","title":"Operators.get","content":"Operators.get \nget \n\n The state from the internals of the monad.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#gets","title":"Operators.gets","content":"Operators.gets \ngets \n\n Gets a value which depends on the current state.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#put","title":"Operators.put","content":"Operators.put \nput \n\n Replaces the state inside the monad.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#modify","title":"Operators.modify","content":"Operators.modify \nmodify \n\n Modifies the state inside the monad by applying a function.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#ask","title":"Operators.ask","content":"Operators.ask \nask \nThe environment from the monad."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#local","title":"Operators.local","content":"Operators.local \nlocal \n Executes a computation in a modified environment. "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tell","title":"Operators.tell","content":"Operators.tell \ntell \n\n Embeds a simple writer action.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#listen","title":"Operators.listen","content":"Operators.listen \nlisten \n Executes the action \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Em\u003C/span\u003E and adds its output to the value of the computation. "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#pass","title":"Operators.pass","content":"Operators.pass \npass \n\n Executes the action \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Em\u003C/span\u003E, which returns a value and a function, and returns the value, applying the function to the output.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#throw","title":"Operators.throw","content":"Operators.throw \nthrow \n\n Throws an error value inside the Error monad.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#catch","title":"Operators.catch","content":"Operators.catch \ncatch \n\n Executes a handler when the value contained in the Error monad represents an error.\n This is bindError flipped, which makes it useful when used as an operator.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#bindError","title":"Operators.bindError","content":"Operators.bindError \nbindError \n\n Executes a handler when the value contained in the Error monad represents an error.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#ofList","title":"Operators.ofList","content":"Operators.ofList \nofList \n\n Converts to a Collection from a list.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#ofSeq","title":"Operators.ofSeq","content":"Operators.ofSeq \nofSeq \n\n Converts to a Collection from a seq.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#filter","title":"Operators.filter","content":"Operators.filter \nfilter \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns \u0022true\u0022"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#skip","title":"Operators.skip","content":"Operators.skip \nskip \nReturns a collection that skips N elements of the original collection and then yields the\n remaining elements of the collection. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n when count exceeds the number of elements in the collection. \u003Ccode\u003Edrop\u003C/code\u003E\n returns an empty collection instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#take","title":"Operators.take","content":"Operators.take \ntake \nGets the first N elements of the collection. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the collection. \u003Ccode\u003Elimit\u003C/code\u003E\n returns as many items as the collection contains instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#drop","title":"Operators.drop","content":"Operators.drop \ndrop \nReturns a collection that drops N elements of the original collection and then yields the\n remaining elements of the collection. \nWhen count exceeds the number of elements in the collection it\n returns an empty collection instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#limit","title":"Operators.limit","content":"Operators.limit \nlimit \nReturns a collection with at most N elements."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#groupBy","title":"Operators.groupBy","content":"Operators.groupBy \ngroupBy \nApplies a key-generating function to each element of a collection and yields a collection of \n unique keys. Each unique key contains a collection of all elements that match \n to this key. \nThis function returns a collection that digests the whole initial collection as soon as \n that collection is iterated. As a result this function should not be used with \n large or infinite collections. The function makes no assumption on the ordering of the original \n collection."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#chunkBy","title":"Operators.chunkBy","content":"Operators.chunkBy \nchunkBy \nApplies a key-generating function to each element of a collection and yields a collection of \n keys tupled with values. Each key contains a collection of all adjacent elements that match \n to this key, therefore keys are not unique but they can\u0027t be adjacent\n as each time the key changes, a new group is yield. \nThe ordering of the original collection is respected."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#takeWhile","title":"Operators.takeWhile","content":"Operators.takeWhile \ntakeWhile \nReturns a collection that contains all elements of the original collection while the\n given predicate returns true, and then returns no further elements."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#skipWhile","title":"Operators.skipWhile","content":"Operators.skipWhile \nskipWhile \nBypasses elements in a collection while the given predicate returns true, and then returns\n the remaining elements of the collection."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#choose","title":"Operators.choose","content":"Operators.choose \nchoose \n\n Generic \u0027choose\u0027 for any collection.\n \n A combination of map and filter, \u0060choose\u0060 enables you to transform\n and select elements at the same time.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#distinct","title":"Operators.distinct","content":"Operators.distinct \ndistinct \nReturns a collection that contains no duplicate entries according to generic hash and\n equality comparisons on the entries.\n If an element occurs multiple times in the collection then the later occurrences are discarded."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#distinctBy","title":"Operators.distinctBy","content":"Operators.distinctBy \ndistinctBy \nReturns a collection that contains no duplicate entries according to the \n generic hash and equality comparisons on the keys returned by the given key-generating function.\n If an element occurs multiple times in the collection then the later occurrences are discarded."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#intersperse","title":"Operators.intersperse","content":"Operators.intersperse \nintersperse \nInserts a separator between each element."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#replace","title":"Operators.replace","content":"Operators.replace \nreplace \nReplaces part of the collection with a new part"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#rev","title":"Operators.rev","content":"Operators.rev \nrev \nReturns a new collection with the elements in reverse order."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#scan","title":"Operators.scan","content":"Operators.scan \nscan \nLike fold, but computes on-demand and returns the collection of intermediary and final results."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sort","title":"Operators.sort","content":"Operators.sort \nsort \nReturns a collection ordered by keys. \nThis function makes no assumption on the ordering of the original collection.\n\n This is a stable sort, that is the original order of equal elements is preserved."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sortBy","title":"Operators.sortBy","content":"Operators.sortBy \nsortBy \nApplies a key-generating function to each element of a collection and returns a collection ordered\n by keys. The keys are compared using generic comparison as implemented by \u003Ccode\u003EOperators.compare\u003C/code\u003E. \nThis function makes no assumption on the ordering of the original collection.\n\n This is a stable sort, that is the original order of equal elements is preserved."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sortByDescending","title":"Operators.sortByDescending","content":"Operators.sortByDescending \nsortByDescending \nYields a collection ordered descending by keys. \nThis function makes no assumption on the ordering of the original collection.\n\n This is a stable sort, that is the original order of equal elements is preserved."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#split","title":"Operators.split","content":"Operators.split \nsplit \nSplits a given ordered collection at each of the given sub-ordered collections"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#item1","title":"Operators.item1","content":"Operators.item1 \nitem1 \n\n Gets the value of the first component of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#item2","title":"Operators.item2","content":"Operators.item2 \nitem2 \n\n Gets the value of the second component of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#item3","title":"Operators.item3","content":"Operators.item3 \nitem3 \n\n Gets the value of the third component of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#item4","title":"Operators.item4","content":"Operators.item4 \nitem4 \n\n Gets the value of the fourth component of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#item5","title":"Operators.item5","content":"Operators.item5 \nitem5 \n\n Gets the value of the fifth component of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mapItem1","title":"Operators.mapItem1","content":"Operators.mapItem1 \nmapItem1 \n\n Maps the first value of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mapItem2","title":"Operators.mapItem2","content":"Operators.mapItem2 \nmapItem2 \n\n Maps the second value of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mapItem3","title":"Operators.mapItem3","content":"Operators.mapItem3 \nmapItem3 \n\n Maps the third value of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mapItem4","title":"Operators.mapItem4","content":"Operators.mapItem4 \nmapItem4 \n\n Maps the fourth value of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mapItem5","title":"Operators.mapItem5","content":"Operators.mapItem5 \nmapItem5 \n\n Maps the fifth value of a tuple.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#explicit","title":"Operators.explicit","content":"Operators.explicit \nexplicit \n\n Converts using the explicit operator.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#ofBytesWithOptions","title":"Operators.ofBytesWithOptions","content":"Operators.ofBytesWithOptions \nofBytesWithOptions \n\n Convert from a byte array value, given options of little-endian, and startIndex\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#ofBytes","title":"Operators.ofBytes","content":"Operators.ofBytes \nofBytes \n\n Convert from a byte array value, assuming little-endian\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#ofBytesBE","title":"Operators.ofBytesBE","content":"Operators.ofBytesBE \nofBytesBE \n\n Convert from a byte array value, assuming big-endian\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#toBytes","title":"Operators.toBytes","content":"Operators.toBytes \ntoBytes \n\n Convert to a byte array value, assuming little endian\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#toBytesBE","title":"Operators.toBytesBE","content":"Operators.toBytesBE \ntoBytesBE \n\n Convert to a byte array value, assuming big endian\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#parse","title":"Operators.parse","content":"Operators.parse \nparse \n\n Converts to a value from its string representation.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryParse","title":"Operators.tryParse","content":"Operators.tryParse \ntryParse \n\n Converts to a value from its string representation. Returns None if the convertion doesn\u0027t succeed.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getOne","title":"Operators.getOne","content":"Operators.getOne \ngetOne \nGets a value that represents the number 1 (one)."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#one","title":"Operators.one","content":"Operators.one \none \nA value that represents the 1 element."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#divRem","title":"Operators.divRem","content":"Operators.divRem \ndivRem \nDivides one number by another, returns a tuple with the result and the remainder."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getMinValue","title":"Operators.getMinValue","content":"Operators.getMinValue \ngetMinValue \nGets the smallest possible value."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#minValue","title":"Operators.minValue","content":"Operators.minValue \nminValue \nThe smallest possible value."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getMaxValue","title":"Operators.getMaxValue","content":"Operators.getMaxValue \ngetMaxValue \nGets the largest possible value."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#maxValue","title":"Operators.maxValue","content":"Operators.maxValue \nmaxValue \nThe largest possible value."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#fromBigInt","title":"Operators.fromBigInt","content":"Operators.fromBigInt \nfromBigInt \nConverts from BigInteger to the inferred destination type."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#toBigInt","title":"Operators.toBigInt","content":"Operators.toBigInt \ntoBigInt \nConverts to BigInteger."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#getPi","title":"Operators.getPi","content":"Operators.getPi \ngetPi \nGets the pi number."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#pi","title":"Operators.pi","content":"Operators.pi \npi \nThe pi number."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#negate","title":"Operators.negate","content":"Operators.negate \nnegate \nAdditive inverse of the number."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#negate\u0027","title":"Operators.negate\u0027","content":"Operators.negate\u0027 \nnegate\u0027 \nAdditive inverse of the number."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryNegate\u0027","title":"Operators.tryNegate\u0027","content":"Operators.tryNegate\u0027 \ntryNegate\u0027 \n\n Additive inverse of the number.\n Works also for unsigned types (Returns none if there is no inverse).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#subtract","title":"Operators.subtract","content":"Operators.subtract \nsubtract \nSubtraction between two numbers. Throws an error if the result is negative on unsigned types."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#trySubtract","title":"Operators.trySubtract","content":"Operators.trySubtract \ntrySubtract \nSubtraction between two numbers. Returns None if the result is negative on unsigned types."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#div","title":"Operators.div","content":"Operators.div \ndiv \nDivision between two numbers. If the numbers are not divisible throws an error."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#tryDiv","title":"Operators.tryDiv","content":"Operators.tryDiv \ntryDiv \nDivision between two numbers. Returns None if the numbers are not divisible."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sqrt","title":"Operators.sqrt","content":"Operators.sqrt \nsqrt \nSquare root of a number of any type. Throws an exception if there is no square root."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#trySqrt","title":"Operators.trySqrt","content":"Operators.trySqrt \ntrySqrt \nSquare root of a number of any type. Returns None if there is no square root."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#isqrt","title":"Operators.isqrt","content":"Operators.isqrt \nisqrt \nSquare root of an integral number."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sqrtRem","title":"Operators.sqrtRem","content":"Operators.sqrtRem \nsqrtRem \nSquare root of an integral number."},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#signum","title":"Operators.signum","content":"Operators.signum \nsignum \nSign of the given number\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Rule: signum x * abs x = x "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#signum\u0027","title":"Operators.signum\u0027","content":"Operators.signum\u0027 \nsignum\u0027 \nSign of the given number\n           Works also for unsigned types. \n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Rule: signum x * abs x = x "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#abs","title":"Operators.abs","content":"Operators.abs \nabs \n Gets the absolute value of the given number.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Rule: signum x * abs x = x "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#abs\u0027","title":"Operators.abs\u0027","content":"Operators.abs\u0027 \nabs\u0027 \n Gets the absolute value of the given number.\n           Works also for unsigned types. \n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Rule: signum x * abs x = x "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#choice","title":"Operators.choice","content":"Operators.choice \nchoice \n\n Reduces using alternative operator \u0060\u003C|\u003E\u0060.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#mfilter","title":"Operators.mfilter","content":"Operators.mfilter \nmfilter \n\n Generic filter operation for MonadZero. It returns all values satisfying the predicate, if the predicate returns false will use the empty value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#sum","title":"Operators.sum","content":"Operators.sum \nsum \n\n Folds the sum of all monoid elements in the Foldable.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#implicit","title":"Operators.implicit","content":"Operators.implicit \nimplicit \n\n Converts using the implicit operator. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#dispose","title":"Operators.dispose","content":"Operators.dispose \ndispose \n\n Safely dispose a resource (includes null-checking).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(|Parse|_|)","title":"Operators.(|Parse|_|)","content":"Operators.(|Parse|_|) \n(|Parse|_|) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-operators.html#(|Parsed|_|)","title":"Operators.(|Parsed|_|)","content":"Operators.(|Parsed|_|) \n(|Parsed|_|) \n\n An active recognizer for a generic value parser.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-operators-arrows.html","title":"Arrows","content":"Arrows \nAdditional operators for Arrows related functions which shadows some F# operators for bitwise functions. \nArrows.(\u003C\u003C\u003C) \n(\u003C\u003C\u003C) \nArrows.(\u003E\u003E\u003E) \n(\u003E\u003E\u003E) \nArrows.(\u0026\u0026\u0026) \n(\u0026\u0026\u0026) \nArrows.(|||) \n(|||)"},{"uri":"/FSharpPlus/reference/fsharpplus-operators-arrows.html#(\u003C\u003C\u003C)","title":"Arrows.(\u003C\u003C\u003C)","content":"Arrows.(\u003C\u003C\u003C) \n(\u003C\u003C\u003C) \nRight-to-left morphism composition."},{"uri":"/FSharpPlus/reference/fsharpplus-operators-arrows.html#(\u003E\u003E\u003E)","title":"Arrows.(\u003E\u003E\u003E)","content":"Arrows.(\u003E\u003E\u003E) \n(\u003E\u003E\u003E) \nLeft-to-right morphism composition."},{"uri":"/FSharpPlus/reference/fsharpplus-operators-arrows.html#(\u0026\u0026\u0026)","title":"Arrows.(\u0026\u0026\u0026)","content":"Arrows.(\u0026\u0026\u0026) \n(\u0026\u0026\u0026) \nSends the input to both argument arrows and combine their output. Also known as fanout."},{"uri":"/FSharpPlus/reference/fsharpplus-operators-arrows.html#(|||)","title":"Arrows.(|||)","content":"Arrows.(|||) \n(|||) \nSplits the input between the two argument arrows and merge their outputs. Also known as fanin."},{"uri":"/FSharpPlus/reference/fsharpplus-operators-seq.html","title":"Seq","content":"Seq \n \nSeq.sum \nsum"},{"uri":"/FSharpPlus/reference/fsharpplus-operators-seq.html#sum","title":"Seq.sum","content":"Seq.sum \nsum \n\n Folds all values in the sequence using the monoidal addition.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-option.html","title":"Option","content":"Option \n\n Additional operations on Option\n \nOption.apply \napply \nOption.unzip \nunzip \nOption.zip \nzip \nOption.zip3 \nzip3 \nOption.toResult \ntoResult \nOption.toResultWith \ntoResultWith \nOption.ofResult \nofResult \nOption.protect \nprotect \nOption.ofPair \nofPair"},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#apply","title":"Option.apply","content":"Option.apply \napply \nApplies an option value to an option function."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#unzip","title":"Option.unzip","content":"Option.unzip \nunzip \nIf value is Some, returns both of them tupled. Otherwise it returns None tupled."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#zip","title":"Option.zip","content":"Option.zip \nzip \nIf both value are Some, returns both of them tupled. Otherwise it returns None."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#zip3","title":"Option.zip3","content":"Option.zip3 \nzip3 \nIf all 3 value are Some, returns them tupled. Otherwise it returns None."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#toResult","title":"Option.toResult","content":"Option.toResult \ntoResult \nConverts an option to a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#toResultWith","title":"Option.toResultWith","content":"Option.toResultWith \ntoResultWith \nConverts an option to a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#ofResult","title":"Option.ofResult","content":"Option.ofResult \nofResult \nConverts a Result to an option. \nThe error value (if any) is lost."},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#protect","title":"Option.protect","content":"Option.protect \nprotect \n\n Creates a safe version of the supplied function, which returns an option\u003C\u0027U\u003E instead of throwing exceptions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-option.html#ofPair","title":"Option.ofPair","content":"Option.ofPair \nofPair \nConverts pair of bool and value to Option. \nUseful for handling C# try pattern with \u0060out\u0060 parameter. E.g. \u0060Int.TryParse\u0060 or \u0060Dictionary.TryGetValue\u0060."},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html","title":"Parsing","content":"Parsing \n \nParsing.ParseArray \nParseArray \nParsing.TryParseArray \nTryParseArray \nParsing.parseArray \nparseArray \nParsing.sscanf \nsscanf \nParsing.scanfn \nscanfn \nParsing.tryParseArray \ntryParseArray \nParsing.trySscanf \ntrySscanf \nParsing.tryScanfn \ntryScanfn"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html#parseArray","title":"Parsing.parseArray","content":"Parsing.parseArray \nparseArray \n\n Gets a tuple with the result of parsing each element of a string array.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html#sscanf","title":"Parsing.sscanf","content":"Parsing.sscanf \nsscanf \n\n Gets a tuple with the result of parsing each element of a formatted text.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html#scanfn","title":"Parsing.scanfn","content":"Parsing.scanfn \nscanfn \n\n Gets a tuple with the result of parsing each element of a formatted text from the Console.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html#tryParseArray","title":"Parsing.tryParseArray","content":"Parsing.tryParseArray \ntryParseArray \n\n Gets a tuple with the result of parsing each element of a string array. Returns None in case of failure.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html#trySscanf","title":"Parsing.trySscanf","content":"Parsing.trySscanf \ntrySscanf \n\n Gets a tuple with the result of parsing each element of a formatted text. Returns None in case of failure.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing.html#tryScanfn","title":"Parsing.tryScanfn","content":"Parsing.tryScanfn \ntryScanfn \n\n Gets a tuple with the result of parsing each element of a formatted text from the Console. Returns None in case of failure.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html","title":"ParseArray","content":"ParseArray \n \nParseArray.Invoke \nInvoke \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray \nParseArray.ParseArray \nParseArray"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#Invoke","title":"ParseArray.Invoke","content":"ParseArray.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-parsearray.html#ParseArray","title":"ParseArray.ParseArray","content":"ParseArray.ParseArray \nParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html","title":"TryParseArray","content":"TryParseArray \n \nTryParseArray.Invoke \nInvoke \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray \nTryParseArray.TryParseArray \nTryParseArray"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#Invoke","title":"TryParseArray.Invoke","content":"TryParseArray.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-parsing-tryparsearray.html#TryParseArray","title":"TryParseArray.TryParseArray","content":"TryParseArray.TryParseArray \nTryParseArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html","title":"ResizeArray","content":"ResizeArray \n\n Additional operations on ResizeArray\n \nResizeArray.map \nmap \nResizeArray.apply \napply \nResizeArray.lift2 \nlift2 \nResizeArray.lift3 \nlift3 \nResizeArray.intercalate \nintercalate \nResizeArray.intersperse \nintersperse \nResizeArray.split \nsplit \nResizeArray.replace \nreplace \nResizeArray.findSliceIndex \nfindSliceIndex \nResizeArray.tryFindSliceIndex \ntryFindSliceIndex \nResizeArray.findLastSliceIndex \nfindLastSliceIndex \nResizeArray.tryFindLastSliceIndex \ntryFindLastSliceIndex \nResizeArray.partitionMap \npartitionMap \nResizeArray.map2Shortest \nmap2Shortest \nResizeArray.map3Shortest \nmap3Shortest \nResizeArray.zipShortest \nzipShortest \nResizeArray.zip3Shortest \nzip3Shortest"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#map","title":"ResizeArray.map","content":"ResizeArray.map \nmap \nBuilds a new ResizeArray whose elements are the results of applying the given function\n to each of the elements of the ResizeArray."},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#apply","title":"ResizeArray.apply","content":"ResizeArray.apply \napply \nApplies a ResizeArray of functions to a ResizeArray of values and concatenates them."},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#lift2","title":"ResizeArray.lift2","content":"ResizeArray.lift2 \nlift2 \n\n Combines all values from the first ResizeArray with the second, using the supplied mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#lift3","title":"ResizeArray.lift3","content":"ResizeArray.lift3 \nlift3 \nCombines values from three ResizeArrays and calls a mapping function on this combination."},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#intercalate","title":"ResizeArray.intercalate","content":"ResizeArray.intercalate \nintercalate \n\n Concatenates all elements, using the specified separator between each element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#intersperse","title":"ResizeArray.intersperse","content":"ResizeArray.intersperse \nintersperse \n\n Inserts a separator element between each element in the source ResizeArray.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#split","title":"ResizeArray.split","content":"ResizeArray.split \nsplit \n\n Creates a sequence of arrays by splitting the source array on any of the given separators.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#replace","title":"ResizeArray.replace","content":"ResizeArray.replace \nreplace \n\n Replaces a subsequence of the source array with the given replacement array.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#findSliceIndex","title":"ResizeArray.findSliceIndex","content":"ResizeArray.findSliceIndex \nfindSliceIndex \n\n Returns the index of the first occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#tryFindSliceIndex","title":"ResizeArray.tryFindSliceIndex","content":"ResizeArray.tryFindSliceIndex \ntryFindSliceIndex \n\n Returns the index of the first occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#findLastSliceIndex","title":"ResizeArray.findLastSliceIndex","content":"ResizeArray.findLastSliceIndex \nfindLastSliceIndex \n\n Returns the index of the last occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#tryFindLastSliceIndex","title":"ResizeArray.tryFindLastSliceIndex","content":"ResizeArray.tryFindLastSliceIndex \ntryFindLastSliceIndex \n\n Returns the index of the last occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#partitionMap","title":"ResizeArray.partitionMap","content":"ResizeArray.partitionMap \npartitionMap \n\n Creates two arrays by applying the mapper function to each element in the array\n and classifying the transformed values depending on whether they were wrapped with Choice1Of2 or Choice2Of2.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#map2Shortest","title":"ResizeArray.map2Shortest","content":"ResizeArray.map2Shortest \nmap2Shortest \nSafely build a new ResizeArray whose elements are the results of applying the given function\n to each of the elements of the two ResizeArrays pairwise."},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#map3Shortest","title":"ResizeArray.map3Shortest","content":"ResizeArray.map3Shortest \nmap3Shortest \nSafely build a new ResizeArray whose elements are the results of applying the given function\n to each of the elements of the three ResizeArrays pairwise."},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#zipShortest","title":"ResizeArray.zipShortest","content":"ResizeArray.zipShortest \nzipShortest \n\n Zip safely two ResizeArrays. If one ResizeArray is shorter, excess elements are discarded from the right end of the longer ResizeArray. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-resizearray.html#zip3Shortest","title":"ResizeArray.zip3Shortest","content":"ResizeArray.zip3Shortest \nzip3Shortest \n\n Zip safely three ResizeArrays. If one ResizeArray is shorter, excess elements are discarded from the right end of the longer ResizeArray.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-result.html","title":"Result","content":"Result \n\n Additional operations on Result\u003C\u0027T,\u0027Error\u003E\n \nResult.result \nresult \nResult.throw \nthrow \nResult.apply \napply \nResult.unzip \nunzip \nResult.zip \nzip \nResult.zip3 \nzip3 \nResult.map2 \nmap2 \nResult.map3 \nmap3 \nResult.bimap \nbimap \nResult.flatten \nflatten \nResult.catch \ncatch \nResult.bindError \nbindError \nResult.iterError \niterError \nResult.either \neither \nResult.protect \nprotect \nResult.get \nget \nResult.defaultValue \ndefaultValue \nResult.defaultWith \ndefaultWith \nResult.toChoice \ntoChoice \nResult.ofChoice \nofChoice \nResult.partition \npartition \nResult.apply2With \napply2With \nResult.apply3With \napply3With"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#result","title":"Result.result","content":"Result.result \nresult \n\n Creates an Ok with the supplied value.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#throw","title":"Result.throw","content":"Result.throw \nthrow \n\n Creates an Error With the supplied value.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#apply","title":"Result.apply","content":"Result.apply \napply \n\n Applies the wrapped value to the wrapped function when both are Ok and returns a wrapped result or the first Error.\n \u003Cparam name=\u0022f\u0022\u003EThe function wrapped in an Ok or an Error.\u003C/param\u003E\n \u003Cparam name=\u0022x\u0022\u003EThe value wrapped in an Ok or an Error.\u003C/param\u003E\n \u003Creturns\u003EAn Ok of the function applied to the value, or the first \u003Cc\u003EError\u003C/c\u003E if either the function or the value is \u003Cc\u003EError\u003C/c\u003E.\u003C/returns\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#unzip","title":"Result.unzip","content":"Result.unzip \nunzip \nIf value is Ok, returns both of them tupled. Otherwise it returns the Error value twice in a tuple."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#zip","title":"Result.zip","content":"Result.zip \nzip \nCreates a Result value from a pair of Result values."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#zip3","title":"Result.zip3","content":"Result.zip3 \nzip3 \nCreates a Result value from a three Result values."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#map2","title":"Result.map2","content":"Result.map2 \nmap2 \nCreates a Result value from a pair of Result values, using a function to combine them."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#map3","title":"Result.map3","content":"Result.map3 \nmap3 \nCreates a Result value from three Result values, using a function to combine them."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#bimap","title":"Result.bimap","content":"Result.bimap \nbimap \nMaps both Ok and Error of a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#flatten","title":"Result.flatten","content":"Result.flatten \nflatten \nFlattens two nested Results. \n\u003Ccode\u003Eflatten\u003C/code\u003E is equivalent to \u003Ccode\u003Ebind id\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#catch","title":"Result.catch","content":"Result.catch \ncatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#bindError","title":"Result.bindError","content":"Result.bindError \nbindError \nIf the input value is an Ok leaves it unchanged, otherwise maps the Error value and flattens the resulting nested Result."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#iterError","title":"Result.iterError","content":"Result.iterError \niterError \n\u003Ccode\u003EiterError f inp\u003C/code\u003E executes \u003Ccode\u003Ematch inp with Ok _ -\u0026gt; () | Error x -\u0026gt; f x\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#either","title":"Result.either","content":"Result.either \neither \nExtracts a value from either side of a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#protect","title":"Result.protect","content":"Result.protect \nprotect \n\n Creates a safe version of the supplied function, which returns a Result\u003C\u0027U,exn\u003E instead of throwing exceptions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#get","title":"Result.get","content":"Result.get \nget \n\n Gets the \u0027Ok\u0027 value. If it\u0027s an \u0027Error\u0027 this function will throw an exception.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#defaultValue","title":"Result.defaultValue","content":"Result.defaultValue \ndefaultValue \nGets the value of the result if the result is \u003Ccode\u003EOk\u003C/code\u003E, otherwise returns the specified default value. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#defaultWith","title":"Result.defaultWith","content":"Result.defaultWith \ndefaultWith \nGets the value of the result if the result is \u003Ccode\u003EOk\u003C/code\u003E, otherwise evaluates \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E and returns the result. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#toChoice","title":"Result.toChoice","content":"Result.toChoice \ntoChoice \n\n Converts a Result\u003C\u0027T,\u0027Error\u003E to a Choice\u003C\u0027T,\u0027Error\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#ofChoice","title":"Result.ofChoice","content":"Result.ofChoice \nofChoice \n\n Creates a Result\u003C\u0027T,\u0027Error\u003E from a Choice\u003C\u0027T,\u0027Error\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#partition","title":"Result.partition","content":"Result.partition \npartition \n\n Creates two lists by classifying the values depending on whether they were wrapped with Ok or Error.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#apply2With","title":"Result.apply2With","content":"Result.apply2With \napply2With \n"},{"uri":"/FSharpPlus/reference/fsharpplus-result.html#apply3With","title":"Result.apply3With","content":"Result.apply3With \napply3With \n"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html","title":"Seq","content":"Seq \n\n Additional operations on Seq\n \nSeq.bind \nbind \nSeq.apply \napply \nSeq.lift2 \nlift2 \nSeq.lift3 \nlift3 \nSeq.foldBack \nfoldBack \nSeq.chunkBy \nchunkBy \nSeq.intersperse \nintersperse \nSeq.intercalate \nintercalate \nSeq.split \nsplit \nSeq.replace \nreplace \nSeq.drop \ndrop \nSeq.replicate \nreplicate \nSeq.toIReadOnlyList \ntoIReadOnlyList \nSeq.findSliceIndex \nfindSliceIndex \nSeq.tryFindSliceIndex \ntryFindSliceIndex \nSeq.findLastSliceIndex \nfindLastSliceIndex \nSeq.tryFindLastSliceIndex \ntryFindLastSliceIndex \nSeq.choosei \nchoosei"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#bind","title":"Seq.bind","content":"Seq.bind \nbind \nApplies the given function to each element of the sequence and concatenates the results. \nRemember sequence is lazy, effects are delayed until it is enumerated.This is the same as Seq.collect but the type of the mapping function is not flexible."},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#apply","title":"Seq.apply","content":"Seq.apply \napply \nApplies a sequence of functions to a sequence of values and concatenates them."},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#lift2","title":"Seq.lift2","content":"Seq.lift2 \nlift2 \n\n Combines all values from the first seq with the second, using the supplied mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#lift3","title":"Seq.lift3","content":"Seq.lift3 \nlift3 \nCombines values from three seq and calls a mapping function on this combination."},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#foldBack","title":"Seq.foldBack","content":"Seq.foldBack \nfoldBack \nApplies a function to each element of the collection, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ef i0 (... (f iN s)...)\u003C/code\u003E \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#chunkBy","title":"Seq.chunkBy","content":"Seq.chunkBy \nchunkBy \n\n Chunks the seq up into groups with the same projected key by applying\n the key-generating projection function to each element and yielding a sequence of \n keys tupled with values.\n  \n\n Each key is tupled with an array of all adjacent elements that match \n to the key, therefore keys are not unique but can\u0027t be adjacent\n as each time the key changes a new group is yield.\n \n The ordering of the original sequence is respected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#intersperse","title":"Seq.intersperse","content":"Seq.intersperse \nintersperse \n\n Inserts a separator element between each element in the source seq.\nhttp://codebetter.com/matthewpodwysocki/2009/05/06/functionally-implementing-intersperse/\n"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#intercalate","title":"Seq.intercalate","content":"Seq.intercalate \nintercalate \n\n Inserts a separator between each element in the source sequence.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#split","title":"Seq.split","content":"Seq.split \nsplit \n\n Creates a sequence of sequences by splitting the source sequence on any of the given separators.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#replace","title":"Seq.replace","content":"Seq.replace \nreplace \n\n Replaces a subsequence of the source seq with the given replacement seq.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#drop","title":"Seq.drop","content":"Seq.drop \ndrop \nReturns a sequence that drops N elements of the original sequence and then yields the\n remaining elements of the sequence. \nWhen count exceeds the number of elements in the sequence it\n returns an empty sequence instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#replicate","title":"Seq.replicate","content":"Seq.replicate \nreplicate \nCreates a sequence by replicating the given initial value. \n\n Note: this function has since been added to FSharp.Core.\n It will be removed in next major release of FSharpPlus.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#toIReadOnlyList","title":"Seq.toIReadOnlyList","content":"Seq.toIReadOnlyList \ntoIReadOnlyList \nConverts a seq to an IReadOnlyList (from System.Collections.Generic)."},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#findSliceIndex","title":"Seq.findSliceIndex","content":"Seq.findSliceIndex \nfindSliceIndex \n\n Gets the index of the first occurrence of the specified slice in the source.\n  \n\n It is assumed that 1) the slice is finite and 2) either the source is finite or actually contains the slice, otherwise it will not return forever.\n The slice will always be iterated to the end.\n The source will be iterated until the slice is found or it reaches the end.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#tryFindSliceIndex","title":"Seq.tryFindSliceIndex","content":"Seq.tryFindSliceIndex \ntryFindSliceIndex \n\n Gets the index of the first occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n  \n\n It is assumed that 1) the slice is finite and 2) either the source is finite or actually contains the slice, otherwise it will not return forever.\n The slice will always be iterated to the end.\n The source will be iterated until the slice is found or it reaches the end.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#findLastSliceIndex","title":"Seq.findLastSliceIndex","content":"Seq.findLastSliceIndex \nfindLastSliceIndex \n\n Gets the index of the last occurrence of the specified slice in the source.\n  \n\n It is assumed that both the slice and the source are finite, otherwise it will not return forever.\n Both the slice and the source will always be iterated to the end.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#tryFindLastSliceIndex","title":"Seq.tryFindLastSliceIndex","content":"Seq.tryFindLastSliceIndex \ntryFindLastSliceIndex \n\n Gets the index of the last occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n  \n\n It is assumed that both the slice and the source are finite, otherwise it will not return forever.\n Both the slice and the source will always be iterated to the end.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-seq.html#choosei","title":"Seq.choosei","content":"Seq.choosei \nchoosei \nChoose with access to the index"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html","title":"String","content":"String \n\n Additional operations on String\n \nString.intercalate \nintercalate \nString.intersperse \nintersperse \nString.split \nsplit \nString.replace \nreplace \nString.isSubString \nisSubString \nString.startsWith \nstartsWith \nString.endsWith \nendsWith \nString.contains \ncontains \nString.toUpper \ntoUpper \nString.toLower \ntoLower \nString.trimWhiteSpaces \ntrimWhiteSpaces \nString.trimStartWhiteSpaces \ntrimStartWhiteSpaces \nString.trimEndWhiteSpaces \ntrimEndWhiteSpaces \nString.normalize \nnormalize \nString.removeDiacritics \nremoveDiacritics \nString.padLeft \npadLeft \nString.padLeftWith \npadLeftWith \nString.padRight \npadRight \nString.padRightWith \npadRightWith \nString.trim \ntrim \nString.trimStart \ntrimStart \nString.trimEnd \ntrimEnd \nString.toArray \ntoArray \nString.ofArray \nofArray \nString.toList \ntoList \nString.ofList \nofList \nString.toSeq \ntoSeq \nString.ofSeq \nofSeq \nString.item \nitem \nString.tryItem \ntryItem \nString.rev \nrev \nString.take \ntake \nString.skip \nskip \nString.takeWhile \ntakeWhile \nString.skipWhile \nskipWhile \nString.tryHead \ntryHead \nString.tryLast \ntryLast \nString.truncate \ntruncate \nString.drop \ndrop \nString.findIndex \nfindIndex \nString.tryFindIndex \ntryFindIndex \nString.findSliceIndex \nfindSliceIndex \nString.findLastSliceIndex \nfindLastSliceIndex \nString.tryFindSliceIndex \ntryFindSliceIndex \nString.tryFindLastSliceIndex \ntryFindLastSliceIndex \nString.toCodePoints \ntoCodePoints \nString.ofCodePoints \nofCodePoints \nString.getBytes \ngetBytes"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#intercalate","title":"String.intercalate","content":"String.intercalate \nintercalate \n\n Concatenates all elements, using the specified separator between each element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#intersperse","title":"String.intersperse","content":"String.intersperse \nintersperse \n\n Inserts a separator char between each char in the source string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#split","title":"String.split","content":"String.split \nsplit \n\n Creates a sequence of strings by splitting the source string on any of the given separators.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#replace","title":"String.replace","content":"String.replace \nreplace \n\n Replaces a substring with the given replacement string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#isSubString","title":"String.isSubString","content":"String.isSubString \nisSubString \n\n Does the source string contain the given subString? -- function wrapper for String.Contains method.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#startsWith","title":"String.startsWith","content":"String.startsWith \nstartsWith \n\n Does the source string start with the given subString? -- function wrapper for String.StartsWith method using InvariantCulture.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#endsWith","title":"String.endsWith","content":"String.endsWith \nendsWith \n\n Does the source string end with the given subString? -- function wrapper for String.EndsWith method using InvariantCulture.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#contains","title":"String.contains","content":"String.contains \ncontains \n\n Does the source string contain the given character?\n Use \u0060String.isSubstring\u0060 to check for strings.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#toUpper","title":"String.toUpper","content":"String.toUpper \ntoUpper \n\n Converts to uppercase -- nullsafe function wrapper for String.ToUpperInvariant method.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#toLower","title":"String.toLower","content":"String.toLower \ntoLower \n\n Converts to lowercase -- nullsafe function wrapper for String.ToLowerInvariant method.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#trimWhiteSpaces","title":"String.trimWhiteSpaces","content":"String.trimWhiteSpaces \ntrimWhiteSpaces \n\n Trims leading and trailing white spaces -- function wrapper for String.Trim method.\n \n Note this is distinct from trim which trims the given characters,\n not white spaces.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#trimStartWhiteSpaces","title":"String.trimStartWhiteSpaces","content":"String.trimStartWhiteSpaces \ntrimStartWhiteSpaces \n\n Trims leading white spaces -- function wrapper for String.TrimStart method.\n \n Note this is distinct from trim which trims the given characters,\n not white spaces.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#trimEndWhiteSpaces","title":"String.trimEndWhiteSpaces","content":"String.trimEndWhiteSpaces \ntrimEndWhiteSpaces \n\n Trims trailing white spaces -- function wrapper for String.TrimEnd method.\n \n Note this is distinct from trim which trims the given characters,\n not white spaces.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#normalize","title":"String.normalize","content":"String.normalize \nnormalize \n\n Returns a new string whose textual value is the same as this string, but whose binary representation is in the specified Unicode normalization form.\n \n This is a null safe function wrapper of the String.Normalize method.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#removeDiacritics","title":"String.removeDiacritics","content":"String.removeDiacritics \nremoveDiacritics \n\n Removes diacritics (accents) from the given source string.\n \n The approach uses \u0060normalize\u0060 to split the input string into constituent glyphs\n (basically separating the \u0022base\u0022 characters from the diacritics) and then scans\n the result and retains only the base characters. \n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#padLeft","title":"String.padLeft","content":"String.padLeft \npadLeft \n\n Pads the beginning of the given string with spaces so that it has a specified total length.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#padLeftWith","title":"String.padLeftWith","content":"String.padLeftWith \npadLeftWith \n\n Pads the beginning of the given string with a specified character so that it has a specified total length.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#padRight","title":"String.padRight","content":"String.padRight \npadRight \n\n Pads the end of the given string with spaces so that it has a specified total length.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#padRightWith","title":"String.padRightWith","content":"String.padRightWith \npadRightWith \n\n Pads the end of the given string with a specified character so that it has a specified total length.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#trim","title":"String.trim","content":"String.trim \ntrim \n\n Removes all leading and trailing occurrences of specified characters from the given string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#trimStart","title":"String.trimStart","content":"String.trimStart \ntrimStart \n\n Removes all leading occurrences of specified characters from the given string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#trimEnd","title":"String.trimEnd","content":"String.trimEnd \ntrimEnd \n\n Removes all trailing occurrences of specified characters from the given string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#toArray","title":"String.toArray","content":"String.toArray \ntoArray \n\n Converts the given string to an array of chars.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#ofArray","title":"String.ofArray","content":"String.ofArray \nofArray \n\n Converts an array of chars to a String.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#toList","title":"String.toList","content":"String.toList \ntoList \n\n Converts the given string to a list of chars.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#ofList","title":"String.ofList","content":"String.ofList \nofList \n\n Converts a list of chars to a String.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#toSeq","title":"String.toSeq","content":"String.toSeq \ntoSeq \n\n Converts the given string to a seq of chars.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#ofSeq","title":"String.ofSeq","content":"String.ofSeq \nofSeq \n\n Converts a seq of chars to a String.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#item","title":"String.item","content":"String.item \nitem \n\n (Unsafely) Returns the char at the given index in the source string.\n \n This is a function wrapper for \u0060source.[index]\u0060 method.\n \n Note: this is not exception safe, and will throw System.IndexOutOfRangeException when\n the given index is out of bounds.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#tryItem","title":"String.tryItem","content":"String.tryItem \ntryItem \n\n Returns the char (as an Option) at the given index in the source string,\n returning \u0060None\u0060 if out of bounds.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#rev","title":"String.rev","content":"String.rev \nrev \n\n Reverses the given string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#take","title":"String.take","content":"String.take \ntake \n\n (Unsafely) Takes the first count chars in the string.\n Use \u0060String.truncate\u0060 for a safe version.\n \n Note: will throw System.ArgumentOutOfRangeException if you try to take more than the\n number of chars in the string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#skip","title":"String.skip","content":"String.skip \nskip \n\n (Unsafely) Skips over the first count chars in the string.\n Use \u0060String.drop\u0060 for a safe version.\n \n Note: will throw System.ArgumentOutOfRangeException if you try to skip more than the\n number of chars in the string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#takeWhile","title":"String.takeWhile","content":"String.takeWhile \ntakeWhile \n\n Takes chars from the source string while the given predicate is true.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#skipWhile","title":"String.skipWhile","content":"String.skipWhile \nskipWhile \n\n Skips over chars from the source string while the given predicate is true.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#tryHead","title":"String.tryHead","content":"String.tryHead \ntryHead \nGets the first char of the string, or\n \u003Ccode\u003ENone\u003C/code\u003E if the string is empty."},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#tryLast","title":"String.tryLast","content":"String.tryLast \ntryLast \nGets the last char of the string, or\n \u003Ccode\u003ENone\u003C/code\u003E if the string is empty."},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#truncate","title":"String.truncate","content":"String.truncate \ntruncate \n\n Returns a string that has at most N characters from the beginning of the original string.\n It returns the original string if it is shorter than count.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#drop","title":"String.drop","content":"String.drop \ndrop \n\n Returns a string that drops first N characters of the original string.\n When count exceeds the length of the string it returns an empty string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#findIndex","title":"String.findIndex","content":"String.findIndex \nfindIndex \n\n Finds the first index of the char in the substring which satisfies the given predicate.\n \n Note: throws an ArgumentException when not found.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#tryFindIndex","title":"String.tryFindIndex","content":"String.tryFindIndex \ntryFindIndex \n\n Tries to find the first index of the char in the substring which satisfies the given predicate.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#findSliceIndex","title":"String.findSliceIndex","content":"String.findSliceIndex \nfindSliceIndex \n\n Returns the index of the first occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#findLastSliceIndex","title":"String.findLastSliceIndex","content":"String.findLastSliceIndex \nfindLastSliceIndex \n\n Returns the index of the last occurrence of the specified slice in the source.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#tryFindSliceIndex","title":"String.tryFindSliceIndex","content":"String.tryFindSliceIndex \ntryFindSliceIndex \n\n Returns the index of the first occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#tryFindLastSliceIndex","title":"String.tryFindLastSliceIndex","content":"String.tryFindLastSliceIndex \ntryFindLastSliceIndex \n\n Returns the index of the last occurrence of the specified slice in the source.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if not found.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#toCodePoints","title":"String.toCodePoints","content":"String.toCodePoints \ntoCodePoints \n\n Converts the given string to an array of Int32 code-points (the actual Unicode Code Point number).\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#ofCodePoints","title":"String.ofCodePoints","content":"String.ofCodePoints \nofCodePoints \n\n Converts the array of Int32 code-points (the actual Unicode Code Point number) to a string.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-string.html#getBytes","title":"String.getBytes","content":"String.getBytes \ngetBytes \n\n Converts a string to a byte-array using the specified encoding.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html","title":"Task","content":"Task \n\n Additional operations on Task\u003C\u0027T\u003E\n \nTask.map \nmap \nTask.lift2 \nlift2 \nTask.lift3 \nlift3 \nTask.map2 \nmap2 \nTask.map3 \nmap3 \nTask.apply \napply \nTask.zipSequentially \nzipSequentially \nTask.zip \nzip \nTask.zip3 \nzip3 \nTask.join \njoin \nTask.bind \nbind \nTask.ignore \nignore \nTask.tryWith \ntryWith \nTask.tryFinally \ntryFinally \nTask.using \nusing \nTask.result \nresult \nTask.raise \nraise"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#map","title":"Task.map","content":"Task.map \nmap \nCreates a task workflow from \u0027source\u0027 another, mapping its result with \u0027f\u0027."},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#lift2","title":"Task.lift2","content":"Task.lift2 \nlift2 \nCreates a task workflow from two workflows \u0027x\u0027 and \u0027y\u0027, mapping its results with \u0027f\u0027. \nWorkflows are run in sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#lift3","title":"Task.lift3","content":"Task.lift3 \nlift3 \nCreates a task workflow from three workflows \u0027x\u0027, \u0027y\u0027 and z, mapping its results with \u0027f\u0027. \nWorkflows are run in sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#map2","title":"Task.map2","content":"Task.map2 \nmap2 \nCreates a Task workflow from two workflows, mapping its results with a specified function. \nSimilar to lift2 but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#map3","title":"Task.map3","content":"Task.map3 \nmap3 \nCreates a Task workflow from three workflows, mapping its results with a specified function. \nSimilar to lift3 but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#apply","title":"Task.apply","content":"Task.apply \napply \nCreates a task workflow that is the result of applying the resulting function of a task workflow\n to the resulting value of another task workflow"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#zipSequentially","title":"Task.zipSequentially","content":"Task.zipSequentially \nzipSequentially \nCreates a task workflow from two workflows \u0027x\u0027 and \u0027y\u0027, tupling its results."},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#zip","title":"Task.zip","content":"Task.zip \nzip \nCreates a task workflow from two workflows \u0027task1\u0027 and \u0027task2\u0027, tupling its results. \nSimilar to zipSequentially but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#zip3","title":"Task.zip3","content":"Task.zip3 \nzip3 \nCreates a task workflow from two workflows \u0027task1\u0027, \u0027task2\u0027 and \u0027task3\u0027, tupling its results. \nSimilar to zipSequentially but although workflows are started in sequence they might end independently in different order\n and all errors are collected.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#join","title":"Task.join","content":"Task.join \njoin \n\n Flattens two nested tasks into one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#bind","title":"Task.bind","content":"Task.bind \nbind \nCreates a task workflow from \u0027source\u0027 workflow, mapping and flattening its result with \u0027f\u0027."},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#ignore","title":"Task.ignore","content":"Task.ignore \nignore \nCreates a task that ignores the result of the source task. \nIt can be used to convert non-generic Task to unit Task."},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#tryWith","title":"Task.tryWith","content":"Task.tryWith \ntryWith \n\n Used to de-sugar try .. with .. blocks in Computation Expressions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#tryFinally","title":"Task.tryFinally","content":"Task.tryFinally \ntryFinally \n\n Used to de-sugar try .. finally .. blocks in Computation Expressions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#using","title":"Task.using","content":"Task.using \nusing \n\n Used to de-sugar use .. blocks in Computation Expressions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#result","title":"Task.result","content":"Task.result \nresult \n\n Creates a Task from a value\n"},{"uri":"/FSharpPlus/reference/fsharpplus-task.html#raise","title":"Task.raise","content":"Task.raise \nraise \n\n Raises an exception in the Task\n"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple2.html","title":"Tuple2","content":"Tuple2 \n\n Additional operations on Tuple (,)\n \nTuple2.mapItem1 \nmapItem1 \nTuple2.mapItem2 \nmapItem2"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple2.html#mapItem1","title":"Tuple2.mapItem1","content":"Tuple2.mapItem1 \nmapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple2.html#mapItem2","title":"Tuple2.mapItem2","content":"Tuple2.mapItem2 \nmapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple3.html","title":"Tuple3","content":"Tuple3 \n\n Additional operations on Tuple (,,)\n \nTuple3.mapItem1 \nmapItem1 \nTuple3.mapItem2 \nmapItem2 \nTuple3.mapItem3 \nmapItem3"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple3.html#mapItem1","title":"Tuple3.mapItem1","content":"Tuple3.mapItem1 \nmapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple3.html#mapItem2","title":"Tuple3.mapItem2","content":"Tuple3.mapItem2 \nmapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-tuple3.html#mapItem3","title":"Tuple3.mapItem3","content":"Tuple3.mapItem3 \nmapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html","title":"ValueOption","content":"ValueOption \n\n Additional operations on ValueOption\n \nValueOption.apply \napply \nValueOption.unzip \nunzip \nValueOption.zip \nzip \nValueOption.zip3 \nzip3 \nValueOption.toResult \ntoResult \nValueOption.toResultWith \ntoResultWith \nValueOption.ofResult \nofResult \nValueOption.protect \nprotect \nValueOption.ofPair \nofPair \nValueOption.toOption \ntoOption \nValueOption.ofOption \nofOption"},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#apply","title":"ValueOption.apply","content":"ValueOption.apply \napply \nApplies an option value to an option function."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#unzip","title":"ValueOption.unzip","content":"ValueOption.unzip \nunzip \nIf value is ValueSome, returns both of them tupled. Otherwise it returns ValueNone tupled."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#zip","title":"ValueOption.zip","content":"ValueOption.zip \nzip \nIf both value are ValueSome, returns both of them tupled. Otherwise it returns ValueNone."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#zip3","title":"ValueOption.zip3","content":"ValueOption.zip3 \nzip3 \nIf all 3 value are ValueSome, returns them tupled. Otherwise it returns ValueNone."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#toResult","title":"ValueOption.toResult","content":"ValueOption.toResult \ntoResult \nConverts an option to a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#toResultWith","title":"ValueOption.toResultWith","content":"ValueOption.toResultWith \ntoResultWith \nConverts an option to a Result."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#ofResult","title":"ValueOption.ofResult","content":"ValueOption.ofResult \nofResult \nConverts a Result to an option. \nThe error value (if any) is lost."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#protect","title":"ValueOption.protect","content":"ValueOption.protect \nprotect \n\n Creates a safe version of the supplied function, which returns an voption\u003C\u0027U\u003E instead of throwing exceptions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#ofPair","title":"ValueOption.ofPair","content":"ValueOption.ofPair \nofPair \nConverts pair of bool and value to ValueOption. \nUseful for handling C# try pattern with \u0060out\u0060 parameter. E.g. \u0060Int.TryParse\u0060 or \u0060Dictionary.TryGetValue\u0060."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#toOption","title":"ValueOption.toOption","content":"ValueOption.toOption \ntoOption \nConverts a ValueOption to an Option."},{"uri":"/FSharpPlus/reference/fsharpplus-valueoption.html#ofOption","title":"ValueOption.ofOption","content":"ValueOption.ofOption \nofOption \nConverts an Option to a ValueOption."},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple2.html","title":"ValueTuple2","content":"ValueTuple2 \n\n Additional operations on ValueTuple (,)\n \nValueTuple2.mapItem1 \nmapItem1 \nValueTuple2.mapItem2 \nmapItem2"},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple2.html#mapItem1","title":"ValueTuple2.mapItem1","content":"ValueTuple2.mapItem1 \nmapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple2.html#mapItem2","title":"ValueTuple2.mapItem2","content":"ValueTuple2.mapItem2 \nmapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple3.html","title":"ValueTuple3","content":"ValueTuple3 \n\n Additional operations on ValueTuple (,,)\n \nValueTuple3.mapItem1 \nmapItem1 \nValueTuple3.mapItem2 \nmapItem2 \nValueTuple3.mapItem3 \nmapItem3"},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple3.html#mapItem1","title":"ValueTuple3.mapItem1","content":"ValueTuple3.mapItem1 \nmapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple3.html#mapItem2","title":"ValueTuple3.mapItem2","content":"ValueTuple3.mapItem2 \nmapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-valuetuple3.html#mapItem3","title":"ValueTuple3.mapItem3","content":"ValueTuple3.mapItem3 \nmapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html","title":"TryBlock","content":"TryBlock \n \nTryBlock.False \nFalse \nTryBlock.True \nTrue \nTryBlock.While \nWhile \nTryBlock.MessageTryWith \nMessageTryWith \nTryBlock.CodeTryWith \nCodeTryWith \nTryBlock.MessageTryFinally \nMessageTryFinally \nTryBlock.CodeTryFinally \nCodeTryFinally \nTryBlock.MessageWhile \nMessageWhile \nTryBlock.CodeWhile \nCodeWhile"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html#MessageTryWith","title":"TryBlock.MessageTryWith","content":"TryBlock.MessageTryWith \nMessageTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html#CodeTryWith","title":"TryBlock.CodeTryWith","content":"TryBlock.CodeTryWith \nCodeTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html#MessageTryFinally","title":"TryBlock.MessageTryFinally","content":"TryBlock.MessageTryFinally \nMessageTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html#CodeTryFinally","title":"TryBlock.CodeTryFinally","content":"TryBlock.CodeTryFinally \nCodeTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html#MessageWhile","title":"TryBlock.MessageWhile","content":"TryBlock.MessageWhile \nMessageWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock.html#CodeWhile","title":"TryBlock.CodeWhile","content":"TryBlock.CodeWhile \nCodeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock-false.html","title":"False","content":"False \n \nFalse.False \nFalse"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock-false.html#False","title":"False.False","content":"False.False \nFalse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock-true.html","title":"True","content":"True \n \nTrue.True \nTrue"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock-true.html#True","title":"True.True","content":"True.True \nTrue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock-while.html","title":"While","content":"While \n \nWhile.While \nWhile"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryblock-while.html#While","title":"While.While","content":"While.While \nWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapplivativeconts.html","title":"ZipApplivativeConts","content":"ZipApplivativeConts \n \nZipApplivativeConts.MessagePure \nMessagePure \nZipApplivativeConts.Code \nCode"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapplivativeconts.html#MessagePure","title":"ZipApplivativeConts.MessagePure","content":"ZipApplivativeConts.MessagePure \nMessagePure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapplivativeconts.html#Code","title":"ZipApplivativeConts.Code","content":"ZipApplivativeConts.Code \nCode \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs.html","title":"Abs","content":"Abs \n \nAbs.Abs \nAbs \nAbs.Abs \nAbs \nAbs.Abs \nAbs \nAbs.Abs \nAbs \nAbs.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs.html#Abs","title":"Abs.Abs","content":"Abs.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs.html#Abs","title":"Abs.Abs","content":"Abs.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs.html#Abs","title":"Abs.Abs","content":"Abs.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs.html#Abs","title":"Abs.Abs","content":"Abs.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs.html#Invoke","title":"Abs.Invoke","content":"Abs.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html","title":"Abs\u0027","content":"Abs\u0027 \n \nAbs\u0027.Abs \nAbs \nAbs\u0027.Abs \nAbs \nAbs\u0027.Abs \nAbs \nAbs\u0027.Abs \nAbs \nAbs\u0027.Abs \nAbs \nAbs\u0027.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html#Abs","title":"Abs\u0027.Abs","content":"Abs\u0027.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html#Abs","title":"Abs\u0027.Abs","content":"Abs\u0027.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html#Abs","title":"Abs\u0027.Abs","content":"Abs\u0027.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html#Abs","title":"Abs\u0027.Abs","content":"Abs\u0027.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html#Abs","title":"Abs\u0027.Abs","content":"Abs\u0027.Abs \nAbs \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-abs\u0027.html#Invoke","title":"Abs\u0027.Invoke","content":"Abs\u0027.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html","title":"AcLeft","content":"AcLeft \n \nAcLeft.Invoke \nInvoke \nAcLeft.InvokeOnInstance \nInvokeOnInstance \nAcLeft.Left \nLeft \nAcLeft.Left \nLeft \nAcLeft.Left \nLeft \nAcLeft.Left \nLeft"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html#Invoke","title":"AcLeft.Invoke","content":"AcLeft.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html#InvokeOnInstance","title":"AcLeft.InvokeOnInstance","content":"AcLeft.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html#Left","title":"AcLeft.Left","content":"AcLeft.Left \nLeft \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html#Left","title":"AcLeft.Left","content":"AcLeft.Left \nLeft \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html#Left","title":"AcLeft.Left","content":"AcLeft.Left \nLeft \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acleft.html#Left","title":"AcLeft.Left","content":"AcLeft.Left \nLeft \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html","title":"AcMerge","content":"AcMerge \n \nAcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \nAcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \nAcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \nAcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \nAcMerge.Invoke \nInvoke \nAcMerge.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html#\u0060\u0060\u002B\u002B\u002B\u0060\u0060","title":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060","content":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html#\u0060\u0060\u002B\u002B\u002B\u0060\u0060","title":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060","content":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html#\u0060\u0060\u002B\u002B\u002B\u0060\u0060","title":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060","content":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html#\u0060\u0060\u002B\u002B\u002B\u0060\u0060","title":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060","content":"AcMerge.\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n\u0060\u0060\u002B\u002B\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html#Invoke","title":"AcMerge.Invoke","content":"AcMerge.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acmerge.html#InvokeOnInstance","title":"AcMerge.InvokeOnInstance","content":"AcMerge.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html","title":"AcRight","content":"AcRight \n \nAcRight.Invoke \nInvoke \nAcRight.InvokeOnInstance \nInvokeOnInstance \nAcRight.Right \nRight \nAcRight.Right \nRight \nAcRight.Right \nRight \nAcRight.Right \nRight"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html#Invoke","title":"AcRight.Invoke","content":"AcRight.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html#InvokeOnInstance","title":"AcRight.InvokeOnInstance","content":"AcRight.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html#Right","title":"AcRight.Right","content":"AcRight.Right \nRight \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html#Right","title":"AcRight.Right","content":"AcRight.Right \nRight \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html#Right","title":"AcRight.Right","content":"AcRight.Right \nRight \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-acright.html#Right","title":"AcRight.Right","content":"AcRight.Right \nRight \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html","title":"App","content":"App \n \nApp.App \nApp \nApp.App \nApp \nApp.App \nApp \nApp.App \nApp \nApp.Invoke \nInvoke \nApp.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html#App","title":"App.App","content":"App.App \nApp \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html#App","title":"App.App","content":"App.App \nApp \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html#App","title":"App.App","content":"App.App \nApp \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html#App","title":"App.App","content":"App.App \nApp \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html#Invoke","title":"App.Invoke","content":"App.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-app.html#InvokeOnInstance","title":"App.InvokeOnInstance","content":"App.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html","title":"Append","content":"Append \n \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nAppend.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Append.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-append.html#Invoke","title":"Append.Invoke","content":"Append.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html","title":"Apply","content":"Apply \n \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \nApply.Invoke \nInvoke \nApply.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#\u0060\u0060\u003C*\u003E\u0060\u0060","title":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060","content":"Apply.\u0060\u0060\u003C*\u003E\u0060\u0060 \n\u0060\u0060\u003C*\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#Invoke","title":"Apply.Invoke","content":"Apply.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-apply.html#InvokeOnInstance","title":"Apply.InvokeOnInstance","content":"Apply.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html","title":"Arr","content":"Arr \n \nArr.Arr \nArr \nArr.Arr \nArr \nArr.Arr \nArr \nArr.Arr \nArr \nArr.Invoke \nInvoke \nArr.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html#Arr","title":"Arr.Arr","content":"Arr.Arr \nArr \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html#Arr","title":"Arr.Arr","content":"Arr.Arr \nArr \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html#Arr","title":"Arr.Arr","content":"Arr.Arr \nArr \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html#Arr","title":"Arr.Arr","content":"Arr.Arr \nArr \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html#Invoke","title":"Arr.Invoke","content":"Arr.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arr.html#InvokeOnInstance","title":"Arr.InvokeOnInstance","content":"Arr.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html","title":"ArrCombine","content":"ArrCombine \n \nArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \nArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \nArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \nArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \nArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \nArrCombine.Invoke \nInvoke \nArrCombine.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#\u0060\u0060***\u0060\u0060","title":"ArrCombine.\u0060\u0060***\u0060\u0060","content":"ArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#\u0060\u0060***\u0060\u0060","title":"ArrCombine.\u0060\u0060***\u0060\u0060","content":"ArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#\u0060\u0060***\u0060\u0060","title":"ArrCombine.\u0060\u0060***\u0060\u0060","content":"ArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#\u0060\u0060***\u0060\u0060","title":"ArrCombine.\u0060\u0060***\u0060\u0060","content":"ArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#\u0060\u0060***\u0060\u0060","title":"ArrCombine.\u0060\u0060***\u0060\u0060","content":"ArrCombine.\u0060\u0060***\u0060\u0060 \n\u0060\u0060***\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#Invoke","title":"ArrCombine.Invoke","content":"ArrCombine.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrcombine.html#InvokeOnInstance","title":"ArrCombine.InvokeOnInstance","content":"ArrCombine.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html","title":"ArrFirst","content":"ArrFirst \n \nArrFirst.First \nFirst \nArrFirst.First \nFirst \nArrFirst.First \nFirst \nArrFirst.First \nFirst \nArrFirst.Invoke \nInvoke \nArrFirst.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html#First","title":"ArrFirst.First","content":"ArrFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html#First","title":"ArrFirst.First","content":"ArrFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html#First","title":"ArrFirst.First","content":"ArrFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html#First","title":"ArrFirst.First","content":"ArrFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html#Invoke","title":"ArrFirst.Invoke","content":"ArrFirst.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrfirst.html#InvokeOnInstance","title":"ArrFirst.InvokeOnInstance","content":"ArrFirst.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html","title":"ArrSecond","content":"ArrSecond \n \nArrSecond.Invoke \nInvoke \nArrSecond.InvokeOnInstance \nInvokeOnInstance \nArrSecond.Second \nSecond \nArrSecond.Second \nSecond \nArrSecond.Second \nSecond \nArrSecond.Second \nSecond \nArrSecond.Second \nSecond"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#Invoke","title":"ArrSecond.Invoke","content":"ArrSecond.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#InvokeOnInstance","title":"ArrSecond.InvokeOnInstance","content":"ArrSecond.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#Second","title":"ArrSecond.Second","content":"ArrSecond.Second \nSecond \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#Second","title":"ArrSecond.Second","content":"ArrSecond.Second \nSecond \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#Second","title":"ArrSecond.Second","content":"ArrSecond.Second \nSecond \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#Second","title":"ArrSecond.Second","content":"ArrSecond.Second \nSecond \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-arrsecond.html#Second","title":"ArrSecond.Second","content":"ArrSecond.Second \nSecond \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ask.html","title":"Ask","content":"Ask \n \nAsk.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ask.html#Invoke","title":"Ask.Invoke","content":"Ask.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html","title":"Bifold","content":"Bifold \n \nBifold.Bifold \nBifold \nBifold.Bifold \nBifold \nBifold.Bifold \nBifold \nBifold.Bifold \nBifold \nBifold.Bifold \nBifold \nBifold.Bifold \nBifold \nBifold.Invoke \nInvoke \nBifold.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Bifold","title":"Bifold.Bifold","content":"Bifold.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Bifold","title":"Bifold.Bifold","content":"Bifold.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Bifold","title":"Bifold.Bifold","content":"Bifold.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Bifold","title":"Bifold.Bifold","content":"Bifold.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Bifold","title":"Bifold.Bifold","content":"Bifold.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Bifold","title":"Bifold.Bifold","content":"Bifold.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#Invoke","title":"Bifold.Invoke","content":"Bifold.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifold.html#InvokeOnInstance","title":"Bifold.InvokeOnInstance","content":"Bifold.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html","title":"BifoldBack","content":"BifoldBack \n \nBifoldBack.BifoldBack \nBifoldBack \nBifoldBack.BifoldBack \nBifoldBack \nBifoldBack.BifoldBack \nBifoldBack \nBifoldBack.BifoldBack \nBifoldBack \nBifoldBack.BifoldBack \nBifoldBack \nBifoldBack.BifoldBack \nBifoldBack \nBifoldBack.Invoke \nInvoke \nBifoldBack.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#BifoldBack","title":"BifoldBack.BifoldBack","content":"BifoldBack.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#BifoldBack","title":"BifoldBack.BifoldBack","content":"BifoldBack.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#BifoldBack","title":"BifoldBack.BifoldBack","content":"BifoldBack.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#BifoldBack","title":"BifoldBack.BifoldBack","content":"BifoldBack.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#BifoldBack","title":"BifoldBack.BifoldBack","content":"BifoldBack.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#BifoldBack","title":"BifoldBack.BifoldBack","content":"BifoldBack.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#Invoke","title":"BifoldBack.Invoke","content":"BifoldBack.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldback.html#InvokeOnInstance","title":"BifoldBack.InvokeOnInstance","content":"BifoldBack.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html","title":"BifoldMap","content":"BifoldMap \n \nBifoldMap.BifoldMap \nBifoldMap \nBifoldMap.BifoldMap \nBifoldMap \nBifoldMap.BifoldMap \nBifoldMap \nBifoldMap.BifoldMap \nBifoldMap \nBifoldMap.BifoldMap \nBifoldMap \nBifoldMap.BifoldMap \nBifoldMap \nBifoldMap.Invoke \nInvoke \nBifoldMap.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#BifoldMap","title":"BifoldMap.BifoldMap","content":"BifoldMap.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#BifoldMap","title":"BifoldMap.BifoldMap","content":"BifoldMap.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#BifoldMap","title":"BifoldMap.BifoldMap","content":"BifoldMap.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#BifoldMap","title":"BifoldMap.BifoldMap","content":"BifoldMap.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#BifoldMap","title":"BifoldMap.BifoldMap","content":"BifoldMap.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#BifoldMap","title":"BifoldMap.BifoldMap","content":"BifoldMap.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#Invoke","title":"BifoldMap.Invoke","content":"BifoldMap.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bifoldmap.html#InvokeOnInstance","title":"BifoldMap.InvokeOnInstance","content":"BifoldMap.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html","title":"Bimap","content":"Bimap \n \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Bimap \nBimap \nBimap.Invoke \nInvoke \nBimap.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Bimap","title":"Bimap.Bimap","content":"Bimap.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#Invoke","title":"Bimap.Invoke","content":"Bimap.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bimap.html#InvokeOnInstance","title":"Bimap.InvokeOnInstance","content":"Bimap.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html","title":"Bind","content":"Bind \n \nBind.Invoke \nInvoke \nBind.InvokeOnInstance \nInvokeOnInstance \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=) \nBind.(\u003E\u003E=) \n(\u003E\u003E=)"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#Invoke","title":"Bind.Invoke","content":"Bind.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#InvokeOnInstance","title":"Bind.InvokeOnInstance","content":"Bind.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bind.html#(\u003E\u003E=)","title":"Bind.(\u003E\u003E=)","content":"Bind.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html","title":"Bisequence","content":"Bisequence \n \nBisequence.Bisequence \nBisequence \nBisequence.Bisequence \nBisequence \nBisequence.Bisequence \nBisequence \nBisequence.Bisequence \nBisequence \nBisequence.Bisequence \nBisequence \nBisequence.Bisequence \nBisequence \nBisequence.Bisequence \nBisequence \nBisequence.Invoke \nInvoke \nBisequence.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Bisequence","title":"Bisequence.Bisequence","content":"Bisequence.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#Invoke","title":"Bisequence.Invoke","content":"Bisequence.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisequence.html#InvokeOnInstance","title":"Bisequence.InvokeOnInstance","content":"Bisequence.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html","title":"Bisum","content":"Bisum \n \nBisum.Bisum \nBisum \nBisum.Bisum \nBisum \nBisum.Bisum \nBisum \nBisum.Bisum \nBisum \nBisum.Bisum \nBisum \nBisum.Bisum \nBisum \nBisum.Bisum \nBisum \nBisum.Invoke \nInvoke \nBisum.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Bisum","title":"Bisum.Bisum","content":"Bisum.Bisum \nBisum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#Invoke","title":"Bisum.Invoke","content":"Bisum.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bisum.html#InvokeOnInstance","title":"Bisum.InvokeOnInstance","content":"Bisum.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html","title":"Bitraverse","content":"Bitraverse \n \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Bitraverse \nBitraverse \nBitraverse.Invoke \nInvoke \nBitraverse.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Bitraverse","title":"Bitraverse.Bitraverse","content":"Bitraverse.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#Invoke","title":"Bitraverse.Invoke","content":"Bitraverse.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-bitraverse.html#InvokeOnInstance","title":"Bitraverse.InvokeOnInstance","content":"Bitraverse.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-callcc.html","title":"CallCC","content":"CallCC \n \nCallCC.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-callcc.html#Invoke","title":"CallCC.Invoke","content":"CallCC.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-catch.html","title":"Catch","content":"Catch \n \nCatch.Catch \nCatch \nCatch.Catch \nCatch \nCatch.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-catch.html#Catch","title":"Catch.Catch","content":"Catch.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-catch.html#Catch","title":"Catch.Catch","content":"Catch.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-catch.html#Invoke","title":"Catch.Invoke","content":"Catch.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html","title":"Choice","content":"Choice \n \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Choice \nChoice \nChoice.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Choice","title":"Choice.Choice","content":"Choice.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choice.html#Invoke","title":"Choice.Invoke","content":"Choice.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html","title":"Choose","content":"Choose \n \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Choose \nChoose \nChoose.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Choose","title":"Choose.Choose","content":"Choose.Choose \nChoose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-choose.html#Invoke","title":"Choose.Invoke","content":"Choose.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html","title":"ChooseIndexed","content":"ChooseIndexed \n \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.ChooseIndexed \nChooseIndexed \nChooseIndexed.Invoke \nInvoke \nChooseIndexed.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#ChooseIndexed","title":"ChooseIndexed.ChooseIndexed","content":"ChooseIndexed.ChooseIndexed \nChooseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#Invoke","title":"ChooseIndexed.Invoke","content":"ChooseIndexed.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chooseindexed.html#InvokeOnInstance","title":"ChooseIndexed.InvokeOnInstance","content":"ChooseIndexed.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chunkby.html","title":"ChunkBy","content":"ChunkBy \n \nChunkBy.ChunkBy \nChunkBy \nChunkBy.ChunkBy \nChunkBy \nChunkBy.ChunkBy \nChunkBy \nChunkBy.ChunkBy \nChunkBy \nChunkBy.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chunkby.html#ChunkBy","title":"ChunkBy.ChunkBy","content":"ChunkBy.ChunkBy \nChunkBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chunkby.html#ChunkBy","title":"ChunkBy.ChunkBy","content":"ChunkBy.ChunkBy \nChunkBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chunkby.html#ChunkBy","title":"ChunkBy.ChunkBy","content":"ChunkBy.ChunkBy \nChunkBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chunkby.html#ChunkBy","title":"ChunkBy.ChunkBy","content":"ChunkBy.ChunkBy \nChunkBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-chunkby.html#Invoke","title":"ChunkBy.Invoke","content":"ChunkBy.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html","title":"Comp","content":"Comp \n \nComp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \nComp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \nComp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \nComp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \nComp.Invoke \nInvoke \nComp.InvokeOnInstance \nInvokeOnInstance \nComp.InvokeOnInstance\u0027 \nInvokeOnInstance\u0027"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#\u0060\u0060\u003C\u003C\u003C\u0060\u0060","title":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060","content":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#\u0060\u0060\u003C\u003C\u003C\u0060\u0060","title":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060","content":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#\u0060\u0060\u003C\u003C\u003C\u0060\u0060","title":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060","content":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#\u0060\u0060\u003C\u003C\u003C\u0060\u0060","title":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060","content":"Comp.\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n\u0060\u0060\u003C\u003C\u003C\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#Invoke","title":"Comp.Invoke","content":"Comp.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#InvokeOnInstance","title":"Comp.InvokeOnInstance","content":"Comp.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-comp.html#InvokeOnInstance\u0027","title":"Comp.InvokeOnInstance\u0027","content":"Comp.InvokeOnInstance\u0027 \nInvokeOnInstance\u0027 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-composedstaticinvokable-2.html","title":"ComposedStaticInvokable\u003C\u0027F, \u0027G\u003E","content":"ComposedStaticInvokable\u003C\u0027F, \u0027G\u003E \n \nComposedStaticInvokable\u003C\u0027F, \u0027G\u003E.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-composedstaticinvokable-2.html#Invoke","title":"ComposedStaticInvokable\u003C\u0027F, \u0027G\u003E.Invoke","content":"ComposedStaticInvokable\u003C\u0027F, \u0027G\u003E.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html","title":"Contramap","content":"Contramap \n \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Contramap \nContramap \nContramap.Invoke \nInvoke \nContramap.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Contramap","title":"Contramap.Contramap","content":"Contramap.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#Invoke","title":"Contramap.Invoke","content":"Contramap.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-contramap.html#InvokeOnInstance","title":"Contramap.InvokeOnInstance","content":"Contramap.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html","title":"Curry","content":"Curry \n \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Curry \nCurry \nCurry.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Curry","title":"Curry.Curry","content":"Curry.Curry \nCurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-curry.html#Invoke","title":"Curry.Invoke","content":"Curry.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html","title":"Delay","content":"Delay \n \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Delay \nDelay \nDelay.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Delay","title":"Delay.Delay","content":"Delay.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-delay.html#Invoke","title":"Delay.Invoke","content":"Delay.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html","title":"Dimap","content":"Dimap \n \nDimap.Dimap \nDimap \nDimap.Dimap \nDimap \nDimap.Dimap \nDimap \nDimap.Dimap \nDimap \nDimap.Dimap \nDimap \nDimap.Invoke \nInvoke \nDimap.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#Dimap","title":"Dimap.Dimap","content":"Dimap.Dimap \nDimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#Dimap","title":"Dimap.Dimap","content":"Dimap.Dimap \nDimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#Dimap","title":"Dimap.Dimap","content":"Dimap.Dimap \nDimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#Dimap","title":"Dimap.Dimap","content":"Dimap.Dimap \nDimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#Dimap","title":"Dimap.Dimap","content":"Dimap.Dimap \nDimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#Invoke","title":"Dimap.Invoke","content":"Dimap.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-dimap.html#InvokeOnInstance","title":"Dimap.InvokeOnInstance","content":"Dimap.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html","title":"Distinct","content":"Distinct \n \nDistinct.Distinct \nDistinct \nDistinct.Distinct \nDistinct \nDistinct.Distinct \nDistinct \nDistinct.Distinct \nDistinct \nDistinct.Distinct \nDistinct \nDistinct.Invoke \nInvoke \nDistinct.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#Distinct","title":"Distinct.Distinct","content":"Distinct.Distinct \nDistinct \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#Distinct","title":"Distinct.Distinct","content":"Distinct.Distinct \nDistinct \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#Distinct","title":"Distinct.Distinct","content":"Distinct.Distinct \nDistinct \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#Distinct","title":"Distinct.Distinct","content":"Distinct.Distinct \nDistinct \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#Distinct","title":"Distinct.Distinct","content":"Distinct.Distinct \nDistinct \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#Invoke","title":"Distinct.Invoke","content":"Distinct.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinct.html#InvokeOnInstance","title":"Distinct.InvokeOnInstance","content":"Distinct.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html","title":"DistinctBy","content":"DistinctBy \n \nDistinctBy.DistinctBy \nDistinctBy \nDistinctBy.DistinctBy \nDistinctBy \nDistinctBy.DistinctBy \nDistinctBy \nDistinctBy.DistinctBy \nDistinctBy \nDistinctBy.DistinctBy \nDistinctBy \nDistinctBy.Invoke \nInvoke \nDistinctBy.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#DistinctBy","title":"DistinctBy.DistinctBy","content":"DistinctBy.DistinctBy \nDistinctBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#DistinctBy","title":"DistinctBy.DistinctBy","content":"DistinctBy.DistinctBy \nDistinctBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#DistinctBy","title":"DistinctBy.DistinctBy","content":"DistinctBy.DistinctBy \nDistinctBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#DistinctBy","title":"DistinctBy.DistinctBy","content":"DistinctBy.DistinctBy \nDistinctBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#DistinctBy","title":"DistinctBy.DistinctBy","content":"DistinctBy.DistinctBy \nDistinctBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#Invoke","title":"DistinctBy.Invoke","content":"DistinctBy.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-distinctby.html#InvokeOnInstance","title":"DistinctBy.InvokeOnInstance","content":"DistinctBy.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divrem.html","title":"DivRem","content":"DivRem \n \nDivRem.DivRem \nDivRem \nDivRem.DivRem \nDivRem \nDivRem.DivRem \nDivRem \nDivRem.DivRem \nDivRem \nDivRem.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divrem.html#DivRem","title":"DivRem.DivRem","content":"DivRem.DivRem \nDivRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divrem.html#DivRem","title":"DivRem.DivRem","content":"DivRem.DivRem \nDivRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divrem.html#DivRem","title":"DivRem.DivRem","content":"DivRem.DivRem \nDivRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divrem.html#DivRem","title":"DivRem.DivRem","content":"DivRem.DivRem \nDivRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divrem.html#Invoke","title":"DivRem.Invoke","content":"DivRem.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divide.html","title":"Divide","content":"Divide \n \nDivide.Divide \nDivide \nDivide.Divide \nDivide \nDivide.Divide \nDivide \nDivide.Divide \nDivide \nDivide.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divide.html#Divide","title":"Divide.Divide","content":"Divide.Divide \nDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divide.html#Divide","title":"Divide.Divide","content":"Divide.Divide \nDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divide.html#Divide","title":"Divide.Divide","content":"Divide.Divide \nDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divide.html#Divide","title":"Divide.Divide","content":"Divide.Divide \nDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-divide.html#Invoke","title":"Divide.Invoke","content":"Divide.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html","title":"Drop","content":"Drop \n \nDrop.Drop \nDrop \nDrop.Drop \nDrop \nDrop.Drop \nDrop \nDrop.Drop \nDrop \nDrop.Drop \nDrop \nDrop.Drop \nDrop \nDrop.Drop \nDrop \nDrop.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Drop","title":"Drop.Drop","content":"Drop.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-drop.html#Invoke","title":"Drop.Invoke","content":"Drop.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html","title":"Duplicate","content":"Duplicate \n \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Duplicate \nDuplicate \nDuplicate.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Duplicate","title":"Duplicate.Duplicate","content":"Duplicate.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-duplicate.html#Invoke","title":"Duplicate.Invoke","content":"Duplicate.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html","title":"Empty","content":"Empty \n \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Empty \nEmpty \nEmpty.Invoke \nInvoke \nEmpty.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Empty","title":"Empty.Empty","content":"Empty.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#Invoke","title":"Empty.Invoke","content":"Empty.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-empty.html#InvokeOnInstance","title":"Empty.InvokeOnInstance","content":"Empty.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html","title":"Exists","content":"Exists \n \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Exists \nExists \nExists.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Exists","title":"Exists.Exists","content":"Exists.Exists \nExists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-exists.html#Invoke","title":"Exists.Invoke","content":"Exists.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html","title":"Explicit","content":"Explicit \n \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Explicit \nExplicit \nExplicit.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Explicit","title":"Explicit.Explicit","content":"Explicit.Explicit \nExplicit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-explicit.html#Invoke","title":"Explicit.Invoke","content":"Explicit.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html","title":"Extend","content":"Extend \n \nExtend.Invoke \nInvoke \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E) \nExtend.(=\u003E\u003E) \n(=\u003E\u003E)"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#Invoke","title":"Extend.Invoke","content":"Extend.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extend.html#(=\u003E\u003E)","title":"Extend.(=\u003E\u003E)","content":"Extend.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html","title":"Extract","content":"Extract \n \nExtract.Extract \nExtract \nExtract.Extract \nExtract \nExtract.Extract \nExtract \nExtract.Extract \nExtract \nExtract.Extract \nExtract \nExtract.Extract \nExtract \nExtract.Extract \nExtract \nExtract.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Extract","title":"Extract.Extract","content":"Extract.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-extract.html#Invoke","title":"Extract.Invoke","content":"Extract.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html","title":"Fanin","content":"Fanin \n \nFanin.Invoke \nInvoke \nFanin.InvokeOnInstance \nInvokeOnInstance \nFanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \nFanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \nFanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \nFanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html#Invoke","title":"Fanin.Invoke","content":"Fanin.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html#InvokeOnInstance","title":"Fanin.InvokeOnInstance","content":"Fanin.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html#\u0060\u0060|||\u0060\u0060","title":"Fanin.\u0060\u0060|||\u0060\u0060","content":"Fanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html#\u0060\u0060|||\u0060\u0060","title":"Fanin.\u0060\u0060|||\u0060\u0060","content":"Fanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html#\u0060\u0060|||\u0060\u0060","title":"Fanin.\u0060\u0060|||\u0060\u0060","content":"Fanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanin.html#\u0060\u0060|||\u0060\u0060","title":"Fanin.\u0060\u0060|||\u0060\u0060","content":"Fanin.\u0060\u0060|||\u0060\u0060 \n\u0060\u0060|||\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html","title":"Fanout","content":"Fanout \n \nFanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \nFanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \nFanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \nFanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \nFanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \nFanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \nFanout.Invoke \nInvoke \nFanout.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#\u0060\u0060\u0026\u0026\u0026\u0060\u0060","title":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060","content":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#\u0060\u0060\u0026\u0026\u0026\u0060\u0060","title":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060","content":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#\u0060\u0060\u0026\u0026\u0026\u0060\u0060","title":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060","content":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#\u0060\u0060\u0026\u0026\u0026\u0060\u0060","title":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060","content":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#\u0060\u0060\u0026\u0026\u0026\u0060\u0060","title":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060","content":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#\u0060\u0060\u0026\u0026\u0026\u0060\u0060","title":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060","content":"Fanout.\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n\u0060\u0060\u0026\u0026\u0026\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#Invoke","title":"Fanout.Invoke","content":"Fanout.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fanout.html#InvokeOnInstance","title":"Fanout.InvokeOnInstance","content":"Fanout.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html","title":"Filter","content":"Filter \n \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Filter \nFilter \nFilter.Invoke \nInvoke \nFilter.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Filter","title":"Filter.Filter","content":"Filter.Filter \nFilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#Invoke","title":"Filter.Invoke","content":"Filter.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-filter.html#InvokeOnInstance","title":"Filter.InvokeOnInstance","content":"Filter.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html","title":"Find","content":"Find \n \nFind.Find \nFind \nFind.Find \nFind \nFind.Find \nFind \nFind.Find \nFind \nFind.Find \nFind \nFind.Find \nFind \nFind.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Find","title":"Find.Find","content":"Find.Find \nFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Find","title":"Find.Find","content":"Find.Find \nFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Find","title":"Find.Find","content":"Find.Find \nFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Find","title":"Find.Find","content":"Find.Find \nFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Find","title":"Find.Find","content":"Find.Find \nFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Find","title":"Find.Find","content":"Find.Find \nFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-find.html#Invoke","title":"Find.Invoke","content":"Find.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html","title":"FindIndex","content":"FindIndex \n \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.FindIndex \nFindIndex \nFindIndex.Invoke \nInvoke \nFindIndex.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#FindIndex","title":"FindIndex.FindIndex","content":"FindIndex.FindIndex \nFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#Invoke","title":"FindIndex.Invoke","content":"FindIndex.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findindex.html#InvokeOnInstance","title":"FindIndex.InvokeOnInstance","content":"FindIndex.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html","title":"FindLastSliceIndex","content":"FindLastSliceIndex \n \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \nFindLastSliceIndex.Invoke \nInvoke \nFindLastSliceIndex.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#FindLastSliceIndex","title":"FindLastSliceIndex.FindLastSliceIndex","content":"FindLastSliceIndex.FindLastSliceIndex \nFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#Invoke","title":"FindLastSliceIndex.Invoke","content":"FindLastSliceIndex.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findlastsliceindex.html#InvokeOnInstance","title":"FindLastSliceIndex.InvokeOnInstance","content":"FindLastSliceIndex.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html","title":"FindSliceIndex","content":"FindSliceIndex \n \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.FindSliceIndex \nFindSliceIndex \nFindSliceIndex.Invoke \nInvoke \nFindSliceIndex.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#FindSliceIndex","title":"FindSliceIndex.FindSliceIndex","content":"FindSliceIndex.FindSliceIndex \nFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#Invoke","title":"FindSliceIndex.Invoke","content":"FindSliceIndex.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-findsliceindex.html#InvokeOnInstance","title":"FindSliceIndex.InvokeOnInstance","content":"FindSliceIndex.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html","title":"Fold","content":"Fold \n \nFold.Fold \nFold \nFold.Fold \nFold \nFold.Fold \nFold \nFold.Fold \nFold \nFold.Fold \nFold \nFold.Fold \nFold \nFold.Fold \nFold \nFold.Fold \nFold \nFold.FromFoldMap \nFromFoldMap \nFold.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Fold","title":"Fold.Fold","content":"Fold.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#FromFoldMap","title":"Fold.FromFoldMap","content":"Fold.FromFoldMap \nFromFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fold.html#Invoke","title":"Fold.Invoke","content":"Fold.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html","title":"FoldBack","content":"FoldBack \n \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FoldBack \nFoldBack \nFoldBack.FromFoldMap \nFromFoldMap \nFoldBack.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FoldBack","title":"FoldBack.FoldBack","content":"FoldBack.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#FromFoldMap","title":"FoldBack.FromFoldMap","content":"FoldBack.FromFoldMap \nFromFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldback.html#Invoke","title":"FoldBack.Invoke","content":"FoldBack.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html","title":"FoldIndexed","content":"FoldIndexed \n \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.FoldIndexed \nFoldIndexed \nFoldIndexed.Invoke \nInvoke \nFoldIndexed.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#FoldIndexed","title":"FoldIndexed.FoldIndexed","content":"FoldIndexed.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#Invoke","title":"FoldIndexed.Invoke","content":"FoldIndexed.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldindexed.html#InvokeOnInstance","title":"FoldIndexed.InvokeOnInstance","content":"FoldIndexed.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html","title":"FoldMap","content":"FoldMap \n \nFoldMap.FoldMap \nFoldMap \nFoldMap.FoldMap \nFoldMap \nFoldMap.FoldMap \nFoldMap \nFoldMap.FoldMap \nFoldMap \nFoldMap.FoldMap \nFoldMap \nFoldMap.FoldMap \nFoldMap \nFoldMap.FoldMap \nFoldMap \nFoldMap.FromFoldFoldBack \nFromFoldFoldBack \nFoldMap.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FoldMap","title":"FoldMap.FoldMap","content":"FoldMap.FoldMap \nFoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#FromFoldFoldBack","title":"FoldMap.FromFoldFoldBack","content":"FoldMap.FromFoldFoldBack \nFromFoldFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-foldmap.html#Invoke","title":"FoldMap.Invoke","content":"FoldMap.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html","title":"ForAll","content":"ForAll \n \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.ForAll \nForAll \nForAll.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#ForAll","title":"ForAll.ForAll","content":"ForAll.ForAll \nForAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-forall.html#Invoke","title":"ForAll.Invoke","content":"ForAll.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html","title":"FromBigInt","content":"FromBigInt \n \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.FromBigInt \nFromBigInt \nFromBigInt.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#FromBigInt","title":"FromBigInt.FromBigInt","content":"FromBigInt.FromBigInt \nFromBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-frombigint.html#Invoke","title":"FromBigInt.Invoke","content":"FromBigInt.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html","title":"FromInt32","content":"FromInt32 \n \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.FromInt32 \nFromInt32 \nFromInt32.Invoke \nInvoke \nFromInt32.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#FromInt32","title":"FromInt32.FromInt32","content":"FromInt32.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#Invoke","title":"FromInt32.Invoke","content":"FromInt32.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint32.html#InvokeOnInstance","title":"FromInt32.InvokeOnInstance","content":"FromInt32.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html","title":"FromInt64","content":"FromInt64 \n \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.FromInt64 \nFromInt64 \nFromInt64.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#FromInt64","title":"FromInt64.FromInt64","content":"FromInt64.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-fromint64.html#Invoke","title":"FromInt64.Invoke","content":"FromInt64.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html","title":"Gather","content":"Gather \n \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Gather \nGather \nGather.Invoke \nInvoke \nGather.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Gather","title":"Gather.Gather","content":"Gather.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#Invoke","title":"Gather.Invoke","content":"Gather.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-gather.html#InvokeOnInstance","title":"Gather.InvokeOnInstance","content":"Gather.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-get.html","title":"Get","content":"Get \n \nGet.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-get.html#Invoke","title":"Get.Invoke","content":"Get.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-groupby.html","title":"GroupBy","content":"GroupBy \n \nGroupBy.GroupBy \nGroupBy \nGroupBy.GroupBy \nGroupBy \nGroupBy.GroupBy \nGroupBy \nGroupBy.GroupBy \nGroupBy \nGroupBy.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-groupby.html#GroupBy","title":"GroupBy.GroupBy","content":"GroupBy.GroupBy \nGroupBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-groupby.html#GroupBy","title":"GroupBy.GroupBy","content":"GroupBy.GroupBy \nGroupBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-groupby.html#GroupBy","title":"GroupBy.GroupBy","content":"GroupBy.GroupBy \nGroupBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-groupby.html#GroupBy","title":"GroupBy.GroupBy","content":"GroupBy.GroupBy \nGroupBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-groupby.html#Invoke","title":"GroupBy.Invoke","content":"GroupBy.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html","title":"Head","content":"Head \n \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Head \nHead \nHead.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Head","title":"Head.Head","content":"Head.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-head.html#Invoke","title":"Head.Invoke","content":"Head.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html","title":"Id","content":"Id \n \nId.Id \nId \nId.Id \nId \nId.Id \nId \nId.Id \nId \nId.Invoke \nInvoke \nId.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html#Id","title":"Id.Id","content":"Id.Id \nId \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html#Id","title":"Id.Id","content":"Id.Id \nId \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html#Id","title":"Id.Id","content":"Id.Id \nId \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html#Id","title":"Id.Id","content":"Id.Id \nId \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html#Invoke","title":"Id.Invoke","content":"Id.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-id.html#InvokeOnInstance","title":"Id.InvokeOnInstance","content":"Id.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html","title":"Intercalate","content":"Intercalate \n \nIntercalate.Intercalate \nIntercalate \nIntercalate.Intercalate \nIntercalate \nIntercalate.Intercalate \nIntercalate \nIntercalate.Intercalate \nIntercalate \nIntercalate.Intercalate \nIntercalate \nIntercalate.Intercalate \nIntercalate \nIntercalate.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Intercalate","title":"Intercalate.Intercalate","content":"Intercalate.Intercalate \nIntercalate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Intercalate","title":"Intercalate.Intercalate","content":"Intercalate.Intercalate \nIntercalate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Intercalate","title":"Intercalate.Intercalate","content":"Intercalate.Intercalate \nIntercalate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Intercalate","title":"Intercalate.Intercalate","content":"Intercalate.Intercalate \nIntercalate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Intercalate","title":"Intercalate.Intercalate","content":"Intercalate.Intercalate \nIntercalate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Intercalate","title":"Intercalate.Intercalate","content":"Intercalate.Intercalate \nIntercalate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intercalate.html#Invoke","title":"Intercalate.Invoke","content":"Intercalate.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intersperse.html","title":"Intersperse","content":"Intersperse \n \nIntersperse.Intersperse \nIntersperse \nIntersperse.Intersperse \nIntersperse \nIntersperse.Intersperse \nIntersperse \nIntersperse.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intersperse.html#Intersperse","title":"Intersperse.Intersperse","content":"Intersperse.Intersperse \nIntersperse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intersperse.html#Intersperse","title":"Intersperse.Intersperse","content":"Intersperse.Intersperse \nIntersperse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intersperse.html#Intersperse","title":"Intersperse.Intersperse","content":"Intersperse.Intersperse \nIntersperse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-intersperse.html#Invoke","title":"Intersperse.Invoke","content":"Intersperse.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invmap.html","title":"Invmap","content":"Invmap \n \nInvmap.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invmap.html#Invoke","title":"Invmap.Invoke","content":"Invmap.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html","title":"Invoke","content":"Invoke \n \nInvoke.Invoke \nInvoke \nInvoke.Invoke \nInvoke \nInvoke.Invoke \nInvoke \nInvoke.Invoke \nInvoke \nInvoke.Invoke \nInvoke \nInvoke.InvokeNRTC \nInvokeNRTC"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html#Invoke","title":"Invoke.Invoke","content":"Invoke.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html#Invoke","title":"Invoke.Invoke","content":"Invoke.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html#Invoke","title":"Invoke.Invoke","content":"Invoke.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html#Invoke","title":"Invoke.Invoke","content":"Invoke.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html#Invoke","title":"Invoke.Invoke","content":"Invoke.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-invoke.html#InvokeNRTC","title":"Invoke.InvokeNRTC","content":"Invoke.InvokeNRTC \nInvokeNRTC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html","title":"IsAltLeftZero","content":"IsAltLeftZero \n \nIsAltLeftZero.Invoke \nInvoke \nIsAltLeftZero.InvokeOnInstance \nInvokeOnInstance \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \nIsAltLeftZero.IsAltLeftZero \nIsAltLeftZero"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#Invoke","title":"IsAltLeftZero.Invoke","content":"IsAltLeftZero.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#InvokeOnInstance","title":"IsAltLeftZero.InvokeOnInstance","content":"IsAltLeftZero.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isaltleftzero.html#IsAltLeftZero","title":"IsAltLeftZero.IsAltLeftZero","content":"IsAltLeftZero.IsAltLeftZero \nIsAltLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html","title":"IsLeftZero","content":"IsLeftZero \n \nIsLeftZero.Invoke \nInvoke \nIsLeftZero.InvokeOnInstance \nInvokeOnInstance \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero \nIsLeftZero.IsLeftZero \nIsLeftZero"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#Invoke","title":"IsLeftZero.Invoke","content":"IsLeftZero.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#InvokeOnInstance","title":"IsLeftZero.InvokeOnInstance","content":"IsLeftZero.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-isleftzero.html#IsLeftZero","title":"IsLeftZero.IsLeftZero","content":"IsLeftZero.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html","title":"IsZipLeftZero","content":"IsZipLeftZero \n \nIsZipLeftZero.Invoke \nInvoke \nIsZipLeftZero.InvokeOnInstance \nInvokeOnInstance \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \nIsZipLeftZero.IsZipLeftZero \nIsZipLeftZero"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#Invoke","title":"IsZipLeftZero.Invoke","content":"IsZipLeftZero.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#InvokeOnInstance","title":"IsZipLeftZero.InvokeOnInstance","content":"IsZipLeftZero.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iszipleftzero.html#IsZipLeftZero","title":"IsZipLeftZero.IsZipLeftZero","content":"IsZipLeftZero.IsZipLeftZero \nIsZipLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html","title":"Item","content":"Item \n \nItem.Invoke \nInvoke \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem \nItem.Item \nItem"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Invoke","title":"Item.Invoke","content":"Item.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item.html#Item","title":"Item.Item","content":"Item.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item1.html","title":"Item1","content":"Item1 \n \nItem1.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item1.html#Invoke","title":"Item1.Invoke","content":"Item1.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item2.html","title":"Item2","content":"Item2 \n \nItem2.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item2.html#Invoke","title":"Item2.Invoke","content":"Item2.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item3.html","title":"Item3","content":"Item3 \n \nItem3.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item3.html#Invoke","title":"Item3.Invoke","content":"Item3.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item4.html","title":"Item4","content":"Item4 \n \nItem4.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item4.html#Invoke","title":"Item4.Invoke","content":"Item4.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item5.html","title":"Item5","content":"Item5 \n \nItem5.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-item5.html#Invoke","title":"Item5.Invoke","content":"Item5.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html","title":"Iterate","content":"Iterate \n \nIterate.Invoke \nInvoke \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate \nIterate.Iterate \nIterate"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Invoke","title":"Iterate.Invoke","content":"Iterate.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterate.html#Iterate","title":"Iterate.Iterate","content":"Iterate.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html","title":"IterateIndexed","content":"IterateIndexed \n \nIterateIndexed.Invoke \nInvoke \nIterateIndexed.InvokeOnInstance \nInvokeOnInstance \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed \nIterateIndexed.IterateIndexed \nIterateIndexed"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#Invoke","title":"IterateIndexed.Invoke","content":"IterateIndexed.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#InvokeOnInstance","title":"IterateIndexed.InvokeOnInstance","content":"IterateIndexed.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-iterateindexed.html#IterateIndexed","title":"IterateIndexed.IterateIndexed","content":"IterateIndexed.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html","title":"Join","content":"Join \n \nJoin.Invoke \nInvoke \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin \nJoin.Join \nJoin"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Invoke","title":"Join.Invoke","content":"Join.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-join.html#Join","title":"Join.Join","content":"Join.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html","title":"Length","content":"Length \n \nLength.Invoke \nInvoke \nLength.Length \nLength \nLength.Length \nLength \nLength.Length \nLength \nLength.Length \nLength \nLength.Length \nLength \nLength.Length \nLength \nLength.Length \nLength"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Invoke","title":"Length.Invoke","content":"Length.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-length.html#Length","title":"Length.Length","content":"Length.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift.html","title":"Lift","content":"Lift \n \nLift.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift.html#Invoke","title":"Lift.Invoke","content":"Lift.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html","title":"Lift2","content":"Lift2 \n \nLift2.Invoke \nInvoke \nLift2.InvokeOnInstance \nInvokeOnInstance \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2 \nLift2.Lift2 \nLift2"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Invoke","title":"Lift2.Invoke","content":"Lift2.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#InvokeOnInstance","title":"Lift2.InvokeOnInstance","content":"Lift2.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift2.html#Lift2","title":"Lift2.Lift2","content":"Lift2.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html","title":"Lift3","content":"Lift3 \n \nLift3.Invoke \nInvoke \nLift3.InvokeOnInstance \nInvokeOnInstance \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3 \nLift3.Lift3 \nLift3"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Invoke","title":"Lift3.Invoke","content":"Lift3.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#InvokeOnInstance","title":"Lift3.InvokeOnInstance","content":"Lift3.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-lift3.html#Lift3","title":"Lift3.Lift3","content":"Lift3.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-liftasync.html","title":"LiftAsync","content":"LiftAsync \n \nLiftAsync.Invoke \nInvoke \nLiftAsync.LiftAsync \nLiftAsync \nLiftAsync.LiftAsync \nLiftAsync \nLiftAsync.LiftAsync \nLiftAsync"},{"uri":"/FSharpPlus/reference/fsharpplus-control-liftasync.html#Invoke","title":"LiftAsync.Invoke","content":"LiftAsync.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-liftasync.html#LiftAsync","title":"LiftAsync.LiftAsync","content":"LiftAsync.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-liftasync.html#LiftAsync","title":"LiftAsync.LiftAsync","content":"LiftAsync.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-liftasync.html#LiftAsync","title":"LiftAsync.LiftAsync","content":"LiftAsync.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html","title":"Limit","content":"Limit \n \nLimit.Invoke \nInvoke \nLimit.Limit \nLimit \nLimit.Limit \nLimit \nLimit.Limit \nLimit \nLimit.Limit \nLimit \nLimit.Limit \nLimit \nLimit.Limit \nLimit \nLimit.Limit \nLimit"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Invoke","title":"Limit.Invoke","content":"Limit.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-limit.html#Limit","title":"Limit.Limit","content":"Limit.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-listen.html","title":"Listen","content":"Listen \n \nListen.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-listen.html#Invoke","title":"Listen.Invoke","content":"Listen.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-local.html","title":"Local","content":"Local \n \nLocal.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-local.html#Invoke","title":"Local.Invoke","content":"Local.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html","title":"Map","content":"Map \n \nMap.Invoke \nInvoke \nMap.InvokeOnInstance \nInvokeOnInstance \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap \nMap.Map \nMap"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Invoke","title":"Map.Invoke","content":"Map.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#InvokeOnInstance","title":"Map.InvokeOnInstance","content":"Map.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map.html#Map","title":"Map.Map","content":"Map.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html","title":"Map2","content":"Map2 \n \nMap2.Invoke \nInvoke \nMap2.InvokeOnInstance \nInvokeOnInstance \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2 \nMap2.Map2 \nMap2"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Invoke","title":"Map2.Invoke","content":"Map2.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#InvokeOnInstance","title":"Map2.InvokeOnInstance","content":"Map2.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map2.html#Map2","title":"Map2.Map2","content":"Map2.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html","title":"Map3","content":"Map3 \n \nMap3.Invoke \nInvoke \nMap3.InvokeOnInstance \nInvokeOnInstance \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3 \nMap3.Map3 \nMap3"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Invoke","title":"Map3.Invoke","content":"Map3.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#InvokeOnInstance","title":"Map3.InvokeOnInstance","content":"Map3.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-map3.html#Map3","title":"Map3.Map3","content":"Map3.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html","title":"MapFirst","content":"MapFirst \n \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.First \nFirst \nMapFirst.Invoke \nInvoke \nMapFirst.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#First","title":"MapFirst.First","content":"MapFirst.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#Invoke","title":"MapFirst.Invoke","content":"MapFirst.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapfirst.html#InvokeOnInstance","title":"MapFirst.InvokeOnInstance","content":"MapFirst.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html","title":"MapIndexed","content":"MapIndexed \n \nMapIndexed.Invoke \nInvoke \nMapIndexed.InvokeOnInstance \nInvokeOnInstance \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed \nMapIndexed.MapIndexed \nMapIndexed"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#Invoke","title":"MapIndexed.Invoke","content":"MapIndexed.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#InvokeOnInstance","title":"MapIndexed.InvokeOnInstance","content":"MapIndexed.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapindexed.html#MapIndexed","title":"MapIndexed.MapIndexed","content":"MapIndexed.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html","title":"MapItem1","content":"MapItem1 \n \nMapItem1.Invoke \nInvoke \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1 \nMapItem1.MapItem1 \nMapItem1"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#Invoke","title":"MapItem1.Invoke","content":"MapItem1.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem1.html#MapItem1","title":"MapItem1.MapItem1","content":"MapItem1.MapItem1 \nMapItem1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html","title":"MapItem2","content":"MapItem2 \n \nMapItem2.Invoke \nInvoke \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2 \nMapItem2.MapItem2 \nMapItem2"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#Invoke","title":"MapItem2.Invoke","content":"MapItem2.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem2.html#MapItem2","title":"MapItem2.MapItem2","content":"MapItem2.MapItem2 \nMapItem2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html","title":"MapItem3","content":"MapItem3 \n \nMapItem3.Invoke \nInvoke \nMapItem3.MapItem3 \nMapItem3 \nMapItem3.MapItem3 \nMapItem3 \nMapItem3.MapItem3 \nMapItem3 \nMapItem3.MapItem3 \nMapItem3 \nMapItem3.MapItem3 \nMapItem3 \nMapItem3.MapItem3 \nMapItem3 \nMapItem3.MapItem3 \nMapItem3"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#Invoke","title":"MapItem3.Invoke","content":"MapItem3.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem3.html#MapItem3","title":"MapItem3.MapItem3","content":"MapItem3.MapItem3 \nMapItem3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html","title":"MapItem4","content":"MapItem4 \n \nMapItem4.Invoke \nInvoke \nMapItem4.MapItem4 \nMapItem4 \nMapItem4.MapItem4 \nMapItem4 \nMapItem4.MapItem4 \nMapItem4 \nMapItem4.MapItem4 \nMapItem4 \nMapItem4.MapItem4 \nMapItem4 \nMapItem4.MapItem4 \nMapItem4"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#Invoke","title":"MapItem4.Invoke","content":"MapItem4.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#MapItem4","title":"MapItem4.MapItem4","content":"MapItem4.MapItem4 \nMapItem4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#MapItem4","title":"MapItem4.MapItem4","content":"MapItem4.MapItem4 \nMapItem4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#MapItem4","title":"MapItem4.MapItem4","content":"MapItem4.MapItem4 \nMapItem4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#MapItem4","title":"MapItem4.MapItem4","content":"MapItem4.MapItem4 \nMapItem4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#MapItem4","title":"MapItem4.MapItem4","content":"MapItem4.MapItem4 \nMapItem4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem4.html#MapItem4","title":"MapItem4.MapItem4","content":"MapItem4.MapItem4 \nMapItem4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html","title":"MapItem5","content":"MapItem5 \n \nMapItem5.Invoke \nInvoke \nMapItem5.MapItem5 \nMapItem5 \nMapItem5.MapItem5 \nMapItem5 \nMapItem5.MapItem5 \nMapItem5 \nMapItem5.MapItem5 \nMapItem5 \nMapItem5.MapItem5 \nMapItem5"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html#Invoke","title":"MapItem5.Invoke","content":"MapItem5.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html#MapItem5","title":"MapItem5.MapItem5","content":"MapItem5.MapItem5 \nMapItem5 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html#MapItem5","title":"MapItem5.MapItem5","content":"MapItem5.MapItem5 \nMapItem5 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html#MapItem5","title":"MapItem5.MapItem5","content":"MapItem5.MapItem5 \nMapItem5 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html#MapItem5","title":"MapItem5.MapItem5","content":"MapItem5.MapItem5 \nMapItem5 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-mapitem5.html#MapItem5","title":"MapItem5.MapItem5","content":"MapItem5.MapItem5 \nMapItem5 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html","title":"Max","content":"Max \n \nMax.Invoke \nInvoke \nMax.Max \nMax \nMax.Max \nMax \nMax.Max \nMax \nMax.Max \nMax \nMax.Max \nMax \nMax.Max \nMax"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Invoke","title":"Max.Invoke","content":"Max.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Max","title":"Max.Max","content":"Max.Max \nMax \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Max","title":"Max.Max","content":"Max.Max \nMax \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Max","title":"Max.Max","content":"Max.Max \nMax \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Max","title":"Max.Max","content":"Max.Max \nMax \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Max","title":"Max.Max","content":"Max.Max \nMax \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-max.html#Max","title":"Max.Max","content":"Max.Max \nMax \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html","title":"MaxBy","content":"MaxBy \n \nMaxBy.Invoke \nInvoke \nMaxBy.MaxBy \nMaxBy \nMaxBy.MaxBy \nMaxBy \nMaxBy.MaxBy \nMaxBy \nMaxBy.MaxBy \nMaxBy \nMaxBy.MaxBy \nMaxBy \nMaxBy.MaxBy \nMaxBy"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#Invoke","title":"MaxBy.Invoke","content":"MaxBy.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#MaxBy","title":"MaxBy.MaxBy","content":"MaxBy.MaxBy \nMaxBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#MaxBy","title":"MaxBy.MaxBy","content":"MaxBy.MaxBy \nMaxBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#MaxBy","title":"MaxBy.MaxBy","content":"MaxBy.MaxBy \nMaxBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#MaxBy","title":"MaxBy.MaxBy","content":"MaxBy.MaxBy \nMaxBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#MaxBy","title":"MaxBy.MaxBy","content":"MaxBy.MaxBy \nMaxBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxby.html#MaxBy","title":"MaxBy.MaxBy","content":"MaxBy.MaxBy \nMaxBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html","title":"MaxValue","content":"MaxValue \n \nMaxValue.Invoke \nInvoke \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue \nMaxValue.MaxValue \nMaxValue"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#Invoke","title":"MaxValue.Invoke","content":"MaxValue.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-maxvalue.html#MaxValue","title":"MaxValue.MaxValue","content":"MaxValue.MaxValue \nMaxValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html","title":"Min","content":"Min \n \nMin.Invoke \nInvoke \nMin.Min \nMin \nMin.Min \nMin \nMin.Min \nMin \nMin.Min \nMin \nMin.Min \nMin \nMin.Min \nMin"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Invoke","title":"Min.Invoke","content":"Min.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Min","title":"Min.Min","content":"Min.Min \nMin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Min","title":"Min.Min","content":"Min.Min \nMin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Min","title":"Min.Min","content":"Min.Min \nMin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Min","title":"Min.Min","content":"Min.Min \nMin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Min","title":"Min.Min","content":"Min.Min \nMin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-min.html#Min","title":"Min.Min","content":"Min.Min \nMin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html","title":"MinBy","content":"MinBy \n \nMinBy.Invoke \nInvoke \nMinBy.MinBy \nMinBy \nMinBy.MinBy \nMinBy \nMinBy.MinBy \nMinBy \nMinBy.MinBy \nMinBy \nMinBy.MinBy \nMinBy \nMinBy.MinBy \nMinBy"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#Invoke","title":"MinBy.Invoke","content":"MinBy.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#MinBy","title":"MinBy.MinBy","content":"MinBy.MinBy \nMinBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#MinBy","title":"MinBy.MinBy","content":"MinBy.MinBy \nMinBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#MinBy","title":"MinBy.MinBy","content":"MinBy.MinBy \nMinBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#MinBy","title":"MinBy.MinBy","content":"MinBy.MinBy \nMinBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#MinBy","title":"MinBy.MinBy","content":"MinBy.MinBy \nMinBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minby.html#MinBy","title":"MinBy.MinBy","content":"MinBy.MinBy \nMinBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html","title":"MinValue","content":"MinValue \n \nMinValue.Invoke \nInvoke \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue \nMinValue.MinValue \nMinValue"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#Invoke","title":"MinValue.Invoke","content":"MinValue.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-minvalue.html#MinValue","title":"MinValue.MinValue","content":"MinValue.MinValue \nMinValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html","title":"Nth","content":"Nth \n \nNth.Invoke \nInvoke \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth \nNth.Nth \nNth"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Invoke","title":"Nth.Invoke","content":"Nth.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-nth.html#Nth","title":"Nth.Nth","content":"Nth.Nth \nNth \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html","title":"OfBytes","content":"OfBytes \n \nOfBytes.Invoke \nInvoke \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes \nOfBytes.OfBytes \nOfBytes"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#Invoke","title":"OfBytes.Invoke","content":"OfBytes.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofbytes.html#OfBytes","title":"OfBytes.OfBytes","content":"OfBytes.OfBytes \nOfBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html","title":"OfList","content":"OfList \n \nOfList.Invoke \nInvoke \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList \nOfList.OfList \nOfList"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#Invoke","title":"OfList.Invoke","content":"OfList.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-oflist.html#OfList","title":"OfList.OfList","content":"OfList.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html","title":"OfSeq","content":"OfSeq \n \nOfSeq.Invoke \nInvoke \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq \nOfSeq.OfSeq \nOfSeq"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#Invoke","title":"OfSeq.Invoke","content":"OfSeq.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-ofseq.html#OfSeq","title":"OfSeq.OfSeq","content":"OfSeq.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-one.html","title":"One","content":"One \n \nOne.Invoke \nInvoke \nOne.One \nOne \nOne.One \nOne \nOne.One \nOne"},{"uri":"/FSharpPlus/reference/fsharpplus-control-one.html#Invoke","title":"One.Invoke","content":"One.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-one.html#One","title":"One.One","content":"One.One \nOne \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-one.html#One","title":"One.One","content":"One.One \nOne \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-one.html#One","title":"One.One","content":"One.One \nOne \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html","title":"Parse","content":"Parse \n \nParse.Invoke \nInvoke \nParse.InvokeOnInstance \nInvokeOnInstance \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse \nParse.Parse \nParse"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Invoke","title":"Parse.Invoke","content":"Parse.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#InvokeOnInstance","title":"Parse.InvokeOnInstance","content":"Parse.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-parse.html#Parse","title":"Parse.Parse","content":"Parse.Parse \nParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pass.html","title":"Pass","content":"Pass \n \nPass.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pass.html#Invoke","title":"Pass.Invoke","content":"Pass.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html","title":"Pi","content":"Pi \n \nPi.Invoke \nInvoke \nPi.Pi \nPi \nPi.Pi \nPi \nPi.Pi \nPi \nPi.Pi \nPi \nPi.Pi \nPi \nPi.Pi \nPi \nPi.Pi \nPi"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Invoke","title":"Pi.Invoke","content":"Pi.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pi.html#Pi","title":"Pi.Pi","content":"Pi.Pi \nPi \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html","title":"Pick","content":"Pick \n \nPick.Invoke \nInvoke \nPick.Pick \nPick \nPick.Pick \nPick \nPick.Pick \nPick \nPick.Pick \nPick \nPick.Pick \nPick \nPick.Pick \nPick"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Invoke","title":"Pick.Invoke","content":"Pick.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Pick","title":"Pick.Pick","content":"Pick.Pick \nPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Pick","title":"Pick.Pick","content":"Pick.Pick \nPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Pick","title":"Pick.Pick","content":"Pick.Pick \nPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Pick","title":"Pick.Pick","content":"Pick.Pick \nPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Pick","title":"Pick.Pick","content":"Pick.Pick \nPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pick.html#Pick","title":"Pick.Pick","content":"Pick.Pick \nPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html","title":"Plus","content":"Plus \n \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nPlus.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#\u0060\u0060\u002B\u0060\u0060","title":"Plus.\u0060\u0060\u002B\u0060\u0060","content":"Plus.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-plus.html#Invoke","title":"Plus.Invoke","content":"Plus.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html","title":"Pure","content":"Pure \n \nPure.Invoke \nInvoke \nPure.InvokeOnInstance \nInvokeOnInstance \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure \nPure.Pure \nPure"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Invoke","title":"Pure.Invoke","content":"Pure.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#InvokeOnInstance","title":"Pure.InvokeOnInstance","content":"Pure.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-pure.html#Pure","title":"Pure.Pure","content":"Pure.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-put.html","title":"Put","content":"Put \n \nPut.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-put.html#Invoke","title":"Put.Invoke","content":"Put.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-reduce.html","title":"Reduce","content":"Reduce \n \nReduce.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-reduce.html#Invoke","title":"Reduce.Invoke","content":"Reduce.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html","title":"Replace","content":"Replace \n \nReplace.Invoke \nInvoke \nReplace.Replace \nReplace \nReplace.Replace \nReplace \nReplace.Replace \nReplace \nReplace.Replace \nReplace \nReplace.Replace \nReplace \nReplace.Replace \nReplace"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Invoke","title":"Replace.Invoke","content":"Replace.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Replace","title":"Replace.Replace","content":"Replace.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Replace","title":"Replace.Replace","content":"Replace.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Replace","title":"Replace.Replace","content":"Replace.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Replace","title":"Replace.Replace","content":"Replace.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Replace","title":"Replace.Replace","content":"Replace.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-replace.html#Replace","title":"Replace.Replace","content":"Replace.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html","title":"Return","content":"Return \n \nReturn.Invoke \nInvoke \nReturn.InvokeOnInstance \nInvokeOnInstance \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn \nReturn.Return \nReturn"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Invoke","title":"Return.Invoke","content":"Return.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#InvokeOnInstance","title":"Return.InvokeOnInstance","content":"Return.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-return.html#Return","title":"Return.Return","content":"Return.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html","title":"Rev","content":"Rev \n \nRev.Invoke \nInvoke \nRev.InvokeOnInstance \nInvokeOnInstance \nRev.Rev \nRev \nRev.Rev \nRev \nRev.Rev \nRev \nRev.Rev \nRev \nRev.Rev \nRev"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#Invoke","title":"Rev.Invoke","content":"Rev.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#InvokeOnInstance","title":"Rev.InvokeOnInstance","content":"Rev.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#Rev","title":"Rev.Rev","content":"Rev.Rev \nRev \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#Rev","title":"Rev.Rev","content":"Rev.Rev \nRev \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#Rev","title":"Rev.Rev","content":"Rev.Rev \nRev \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#Rev","title":"Rev.Rev","content":"Rev.Rev \nRev \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-rev.html#Rev","title":"Rev.Rev","content":"Rev.Rev \nRev \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-scan.html","title":"Scan","content":"Scan \n \nScan.Invoke \nInvoke \nScan.Scan \nScan \nScan.Scan \nScan \nScan.Scan \nScan \nScan.Scan \nScan"},{"uri":"/FSharpPlus/reference/fsharpplus-control-scan.html#Invoke","title":"Scan.Invoke","content":"Scan.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-scan.html#Scan","title":"Scan.Scan","content":"Scan.Scan \nScan \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-scan.html#Scan","title":"Scan.Scan","content":"Scan.Scan \nScan \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-scan.html#Scan","title":"Scan.Scan","content":"Scan.Scan \nScan \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-scan.html#Scan","title":"Scan.Scan","content":"Scan.Scan \nScan \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html","title":"Sequence","content":"Sequence \n \nSequence.ForInfiniteSequences \nForInfiniteSequences \nSequence.Invoke \nInvoke \nSequence.InvokeOnInstance \nInvokeOnInstance \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence \nSequence.Sequence \nSequence"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#ForInfiniteSequences","title":"Sequence.ForInfiniteSequences","content":"Sequence.ForInfiniteSequences \nForInfiniteSequences \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Invoke","title":"Sequence.Invoke","content":"Sequence.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#InvokeOnInstance","title":"Sequence.InvokeOnInstance","content":"Sequence.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sequence.html#Sequence","title":"Sequence.Sequence","content":"Sequence.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum.html","title":"Signum","content":"Signum \n \nSignum.Invoke \nInvoke \nSignum.Signum \nSignum \nSignum.Signum \nSignum \nSignum.Signum \nSignum"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum.html#Invoke","title":"Signum.Invoke","content":"Signum.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum.html#Signum","title":"Signum.Signum","content":"Signum.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum.html#Signum","title":"Signum.Signum","content":"Signum.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum.html#Signum","title":"Signum.Signum","content":"Signum.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html","title":"Signum\u0027","content":"Signum\u0027 \n \nSignum\u0027.Invoke \nInvoke \nSignum\u0027.Signum \nSignum \nSignum\u0027.Signum \nSignum \nSignum\u0027.Signum \nSignum \nSignum\u0027.Signum \nSignum \nSignum\u0027.Signum \nSignum"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html#Invoke","title":"Signum\u0027.Invoke","content":"Signum\u0027.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html#Signum","title":"Signum\u0027.Signum","content":"Signum\u0027.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html#Signum","title":"Signum\u0027.Signum","content":"Signum\u0027.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html#Signum","title":"Signum\u0027.Signum","content":"Signum\u0027.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html#Signum","title":"Signum\u0027.Signum","content":"Signum\u0027.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-signum\u0027.html#Signum","title":"Signum\u0027.Signum","content":"Signum\u0027.Signum \nSignum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html","title":"Skip","content":"Skip \n \nSkip.Invoke \nInvoke \nSkip.Skip \nSkip \nSkip.Skip \nSkip \nSkip.Skip \nSkip \nSkip.Skip \nSkip \nSkip.Skip \nSkip \nSkip.Skip \nSkip \nSkip.Skip \nSkip"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Invoke","title":"Skip.Invoke","content":"Skip.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skip.html#Skip","title":"Skip.Skip","content":"Skip.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html","title":"SkipWhile","content":"SkipWhile \n \nSkipWhile.Invoke \nInvoke \nSkipWhile.SkipWhile \nSkipWhile \nSkipWhile.SkipWhile \nSkipWhile \nSkipWhile.SkipWhile \nSkipWhile \nSkipWhile.SkipWhile \nSkipWhile \nSkipWhile.SkipWhile \nSkipWhile \nSkipWhile.SkipWhile \nSkipWhile"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#Invoke","title":"SkipWhile.Invoke","content":"SkipWhile.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#SkipWhile","title":"SkipWhile.SkipWhile","content":"SkipWhile.SkipWhile \nSkipWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#SkipWhile","title":"SkipWhile.SkipWhile","content":"SkipWhile.SkipWhile \nSkipWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#SkipWhile","title":"SkipWhile.SkipWhile","content":"SkipWhile.SkipWhile \nSkipWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#SkipWhile","title":"SkipWhile.SkipWhile","content":"SkipWhile.SkipWhile \nSkipWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#SkipWhile","title":"SkipWhile.SkipWhile","content":"SkipWhile.SkipWhile \nSkipWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-skipwhile.html#SkipWhile","title":"SkipWhile.SkipWhile","content":"SkipWhile.SkipWhile \nSkipWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html","title":"Sort","content":"Sort \n \nSort.Invoke \nInvoke \nSort.InvokeOnInstance \nInvokeOnInstance \nSort.Sort \nSort \nSort.Sort \nSort \nSort.Sort \nSort \nSort.Sort \nSort \nSort.Sort \nSort"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#Invoke","title":"Sort.Invoke","content":"Sort.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#InvokeOnInstance","title":"Sort.InvokeOnInstance","content":"Sort.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#Sort","title":"Sort.Sort","content":"Sort.Sort \nSort \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#Sort","title":"Sort.Sort","content":"Sort.Sort \nSort \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#Sort","title":"Sort.Sort","content":"Sort.Sort \nSort \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#Sort","title":"Sort.Sort","content":"Sort.Sort \nSort \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sort.html#Sort","title":"Sort.Sort","content":"Sort.Sort \nSort \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html","title":"SortBy","content":"SortBy \n \nSortBy.Invoke \nInvoke \nSortBy.InvokeOnInstance \nInvokeOnInstance \nSortBy.SortBy \nSortBy \nSortBy.SortBy \nSortBy \nSortBy.SortBy \nSortBy \nSortBy.SortBy \nSortBy \nSortBy.SortBy \nSortBy"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#Invoke","title":"SortBy.Invoke","content":"SortBy.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#InvokeOnInstance","title":"SortBy.InvokeOnInstance","content":"SortBy.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#SortBy","title":"SortBy.SortBy","content":"SortBy.SortBy \nSortBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#SortBy","title":"SortBy.SortBy","content":"SortBy.SortBy \nSortBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#SortBy","title":"SortBy.SortBy","content":"SortBy.SortBy \nSortBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#SortBy","title":"SortBy.SortBy","content":"SortBy.SortBy \nSortBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortby.html#SortBy","title":"SortBy.SortBy","content":"SortBy.SortBy \nSortBy \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html","title":"SortByDescending","content":"SortByDescending \n \nSortByDescending.Invoke \nInvoke \nSortByDescending.InvokeOnInstance \nInvokeOnInstance \nSortByDescending.SortByDescending \nSortByDescending \nSortByDescending.SortByDescending \nSortByDescending \nSortByDescending.SortByDescending \nSortByDescending \nSortByDescending.SortByDescending \nSortByDescending \nSortByDescending.SortByDescending \nSortByDescending"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#Invoke","title":"SortByDescending.Invoke","content":"SortByDescending.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#InvokeOnInstance","title":"SortByDescending.InvokeOnInstance","content":"SortByDescending.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#SortByDescending","title":"SortByDescending.SortByDescending","content":"SortByDescending.SortByDescending \nSortByDescending \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#SortByDescending","title":"SortByDescending.SortByDescending","content":"SortByDescending.SortByDescending \nSortByDescending \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#SortByDescending","title":"SortByDescending.SortByDescending","content":"SortByDescending.SortByDescending \nSortByDescending \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#SortByDescending","title":"SortByDescending.SortByDescending","content":"SortByDescending.SortByDescending \nSortByDescending \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sortbydescending.html#SortByDescending","title":"SortByDescending.SortByDescending","content":"SortByDescending.SortByDescending \nSortByDescending \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html","title":"Split","content":"Split \n \nSplit.Invoke \nInvoke \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit \nSplit.Split \nSplit"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Invoke","title":"Split.Invoke","content":"Split.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-split.html#Split","title":"Split.Split","content":"Split.Split \nSplit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html","title":"Sqrt","content":"Sqrt \n \nSqrt.Invoke \nInvoke \nSqrt.Sqrt \nSqrt \nSqrt.Sqrt \nSqrt \nSqrt.Sqrt \nSqrt \nSqrt.Sqrt \nSqrt \nSqrt.Sqrt \nSqrt \nSqrt.Sqrt \nSqrt"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Invoke","title":"Sqrt.Invoke","content":"Sqrt.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Sqrt","title":"Sqrt.Sqrt","content":"Sqrt.Sqrt \nSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Sqrt","title":"Sqrt.Sqrt","content":"Sqrt.Sqrt \nSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Sqrt","title":"Sqrt.Sqrt","content":"Sqrt.Sqrt \nSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Sqrt","title":"Sqrt.Sqrt","content":"Sqrt.Sqrt \nSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Sqrt","title":"Sqrt.Sqrt","content":"Sqrt.Sqrt \nSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sqrt.html#Sqrt","title":"Sqrt.Sqrt","content":"Sqrt.Sqrt \nSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html","title":"Subtract","content":"Subtract \n \nSubtract.Invoke \nInvoke \nSubtract.Subtract \nSubtract \nSubtract.Subtract \nSubtract \nSubtract.Subtract \nSubtract \nSubtract.Subtract \nSubtract \nSubtract.Subtract \nSubtract \nSubtract.Subtract \nSubtract \nSubtract.Subtract \nSubtract"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Invoke","title":"Subtract.Invoke","content":"Subtract.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-subtract.html#Subtract","title":"Subtract.Subtract","content":"Subtract.Subtract \nSubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html","title":"Sum","content":"Sum \n \nSum.Invoke \nInvoke \nSum.InvokeOnInstance \nInvokeOnInstance \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum \nSum.Sum \nSum"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Invoke","title":"Sum.Invoke","content":"Sum.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#InvokeOnInstance","title":"Sum.InvokeOnInstance","content":"Sum.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-sum.html#Sum","title":"Sum.Sum","content":"Sum.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html","title":"Take","content":"Take \n \nTake.Invoke \nInvoke \nTake.Take \nTake \nTake.Take \nTake \nTake.Take \nTake \nTake.Take \nTake \nTake.Take \nTake \nTake.Take \nTake \nTake.Take \nTake"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Invoke","title":"Take.Invoke","content":"Take.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-take.html#Take","title":"Take.Take","content":"Take.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html","title":"TakeWhile","content":"TakeWhile \n \nTakeWhile.Invoke \nInvoke \nTakeWhile.TakeWhile \nTakeWhile \nTakeWhile.TakeWhile \nTakeWhile \nTakeWhile.TakeWhile \nTakeWhile \nTakeWhile.TakeWhile \nTakeWhile \nTakeWhile.TakeWhile \nTakeWhile \nTakeWhile.TakeWhile \nTakeWhile"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#Invoke","title":"TakeWhile.Invoke","content":"TakeWhile.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#TakeWhile","title":"TakeWhile.TakeWhile","content":"TakeWhile.TakeWhile \nTakeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#TakeWhile","title":"TakeWhile.TakeWhile","content":"TakeWhile.TakeWhile \nTakeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#TakeWhile","title":"TakeWhile.TakeWhile","content":"TakeWhile.TakeWhile \nTakeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#TakeWhile","title":"TakeWhile.TakeWhile","content":"TakeWhile.TakeWhile \nTakeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#TakeWhile","title":"TakeWhile.TakeWhile","content":"TakeWhile.TakeWhile \nTakeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-takewhile.html#TakeWhile","title":"TakeWhile.TakeWhile","content":"TakeWhile.TakeWhile \nTakeWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tell.html","title":"Tell","content":"Tell \n \nTell.Invoke \nInvoke"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tell.html#Invoke","title":"Tell.Invoke","content":"Tell.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-throw.html","title":"Throw","content":"Throw \n \nThrow.Invoke \nInvoke \nThrow.Throw \nThrow \nThrow.Throw \nThrow \nThrow.Throw \nThrow \nThrow.Throw \nThrow"},{"uri":"/FSharpPlus/reference/fsharpplus-control-throw.html#Invoke","title":"Throw.Invoke","content":"Throw.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-throw.html#Throw","title":"Throw.Throw","content":"Throw.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-throw.html#Throw","title":"Throw.Throw","content":"Throw.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-throw.html#Throw","title":"Throw.Throw","content":"Throw.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-throw.html#Throw","title":"Throw.Throw","content":"Throw.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html","title":"ToArray","content":"ToArray \n \nToArray.Invoke \nInvoke \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray \nToArray.ToArray \nToArray"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#Invoke","title":"ToArray.Invoke","content":"ToArray.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toarray.html#ToArray","title":"ToArray.ToArray","content":"ToArray.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html","title":"ToBigInt","content":"ToBigInt \n \nToBigInt.Invoke \nInvoke \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt \nToBigInt.ToBigInt \nToBigInt"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#Invoke","title":"ToBigInt.Invoke","content":"ToBigInt.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobigint.html#ToBigInt","title":"ToBigInt.ToBigInt","content":"ToBigInt.ToBigInt \nToBigInt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html","title":"ToBytes","content":"ToBytes \n \nToBytes.Invoke \nInvoke \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes \nToBytes.ToBytes \nToBytes"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#Invoke","title":"ToBytes.Invoke","content":"ToBytes.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tobytes.html#ToBytes","title":"ToBytes.ToBytes","content":"ToBytes.ToBytes \nToBytes \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html","title":"ToList","content":"ToList \n \nToList.Invoke \nInvoke \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList \nToList.ToList \nToList"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#Invoke","title":"ToList.Invoke","content":"ToList.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tolist.html#ToList","title":"ToList.ToList","content":"ToList.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html","title":"ToSeq","content":"ToSeq \n \nToSeq.Invoke \nInvoke \nToSeq.InvokeOnInstance \nInvokeOnInstance \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq \nToSeq.ToSeq \nToSeq"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#Invoke","title":"ToSeq.Invoke","content":"ToSeq.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#InvokeOnInstance","title":"ToSeq.InvokeOnInstance","content":"ToSeq.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-toseq.html#ToSeq","title":"ToSeq.ToSeq","content":"ToSeq.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html","title":"Transpose","content":"Transpose \n \nTranspose.ForInfiniteSequences \nForInfiniteSequences \nTranspose.Invoke \nInvoke \nTranspose.InvokeOnInstance \nInvokeOnInstance \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose \nTranspose.Transpose \nTranspose"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#ForInfiniteSequences","title":"Transpose.ForInfiniteSequences","content":"Transpose.ForInfiniteSequences \nForInfiniteSequences \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Invoke","title":"Transpose.Invoke","content":"Transpose.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#InvokeOnInstance","title":"Transpose.InvokeOnInstance","content":"Transpose.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-transpose.html#Transpose","title":"Transpose.Transpose","content":"Transpose.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html","title":"Traverse","content":"Traverse \n \nTraverse.Invoke \nInvoke \nTraverse.InvokeOnInstance \nInvokeOnInstance \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse \nTraverse.Traverse \nTraverse"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Invoke","title":"Traverse.Invoke","content":"Traverse.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#InvokeOnInstance","title":"Traverse.InvokeOnInstance","content":"Traverse.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverse.html#Traverse","title":"Traverse.Traverse","content":"Traverse.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html","title":"TraverseIndexed","content":"TraverseIndexed \n \nTraverseIndexed.Invoke \nInvoke \nTraverseIndexed.InvokeOnInstance \nInvokeOnInstance \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed \nTraverseIndexed.TraverseIndexed \nTraverseIndexed"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#Invoke","title":"TraverseIndexed.Invoke","content":"TraverseIndexed.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#InvokeOnInstance","title":"TraverseIndexed.InvokeOnInstance","content":"TraverseIndexed.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-traverseindexed.html#TraverseIndexed","title":"TraverseIndexed.TraverseIndexed","content":"TraverseIndexed.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trydivide.html","title":"TryDivide","content":"TryDivide \n \nTryDivide.Invoke \nInvoke \nTryDivide.TryDivide \nTryDivide \nTryDivide.TryDivide \nTryDivide \nTryDivide.TryDivide \nTryDivide \nTryDivide.TryDivide \nTryDivide"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trydivide.html#Invoke","title":"TryDivide.Invoke","content":"TryDivide.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trydivide.html#TryDivide","title":"TryDivide.TryDivide","content":"TryDivide.TryDivide \nTryDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trydivide.html#TryDivide","title":"TryDivide.TryDivide","content":"TryDivide.TryDivide \nTryDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trydivide.html#TryDivide","title":"TryDivide.TryDivide","content":"TryDivide.TryDivide \nTryDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trydivide.html#TryDivide","title":"TryDivide.TryDivide","content":"TryDivide.TryDivide \nTryDivide \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html","title":"TryFinally","content":"TryFinally \n \nTryFinally.Invoke \nInvoke \nTryFinally.InvokeForStrict \nInvokeForStrict \nTryFinally.InvokeOnInstance \nInvokeOnInstance \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally \nTryFinally.TryFinally \nTryFinally"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#Invoke","title":"TryFinally.Invoke","content":"TryFinally.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#InvokeForStrict","title":"TryFinally.InvokeForStrict","content":"TryFinally.InvokeForStrict \nInvokeForStrict \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#InvokeOnInstance","title":"TryFinally.InvokeOnInstance","content":"TryFinally.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfinally.html#TryFinally","title":"TryFinally.TryFinally","content":"TryFinally.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html","title":"TryFind","content":"TryFind \n \nTryFind.Invoke \nInvoke \nTryFind.TryFind \nTryFind \nTryFind.TryFind \nTryFind \nTryFind.TryFind \nTryFind \nTryFind.TryFind \nTryFind \nTryFind.TryFind \nTryFind"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html#Invoke","title":"TryFind.Invoke","content":"TryFind.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html#TryFind","title":"TryFind.TryFind","content":"TryFind.TryFind \nTryFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html#TryFind","title":"TryFind.TryFind","content":"TryFind.TryFind \nTryFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html#TryFind","title":"TryFind.TryFind","content":"TryFind.TryFind \nTryFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html#TryFind","title":"TryFind.TryFind","content":"TryFind.TryFind \nTryFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfind.html#TryFind","title":"TryFind.TryFind","content":"TryFind.TryFind \nTryFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html","title":"TryFindIndex","content":"TryFindIndex \n \nTryFindIndex.Invoke \nInvoke \nTryFindIndex.InvokeOnInstance \nInvokeOnInstance \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex \nTryFindIndex.TryFindIndex \nTryFindIndex"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#Invoke","title":"TryFindIndex.Invoke","content":"TryFindIndex.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#InvokeOnInstance","title":"TryFindIndex.InvokeOnInstance","content":"TryFindIndex.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindindex.html#TryFindIndex","title":"TryFindIndex.TryFindIndex","content":"TryFindIndex.TryFindIndex \nTryFindIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html","title":"TryFindLastSliceIndex","content":"TryFindLastSliceIndex \n \nTryFindLastSliceIndex.Invoke \nInvoke \nTryFindLastSliceIndex.InvokeOnInstance \nInvokeOnInstance \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \nTryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#Invoke","title":"TryFindLastSliceIndex.Invoke","content":"TryFindLastSliceIndex.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#InvokeOnInstance","title":"TryFindLastSliceIndex.InvokeOnInstance","content":"TryFindLastSliceIndex.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindlastsliceindex.html#TryFindLastSliceIndex","title":"TryFindLastSliceIndex.TryFindLastSliceIndex","content":"TryFindLastSliceIndex.TryFindLastSliceIndex \nTryFindLastSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html","title":"TryFindSliceIndex","content":"TryFindSliceIndex \n \nTryFindSliceIndex.Invoke \nInvoke \nTryFindSliceIndex.InvokeOnInstance \nInvokeOnInstance \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \nTryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#Invoke","title":"TryFindSliceIndex.Invoke","content":"TryFindSliceIndex.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#InvokeOnInstance","title":"TryFindSliceIndex.InvokeOnInstance","content":"TryFindSliceIndex.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryfindsliceindex.html#TryFindSliceIndex","title":"TryFindSliceIndex.TryFindSliceIndex","content":"TryFindSliceIndex.TryFindSliceIndex \nTryFindSliceIndex \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html","title":"TryHead","content":"TryHead \n \nTryHead.Invoke \nInvoke \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead \nTryHead.TryHead \nTryHead"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#Invoke","title":"TryHead.Invoke","content":"TryHead.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryhead.html#TryHead","title":"TryHead.TryHead","content":"TryHead.TryHead \nTryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html","title":"TryItem","content":"TryItem \n \nTryItem.Invoke \nInvoke \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem \nTryItem.TryItem \nTryItem"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#Invoke","title":"TryItem.Invoke","content":"TryItem.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryitem.html#TryItem","title":"TryItem.TryItem","content":"TryItem.TryItem \nTryItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html","title":"TryLast","content":"TryLast \n \nTryLast.Invoke \nInvoke \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast \nTryLast.TryLast \nTryLast"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#Invoke","title":"TryLast.Invoke","content":"TryLast.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trylast.html#TryLast","title":"TryLast.TryLast","content":"TryLast.TryLast \nTryLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate.html","title":"TryNegate","content":"TryNegate \n \nTryNegate.Invoke \nInvoke \nTryNegate.TryNegate \nTryNegate \nTryNegate.TryNegate \nTryNegate"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate.html#Invoke","title":"TryNegate.Invoke","content":"TryNegate.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate.html#TryNegate","title":"TryNegate.TryNegate","content":"TryNegate.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate.html#TryNegate","title":"TryNegate.TryNegate","content":"TryNegate.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html","title":"TryNegate\u0027","content":"TryNegate\u0027 \n \nTryNegate\u0027.Invoke \nInvoke \nTryNegate\u0027.TryNegate \nTryNegate \nTryNegate\u0027.TryNegate \nTryNegate \nTryNegate\u0027.TryNegate \nTryNegate \nTryNegate\u0027.TryNegate \nTryNegate \nTryNegate\u0027.TryNegate \nTryNegate"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html#Invoke","title":"TryNegate\u0027.Invoke","content":"TryNegate\u0027.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html#TryNegate","title":"TryNegate\u0027.TryNegate","content":"TryNegate\u0027.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html#TryNegate","title":"TryNegate\u0027.TryNegate","content":"TryNegate\u0027.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html#TryNegate","title":"TryNegate\u0027.TryNegate","content":"TryNegate\u0027.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html#TryNegate","title":"TryNegate\u0027.TryNegate","content":"TryNegate\u0027.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trynegate\u0027.html#TryNegate","title":"TryNegate\u0027.TryNegate","content":"TryNegate\u0027.TryNegate \nTryNegate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html","title":"TryParse","content":"TryParse \n \nTryParse.Invoke \nInvoke \nTryParse.InvokeOnConvention \nInvokeOnConvention \nTryParse.InvokeOnInstance \nInvokeOnInstance \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse \nTryParse.TryParse \nTryParse"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#Invoke","title":"TryParse.Invoke","content":"TryParse.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#InvokeOnConvention","title":"TryParse.InvokeOnConvention","content":"TryParse.InvokeOnConvention \nInvokeOnConvention \n\n The .Net signature\n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#InvokeOnInstance","title":"TryParse.InvokeOnInstance","content":"TryParse.InvokeOnInstance \nInvokeOnInstance \n\n The F# signature\n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-tryparse.html#TryParse","title":"TryParse.TryParse","content":"TryParse.TryParse \nTryParse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html","title":"TryPick","content":"TryPick \n \nTryPick.Invoke \nInvoke \nTryPick.TryPick \nTryPick \nTryPick.TryPick \nTryPick \nTryPick.TryPick \nTryPick \nTryPick.TryPick \nTryPick \nTryPick.TryPick \nTryPick"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html#Invoke","title":"TryPick.Invoke","content":"TryPick.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html#TryPick","title":"TryPick.TryPick","content":"TryPick.TryPick \nTryPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html#TryPick","title":"TryPick.TryPick","content":"TryPick.TryPick \nTryPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html#TryPick","title":"TryPick.TryPick","content":"TryPick.TryPick \nTryPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html#TryPick","title":"TryPick.TryPick","content":"TryPick.TryPick \nTryPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trypick.html#TryPick","title":"TryPick.TryPick","content":"TryPick.TryPick \nTryPick \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html","title":"TrySqrt","content":"TrySqrt \n \nTrySqrt.Invoke \nInvoke \nTrySqrt.TrySqrt \nTrySqrt \nTrySqrt.TrySqrt \nTrySqrt \nTrySqrt.TrySqrt \nTrySqrt \nTrySqrt.TrySqrt \nTrySqrt \nTrySqrt.TrySqrt \nTrySqrt \nTrySqrt.TrySqrt \nTrySqrt"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#Invoke","title":"TrySqrt.Invoke","content":"TrySqrt.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#TrySqrt","title":"TrySqrt.TrySqrt","content":"TrySqrt.TrySqrt \nTrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#TrySqrt","title":"TrySqrt.TrySqrt","content":"TrySqrt.TrySqrt \nTrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#TrySqrt","title":"TrySqrt.TrySqrt","content":"TrySqrt.TrySqrt \nTrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#TrySqrt","title":"TrySqrt.TrySqrt","content":"TrySqrt.TrySqrt \nTrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#TrySqrt","title":"TrySqrt.TrySqrt","content":"TrySqrt.TrySqrt \nTrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrt.html#TrySqrt","title":"TrySqrt.TrySqrt","content":"TrySqrt.TrySqrt \nTrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html","title":"TrySqrtRem","content":"TrySqrtRem \n \nTrySqrtRem.Invoke \nInvoke \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem \nTrySqrtRem.TrySqrtRem \nTrySqrtRem"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#Invoke","title":"TrySqrtRem.Invoke","content":"TrySqrtRem.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysqrtrem.html#TrySqrtRem","title":"TrySqrtRem.TrySqrtRem","content":"TrySqrtRem.TrySqrtRem \nTrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html","title":"TrySubtract","content":"TrySubtract \n \nTrySubtract.Invoke \nInvoke \nTrySubtract.TrySubtract \nTrySubtract \nTrySubtract.TrySubtract \nTrySubtract \nTrySubtract.TrySubtract \nTrySubtract \nTrySubtract.TrySubtract \nTrySubtract \nTrySubtract.TrySubtract \nTrySubtract \nTrySubtract.TrySubtract \nTrySubtract \nTrySubtract.TrySubtract \nTrySubtract"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#Invoke","title":"TrySubtract.Invoke","content":"TrySubtract.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trysubtract.html#TrySubtract","title":"TrySubtract.TrySubtract","content":"TrySubtract.TrySubtract \nTrySubtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html","title":"TryWith","content":"TryWith \n \nTryWith.Invoke \nInvoke \nTryWith.InvokeForStrict \nInvokeForStrict \nTryWith.InvokeForWhile \nInvokeForWhile \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith \nTryWith.TryWith \nTryWith"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#Invoke","title":"TryWith.Invoke","content":"TryWith.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#InvokeForStrict","title":"TryWith.InvokeForStrict","content":"TryWith.InvokeForStrict \nInvokeForStrict \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#InvokeForWhile","title":"TryWith.InvokeForWhile","content":"TryWith.InvokeForWhile \nInvokeForWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-trywith.html#TryWith","title":"TryWith.TryWith","content":"TryWith.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html","title":"Uncurry","content":"Uncurry \n \nUncurry.Invoke \nInvoke \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry \nUncurry.Uncurry \nUncurry"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Invoke","title":"Uncurry.Invoke","content":"Uncurry.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-uncurry.html#Uncurry","title":"Uncurry.Uncurry","content":"Uncurry.Uncurry \nUncurry \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html","title":"Unzip","content":"Unzip \n \nUnzip.Invoke \nInvoke \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip \nUnzip.Unzip \nUnzip"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Invoke","title":"Unzip.Invoke","content":"Unzip.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-unzip.html#Unzip","title":"Unzip.Unzip","content":"Unzip.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html","title":"Using","content":"Using \n \nUsing.Invoke \nInvoke \nUsing.InvokeOnInstance \nInvokeOnInstance \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing \nUsing.Using \nUsing"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Invoke","title":"Using.Invoke","content":"Using.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#InvokeOnInstance","title":"Using.InvokeOnInstance","content":"Using.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-using.html#Using","title":"Using.Using","content":"Using.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html","title":"Zero","content":"Zero \n \nZero.Invoke \nInvoke \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero \nZero.Zero \nZero"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Invoke","title":"Zero.Invoke","content":"Zero.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zero.html#Zero","title":"Zero.Zero","content":"Zero.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html","title":"Zip","content":"Zip \n \nZip.Invoke \nInvoke \nZip.InvokeOnInstance \nInvokeOnInstance \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip \nZip.Zip \nZip"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Invoke","title":"Zip.Invoke","content":"Zip.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#InvokeOnInstance","title":"Zip.InvokeOnInstance","content":"Zip.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zip.html#Zip","title":"Zip.Zip","content":"Zip.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html","title":"ZipApply","content":"ZipApply \n \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \nZipApply.Invoke \nInvoke \nZipApply.InvokeOnInstance \nInvokeOnInstance"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#\u0060\u0060\u003C.\u003E\u0060\u0060","title":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060","content":"ZipApply.\u0060\u0060\u003C.\u003E\u0060\u0060 \n\u0060\u0060\u003C.\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#Invoke","title":"ZipApply.Invoke","content":"ZipApply.Invoke \nInvoke \n"},{"uri":"/FSharpPlus/reference/fsharpplus-control-zipapply.html#InvokeOnInstance","title":"ZipApply.InvokeOnInstance","content":"ZipApply.InvokeOnInstance \nInvokeOnInstance \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html","title":"ChoiceT","content":"ChoiceT \n \nChoiceT.run \nrun \nChoiceT.lift \nlift \nChoiceT.hoist \nhoist \nChoiceT.bind \nbind \nChoiceT.apply \napply \nChoiceT.map \nmap \nChoiceT.map2 \nmap2"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#run","title":"ChoiceT.run","content":"ChoiceT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#lift","title":"ChoiceT.lift","content":"ChoiceT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into a ChoiceT\u003C\u0027Monad\u003CChoice\u003C\u0027T,\u0027Error\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#hoist","title":"ChoiceT.hoist","content":"ChoiceT.hoist \nhoist \n\n Transform a Choice\u003C\u0027T,\u0027TError\u003E to a ChoiceT\u003C\u0027Monad\u003CChoice\u003C\u0027T,\u0027TError\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#bind","title":"ChoiceT.bind","content":"ChoiceT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#apply","title":"ChoiceT.apply","content":"ChoiceT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#map","title":"ChoiceT.map","content":"ChoiceT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet.html#map2","title":"ChoiceT.map2","content":"ChoiceT.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose.html","title":"Compose","content":"Compose \n\n Basic operations on Compose\n \nCompose.run \nrun"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose.html#run","title":"Compose.run","content":"Compose.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const.html","title":"Const","content":"Const \n\n Basic operations on Const\n \nConst.run \nrun \nConst.map \nmap \nConst.apply \napply"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const.html#run","title":"Const.run","content":"Const.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const.html#map","title":"Const.map","content":"Const.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const.html#apply","title":"Const.apply","content":"Const.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html","title":"Cont","content":"Cont \n\n Basic operations on Cont\n \nCont.run \nrun \nCont.eval \neval \nCont.callCC \ncallCC \nCont.map \nmap \nCont.bind \nbind \nCont.apply \napply \nCont.map2 \nmap2 \nCont.map3 \nmap3"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#run","title":"Cont.run","content":"Cont.run \nrun \n\n The result of running a CPS computation with a given final continuation.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#eval","title":"Cont.eval","content":"Cont.eval \neval \n\n The result of running a CPS computation with the identity function as the final continuation.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#callCC","title":"Cont.callCC","content":"Cont.callCC \ncallCC \n\n (call-with-current-continuation) calls a function with the current continuation as its argument.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#map","title":"Cont.map","content":"Cont.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#bind","title":"Cont.bind","content":"Cont.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#apply","title":"Cont.apply","content":"Cont.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#map2","title":"Cont.map2","content":"Cont.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont.html#map3","title":"Cont.map3","content":"Cont.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-contt.html","title":"ContT","content":"ContT \n\n Basic operations on ContT\n \nContT.run \nrun \nContT.eval \neval"},{"uri":"/FSharpPlus/reference/fsharpplus-data-contt.html#run","title":"ContT.run","content":"ContT.run \nrun \n\n The result of running a CPS computation with the identity function as the final continuation.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-contt.html#eval","title":"ContT.eval","content":"ContT.eval \neval \n\n The result of running a CPS computation with its inner monad\u0027s \u0027Return\u0027 function as the final continuation.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductprimitives.html","title":"CoproductPrimitives","content":"CoproductPrimitives \n \nCoproductPrimitives.InL \nInL \nCoproductPrimitives.InR \nInR \nCoproductPrimitives.(|InL|InR|) \n(|InL|InR|)"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductprimitives.html#InL","title":"CoproductPrimitives.InL","content":"CoproductPrimitives.InL \nInL \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductprimitives.html#InR","title":"CoproductPrimitives.InR","content":"CoproductPrimitives.InR \nInR \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductprimitives.html#(|InL|InR|)","title":"CoproductPrimitives.(|InL|InR|)","content":"CoproductPrimitives.(|InL|InR|) \n(|InL|InR|) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html","title":"DList","content":"DList \n \nDList.append \nappend \nDList.cons \ncons \nDList.empty \nempty \nDList.foldBack \nfoldBack \nDList.fold \nfold \nDList.head \nhead \nDList.tryHead \ntryHead \nDList.isEmpty \nisEmpty \nDList.length \nlength \nDList.singleton \nsingleton \nDList.add \nadd \nDList.tail \ntail \nDList.tryTail \ntryTail \nDList.uncons \nuncons \nDList.tryUncons \ntryUncons \nDList.ofSeq \nofSeq \nDList.iter \niter \nDList.toList \ntoList \nDList.toArray \ntoArray \nDList.toSeq \ntoSeq \nDList.pairwise \npairwise \nDList.map \nmap \nDList.concat \nconcat \nDList.ap \nap \nDList.bind \nbind"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#append","title":"DList.append","content":"DList.append \nappend \n\n O(1). Returns a new DList of two lists.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#cons","title":"DList.cons","content":"DList.cons \ncons \n\n O(1). Returns a new DList with the element added to the beginning.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#empty","title":"DList.empty","content":"DList.empty \nempty \n\n O(1). Returns DList of no elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#foldBack","title":"DList.foldBack","content":"DList.foldBack \nfoldBack \n\n Fold walks the DList using constant stack space.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#fold","title":"DList.fold","content":"DList.fold \nfold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#head","title":"DList.head","content":"DList.head \nhead \n\n O(log n). Returns the first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#tryHead","title":"DList.tryHead","content":"DList.tryHead \ntryHead \n\n O(log n). Returns option first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#isEmpty","title":"DList.isEmpty","content":"DList.isEmpty \nisEmpty \n\n O(1). Returns true if the DList has no elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#length","title":"DList.length","content":"DList.length \nlength \n\n O(1). Returns the count of elememts.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#singleton","title":"DList.singleton","content":"DList.singleton \nsingleton \n\n O(1). Returns DList of one elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#add","title":"DList.add","content":"DList.add \nadd \n\n O(1). Returns a new DList with the element added to the end.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#tail","title":"DList.tail","content":"DList.tail \ntail \n\n O(log n). Returns a new DList of the elements trailing the first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#tryTail","title":"DList.tryTail","content":"DList.tryTail \ntryTail \n\n O(log n). Returns option DList of the elements trailing the first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#uncons","title":"DList.uncons","content":"DList.uncons \nuncons \n\n O(log n). Returns the first element and tail.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#tryUncons","title":"DList.tryUncons","content":"DList.tryUncons \ntryUncons \n\n O(log n). Returns option first element and tail.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#ofSeq","title":"DList.ofSeq","content":"DList.ofSeq \nofSeq \n\n Returns a DList of the seq.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#iter","title":"DList.iter","content":"DList.iter \niter \n\n Iterates over each element of the list.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#toList","title":"DList.toList","content":"DList.toList \ntoList \n\n Returns a list of the DList elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#toArray","title":"DList.toArray","content":"DList.toArray \ntoArray \n\n Returns an array of the DList elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#toSeq","title":"DList.toSeq","content":"DList.toSeq \ntoSeq \n\n Returns a seq of the DList elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#pairwise","title":"DList.pairwise","content":"DList.pairwise \npairwise \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#map","title":"DList.map","content":"DList.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#concat","title":"DList.concat","content":"DList.concat \nconcat \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#ap","title":"DList.ap","content":"DList.ap \nap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist.html#bind","title":"DList.bind","content":"DList.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dual.html","title":"Dual","content":"Dual \n\n Basic operations on Dual\n \nDual.run \nrun"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dual.html#run","title":"Dual.run","content":"Dual.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-endo.html","title":"Endo","content":"Endo \n\n Basic operations on Endo\n \nEndo.run \nrun"},{"uri":"/FSharpPlus/reference/fsharpplus-data-endo.html#run","title":"Endo.run","content":"Endo.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html","title":"Free","content":"Free \n\n Basic operations on Free Monads\n \nFree.run \nrun \nFree.map \nmap \nFree.bind \nbind \nFree.apply \napply \nFree.map2 \nmap2 \nFree.map3 \nmap3 \nFree.fold \nfold \nFree.iterM \niterM \nFree.liftF \nliftF \nFree.hoist \nhoist"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#run","title":"Free.run","content":"Free.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#map","title":"Free.map","content":"Free.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#bind","title":"Free.bind","content":"Free.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#apply","title":"Free.apply","content":"Free.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#map2","title":"Free.map2","content":"Free.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#map3","title":"Free.map3","content":"Free.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#fold","title":"Free.fold","content":"Free.fold \nfold \n\n Folds the Free structure into a Monad\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#iterM","title":"Free.iterM","content":"Free.iterM \niterM \n\n Tear down a Free monad using iteration.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#liftF","title":"Free.liftF","content":"Free.liftF \nliftF \n\n Lift any Functor into a Free structure.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free.html#hoist","title":"Free.hoist","content":"Free.hoist \nhoist \n\n Lift a natural transformation from functor F to functor G into a natural transformation from Free of F to Free of G.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-freeprimitives.html","title":"FreePrimitives","content":"FreePrimitives \n \nFreePrimitives.Roll \nRoll \nFreePrimitives.(|Pure|Roll|) \n(|Pure|Roll|)"},{"uri":"/FSharpPlus/reference/fsharpplus-data-freeprimitives.html#Roll","title":"FreePrimitives.Roll","content":"FreePrimitives.Roll \nRoll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-freeprimitives.html#(|Pure|Roll|)","title":"FreePrimitives.(|Pure|Roll|)","content":"FreePrimitives.(|Pure|Roll|) \n(|Pure|Roll|) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity.html","title":"Identity","content":"Identity \n\n Basic operations on Identity\n \nIdentity.run \nrun \nIdentity.apply \napply \nIdentity.bind \nbind"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity.html#run","title":"Identity.run","content":"Identity.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity.html#apply","title":"Identity.apply","content":"Identity.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity.html#bind","title":"Identity.bind","content":"Identity.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-internal.html","title":"Internal","content":"Internal \n \nInternal.monomorphicBind \nmonomorphicBind"},{"uri":"/FSharpPlus/reference/fsharpplus-data-internal.html#monomorphicBind","title":"Internal.monomorphicBind","content":"Internal.monomorphicBind \nmonomorphicBind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli.html","title":"Kleisli","content":"Kleisli \n\n Basic operations on Kleisli\n \nKleisli.run \nrun"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli.html#run","title":"Kleisli.run","content":"Kleisli.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-list.html","title":"List","content":"List \n\n Additional operations on List\n \nList.sequence \nsequence \nList.traverse \ntraverse \nList.foldM \nfoldM \nList.filterM \nfilterM \nList.replicateM \nreplicateM"},{"uri":"/FSharpPlus/reference/fsharpplus-data-list.html#sequence","title":"List.sequence","content":"List.sequence \nsequence \n\n Evaluates each action in the list from left to right and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-list.html#traverse","title":"List.traverse","content":"List.traverse \ntraverse \n\n Maps each element of the list to an action, evaluates these actions from left to right and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-list.html#foldM","title":"List.foldM","content":"List.foldM \nfoldM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-list.html#filterM","title":"List.filterM","content":"List.filterM \nfilterM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-list.html#replicateM","title":"List.replicateM","content":"List.replicateM \nreplicateM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html","title":"ListT","content":"ListT \n\n Basic operations on ListT\n \nListT.run \nrun \nListT.lift \nlift \nListT.bind \nbind \nListT.apply \napply \nListT.lift2 \nlift2 \nListT.lift3 \nlift3 \nListT.map \nmap"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#run","title":"ListT.run","content":"ListT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#lift","title":"ListT.lift","content":"ListT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into a ListT\u003C\u0027Monad\u003Clist\u003C\u0027T\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#bind","title":"ListT.bind","content":"ListT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#apply","title":"ListT.apply","content":"ListT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#lift2","title":"ListT.lift2","content":"ListT.lift2 \nlift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#lift3","title":"ListT.lift3","content":"ListT.lift3 \nlift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt.html#map","title":"ListT.map","content":"ListT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html","title":"MultiMap","content":"MultiMap \n \nMultiMap.ofSeq \nofSeq \nMultiMap.ofList \nofList \nMultiMap.ofArray \nofArray \nMultiMap.toSeq \ntoSeq \nMultiMap.toList \ntoList \nMultiMap.toArray \ntoArray \nMultiMap.add \nadd \nMultiMap.mapValues \nmapValues"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#ofSeq","title":"MultiMap.ofSeq","content":"MultiMap.ofSeq \nofSeq \n\n Converts a seq of tuples to a multiMap.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#ofList","title":"MultiMap.ofList","content":"MultiMap.ofList \nofList \n\n Converts a list of tuples to a multiMap.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#ofArray","title":"MultiMap.ofArray","content":"MultiMap.ofArray \nofArray \n\n Converts an array of tuples to a multiMap.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#toSeq","title":"MultiMap.toSeq","content":"MultiMap.toSeq \ntoSeq \n\n Converts a multiMap to a seq of tuples.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#toList","title":"MultiMap.toList","content":"MultiMap.toList \ntoList \n\n Converts a multiMap to a list of tuples.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#toArray","title":"MultiMap.toArray","content":"MultiMap.toArray \ntoArray \n\n Converts a multiMap to an array of tuples.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#add","title":"MultiMap.add","content":"MultiMap.add \nadd \n\n Returns a new multiMap with the new binding added to the given multiMap.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap.html#mapValues","title":"MultiMap.mapValues","content":"MultiMap.mapValues \nmapValues \n\n Maps values of the original multiMap.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html","title":"NonEmptyList","content":"NonEmptyList \n\n Basic operations on NonEmptyList\n \nNonEmptyList.create \ncreate \nNonEmptyList.singleton \nsingleton \nNonEmptyList.toList \ntoList \nNonEmptyList.toSeq \ntoSeq \nNonEmptyList.toArray \ntoArray \nNonEmptyList.ofArray \nofArray \nNonEmptyList.ofList \nofList \nNonEmptyList.ofSeq \nofSeq \nNonEmptyList.length \nlength \nNonEmptyList.map \nmap \nNonEmptyList.map2Shortest \nmap2Shortest \nNonEmptyList.map3Shortest \nmap3Shortest \nNonEmptyList.mapi \nmapi \nNonEmptyList.unzip \nunzip \nNonEmptyList.zip \nzip \nNonEmptyList.zipShortest \nzipShortest \nNonEmptyList.cons \ncons \nNonEmptyList.head \nhead \nNonEmptyList.tail \ntail \nNonEmptyList.tails \ntails \nNonEmptyList.traverse \ntraverse \nNonEmptyList.sequence \nsequence \nNonEmptyList.gather \ngather \nNonEmptyList.transpose \ntranspose \nNonEmptyList.average \naverage \nNonEmptyList.averageBy \naverageBy \nNonEmptyList.distinct \ndistinct \nNonEmptyList.reduce \nreduce \nNonEmptyList.reduceBack \nreduceBack \nNonEmptyList.max \nmax \nNonEmptyList.maxBy \nmaxBy \nNonEmptyList.min \nmin \nNonEmptyList.minBy \nminBy \nNonEmptyList.range \nrange \nNonEmptyList.choice \nchoice \nNonEmptyList.tryOfList \ntryOfList \nNonEmptyList.ofNonEmptySeq \nofNonEmptySeq \nNonEmptyList.toNonEmptySeq \ntoNonEmptySeq"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#create","title":"NonEmptyList.create","content":"NonEmptyList.create \ncreate \nBuilds a non empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#singleton","title":"NonEmptyList.singleton","content":"NonEmptyList.singleton \nsingleton \nBuilds a non empty list with a single element."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#toList","title":"NonEmptyList.toList","content":"NonEmptyList.toList \ntoList \nBuilds a list from the given non empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#toSeq","title":"NonEmptyList.toSeq","content":"NonEmptyList.toSeq \ntoSeq \nBuilds a sequence from the given non empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#toArray","title":"NonEmptyList.toArray","content":"NonEmptyList.toArray \ntoArray \nBuilds an array from the given non empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#ofArray","title":"NonEmptyList.ofArray","content":"NonEmptyList.ofArray \nofArray \nBuilds a non empty list from the given array. \nThrows exception for empty array"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#ofList","title":"NonEmptyList.ofList","content":"NonEmptyList.ofList \nofList \nBuilds a non empty list from the given list. \nThrows exception for empty list"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#ofSeq","title":"NonEmptyList.ofSeq","content":"NonEmptyList.ofSeq \nofSeq \nBuilds a non empty list from the given sequence. \nThrows exception for empty list"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#length","title":"NonEmptyList.length","content":"NonEmptyList.length \nlength \n\n Returns the length of a non empty list. You can also use property nel.Length.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#map","title":"NonEmptyList.map","content":"NonEmptyList.map \nmap \nBuild a new non empty list whose elements are the results of applying the given function\n to each of the elements of the non empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#map2Shortest","title":"NonEmptyList.map2Shortest","content":"NonEmptyList.map2Shortest \nmap2Shortest \nSafely build a new non empty list whose elements are the results of applying the given function\n to each of the elements of the two non empty list pairwise."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#map3Shortest","title":"NonEmptyList.map3Shortest","content":"NonEmptyList.map3Shortest \nmap3Shortest \nSafely build a new non empty list whose elements are the results of applying the given function\n to each of the elements of the three non empty list pointwise."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#mapi","title":"NonEmptyList.mapi","content":"NonEmptyList.mapi \nmapi \nBuild a new non empty list whose elements are the results of applying the given function with index\n to each of the elements of the non empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#unzip","title":"NonEmptyList.unzip","content":"NonEmptyList.unzip \nunzip \nSplits a list of pairs into two lists."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#zip","title":"NonEmptyList.zip","content":"NonEmptyList.zip \nzip \nCombines the two lists into a list of pairs. The two lists must have equal lengths."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#zipShortest","title":"NonEmptyList.zipShortest","content":"NonEmptyList.zipShortest \nzipShortest \n\n Zip safely two lists. If one list is shorter, excess elements are discarded from the right end of the longer list. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#cons","title":"NonEmptyList.cons","content":"NonEmptyList.cons \ncons \n\n Returns a new NonEmptyList with the element added to the beginning.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#head","title":"NonEmptyList.head","content":"NonEmptyList.head \nhead \n\n Returns the first element of a new non empty list. You can also use property nel.Head.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#tail","title":"NonEmptyList.tail","content":"NonEmptyList.tail \ntail \nReturns a new NonEmptyList of the elements trailing the first element. \nThrows exception for empty tail"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#tails","title":"NonEmptyList.tails","content":"NonEmptyList.tails \ntails \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#traverse","title":"NonEmptyList.traverse","content":"NonEmptyList.traverse \ntraverse \n\n Maps each element of the list to an action, evaluates these actions from left to right and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#sequence","title":"NonEmptyList.sequence","content":"NonEmptyList.sequence \nsequence \n\n Evaluates each action in the list from left to right and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#gather","title":"NonEmptyList.gather","content":"NonEmptyList.gather \ngather \n\n Maps each element of the list to an action, evaluates these actions from left to right, pointwise, and/or in parallel then collect results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#transpose","title":"NonEmptyList.transpose","content":"NonEmptyList.transpose \ntranspose \n\n Evaluates each action in the list from left to right, pointwise, and/or in parallel then collect results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#average","title":"NonEmptyList.average","content":"NonEmptyList.average \naverage \nReturns the average of the elements in the list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#averageBy","title":"NonEmptyList.averageBy","content":"NonEmptyList.averageBy \naverageBy \nReturns the average of the elements generated by applying the function to each element of the list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#distinct","title":"NonEmptyList.distinct","content":"NonEmptyList.distinct \ndistinct \nReturns a list that contains no duplicate entries according to the generic hash and equality comparisons\n on the keys returned by the given key-generating function.\n If an element occurs multiple times in the list then the later occurrences are discarded."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#reduce","title":"NonEmptyList.reduce","content":"NonEmptyList.reduce \nreduce \nApplies a function to each element of the list, threading an accumulator argument\n through the computation. Apply the function to the first two elements of the list.\n Then feed this result into the function along with the third element and so on. \n Return the final result. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes \n \u003Ccode\u003Ef (... (f i0 i1) i2 ...) iN\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#reduceBack","title":"NonEmptyList.reduceBack","content":"NonEmptyList.reduceBack \nreduceBack \nApplies a function to each element of the list, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes \n \u003Ccode\u003Ef i0 (...(f iN-1 iN))\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#max","title":"NonEmptyList.max","content":"NonEmptyList.max \nmax \nReturns the greatest of all elements of the list, compared via Operators.max."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#maxBy","title":"NonEmptyList.maxBy","content":"NonEmptyList.maxBy \nmaxBy \nReturns the greatest of all elements of the list, compared via Operators.max on the function result."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#min","title":"NonEmptyList.min","content":"NonEmptyList.min \nmin \nReturns the lowest of all elements of the list, compared via Operators.min."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#minBy","title":"NonEmptyList.minBy","content":"NonEmptyList.minBy \nminBy \nReturns the lowest of all elements of the list, compared via Operators.min on the function result"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#range","title":"NonEmptyList.range","content":"NonEmptyList.range \nrange \n\n Equivalent to [start..stop] on regular lists.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#choice","title":"NonEmptyList.choice","content":"NonEmptyList.choice \nchoice \n\n Reduces using alternative operator \u0060\u003C|\u003E\u0060.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#tryOfList","title":"NonEmptyList.tryOfList","content":"NonEmptyList.tryOfList \ntryOfList \n\n Transforms a list to a NonEmptyList, returning an option to signal when the original list was empty.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#ofNonEmptySeq","title":"NonEmptyList.ofNonEmptySeq","content":"NonEmptyList.ofNonEmptySeq \nofNonEmptySeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist.html#toNonEmptySeq","title":"NonEmptyList.toNonEmptySeq","content":"NonEmptyList.toNonEmptySeq \ntoNonEmptySeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder.html","title":"NonEmptyListBuilder","content":"NonEmptyListBuilder \n \nNonEmptyListBuilder.NelBuilder \nNelBuilder \nNonEmptyListBuilder.nel \nnel \nNonEmptyListBuilder.nelist \nnelist"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder.html#nel","title":"NonEmptyListBuilder.nel","content":"NonEmptyListBuilder.nel \nnel \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder.html#nelist","title":"NonEmptyListBuilder.nelist","content":"NonEmptyListBuilder.nelist \nnelist \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html","title":"NelBuilder","content":"NelBuilder \n \nNelBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNelBuilder.Combine \nCombine \nNelBuilder.Delay \nDelay \nNelBuilder.Run \nRun \nNelBuilder.Yield \nYield \nNelBuilder.Zero \nZero"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"NelBuilder.\u0060\u0060.ctor\u0060\u0060","content":"NelBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html#Combine","title":"NelBuilder.Combine","content":"NelBuilder.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html#Delay","title":"NelBuilder.Delay","content":"NelBuilder.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html#Run","title":"NelBuilder.Run","content":"NelBuilder.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html#Yield","title":"NelBuilder.Yield","content":"NelBuilder.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilder-nelbuilder.html#Zero","title":"NelBuilder.Zero","content":"NelBuilder.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilderextensions.html","title":"NonEmptyListBuilderExtensions","content":"NonEmptyListBuilderExtensions \n \nNonEmptyListBuilderExtensions.Combine \nCombine \nNonEmptyListBuilderExtensions.Run \nRun"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilderextensions.html#Combine","title":"NonEmptyListBuilderExtensions.Combine","content":"NonEmptyListBuilderExtensions.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylistbuilderextensions.html#Run","title":"NonEmptyListBuilderExtensions.Run","content":"NonEmptyListBuilderExtensions.Run \nRun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html","title":"NonEmptyMap","content":"NonEmptyMap \n\n Basic operations on NonEmptyMap\n \nNonEmptyMap.create \ncreate \nNonEmptyMap.singleton \nsingleton \nNonEmptyMap.add \nadd \nNonEmptyMap.toList \ntoList \nNonEmptyMap.toNonEmptyList \ntoNonEmptyList \nNonEmptyMap.toSeq \ntoSeq \nNonEmptyMap.toNonEmptySeq \ntoNonEmptySeq \nNonEmptyMap.toArray \ntoArray \nNonEmptyMap.toMap \ntoMap \nNonEmptyMap.ofArray \nofArray \nNonEmptyMap.ofList \nofList \nNonEmptyMap.ofNonEmptyList \nofNonEmptyList \nNonEmptyMap.ofSeq \nofSeq \nNonEmptyMap.ofNonEmptySeq \nofNonEmptySeq \nNonEmptyMap.ofMap \nofMap \nNonEmptyMap.tryOfMap \ntryOfMap \nNonEmptyMap.find \nfind \nNonEmptyMap.tryPick \ntryPick \nNonEmptyMap.pick \npick \nNonEmptyMap.foldBack \nfoldBack \nNonEmptyMap.fold \nfold \nNonEmptyMap.iter \niter \nNonEmptyMap.exists \nexists \nNonEmptyMap.forall \nforall \nNonEmptyMap.map \nmap \nNonEmptyMap.containsKey \ncontainsKey \nNonEmptyMap.tryFind \ntryFind \nNonEmptyMap.findKey \nfindKey \nNonEmptyMap.tryFindKey \ntryFindKey \nNonEmptyMap.count \ncount \nNonEmptyMap.reduce \nreduce \nNonEmptyMap.reduceBack \nreduceBack \nNonEmptyMap.keys \nkeys \nNonEmptyMap.values \nvalues \nNonEmptyMap.mapValues \nmapValues \nNonEmptyMap.iterValues \niterValues \nNonEmptyMap.unzip \nunzip \nNonEmptyMap.unionWith \nunionWith \nNonEmptyMap.union \nunion \nNonEmptyMap.traverse \ntraverse \nNonEmptyMap.traversei \ntraversei"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#create","title":"NonEmptyMap.create","content":"NonEmptyMap.create \ncreate \nBuilds a non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#singleton","title":"NonEmptyMap.singleton","content":"NonEmptyMap.singleton \nsingleton \nBuilds a non empty map with a single element."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#add","title":"NonEmptyMap.add","content":"NonEmptyMap.add \nadd \nReturns a new map with the binding added to the given map.\n If a binding with the given key already exists in the input map, the existing binding is replaced by the new binding in the result map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#toList","title":"NonEmptyMap.toList","content":"NonEmptyMap.toList \ntoList \nBuilds a list from the given non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#toNonEmptyList","title":"NonEmptyMap.toNonEmptyList","content":"NonEmptyMap.toNonEmptyList \ntoNonEmptyList \nBuilds a non-empty list from the given non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#toSeq","title":"NonEmptyMap.toSeq","content":"NonEmptyMap.toSeq \ntoSeq \nBuilds a sequence from the given non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#toNonEmptySeq","title":"NonEmptyMap.toNonEmptySeq","content":"NonEmptyMap.toNonEmptySeq \ntoNonEmptySeq \nBuilds a non-empty sequence from the given non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#toArray","title":"NonEmptyMap.toArray","content":"NonEmptyMap.toArray \ntoArray \nBuilds an array from the given non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#toMap","title":"NonEmptyMap.toMap","content":"NonEmptyMap.toMap \ntoMap \nBuilds a map from the given non empty map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#ofArray","title":"NonEmptyMap.ofArray","content":"NonEmptyMap.ofArray \nofArray \nBuilds a non empty map from the given array. \nThrows exception for empty array"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#ofList","title":"NonEmptyMap.ofList","content":"NonEmptyMap.ofList \nofList \nBuilds a non empty map from the given list. \nThrows exception for empty list"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#ofNonEmptyList","title":"NonEmptyMap.ofNonEmptyList","content":"NonEmptyMap.ofNonEmptyList \nofNonEmptyList \nBuilds a non empty map from the given non-empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#ofSeq","title":"NonEmptyMap.ofSeq","content":"NonEmptyMap.ofSeq \nofSeq \nBuilds a non empty map from the given sequence. \nThrows exception for empty sequence"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#ofNonEmptySeq","title":"NonEmptyMap.ofNonEmptySeq","content":"NonEmptyMap.ofNonEmptySeq \nofNonEmptySeq \nBuilds a non empty map from the given non-empty sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#ofMap","title":"NonEmptyMap.ofMap","content":"NonEmptyMap.ofMap \nofMap \nBuilds a non empty map from the given map. \nThrows exception for empty map"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#tryOfMap","title":"NonEmptyMap.tryOfMap","content":"NonEmptyMap.tryOfMap \ntryOfMap \n\n Transforms a map to a NonEmptyMap, returning an option to signal when the original map was empty.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#find","title":"NonEmptyMap.find","content":"NonEmptyMap.find \nfind \nLookup an element in the map, raising \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no binding\n exists in the map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#tryPick","title":"NonEmptyMap.tryPick","content":"NonEmptyMap.tryPick \ntryPick \nSearches the map looking for the first element where the given function returns a \u003Ccode\u003ESome\u003C/code\u003E value."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#pick","title":"NonEmptyMap.pick","content":"NonEmptyMap.pick \npick \nSearches the map looking for the first element where the given function returns a \u003Ccode\u003ESome\u003C/code\u003E value"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#foldBack","title":"NonEmptyMap.foldBack","content":"NonEmptyMap.foldBack \nfoldBack \nFolds over the bindings in the map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#fold","title":"NonEmptyMap.fold","content":"NonEmptyMap.fold \nfold \nFolds over the bindings in the map "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#iter","title":"NonEmptyMap.iter","content":"NonEmptyMap.iter \niter \nApplies the given function to each binding in the dictionary"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#exists","title":"NonEmptyMap.exists","content":"NonEmptyMap.exists \nexists \nReturns true if the given predicate returns true for one of the\n bindings in the map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#forall","title":"NonEmptyMap.forall","content":"NonEmptyMap.forall \nforall \nReturns true if the given predicate returns true for all of the\n bindings in the map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#map","title":"NonEmptyMap.map","content":"NonEmptyMap.map \nmap \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The key passed to the\n function indicates the key of element being transformed."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#containsKey","title":"NonEmptyMap.containsKey","content":"NonEmptyMap.containsKey \ncontainsKey \nTests if an element is in the domain of the map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#tryFind","title":"NonEmptyMap.tryFind","content":"NonEmptyMap.tryFind \ntryFind \nLookup an element in the map, returning a \u003Ccode\u003ESome\u003C/code\u003E value if the element is in the domain\n of the map and \u003Ccode\u003ENone\u003C/code\u003E if not."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#findKey","title":"NonEmptyMap.findKey","content":"NonEmptyMap.findKey \nfindKey \nEvaluates the function on each mapping in the collection. Returns the key for the first mapping\n where the function returns \u0027true\u0027. Raise \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#tryFindKey","title":"NonEmptyMap.tryFindKey","content":"NonEmptyMap.tryFindKey \ntryFindKey \nReturns the key of the first mapping in the collection that satisfies the given predicate.\n Returns \u0027None\u0027 if no such element exists."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#count","title":"NonEmptyMap.count","content":"NonEmptyMap.count \ncount \nThe number of bindings in the map."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#reduce","title":"NonEmptyMap.reduce","content":"NonEmptyMap.reduce \nreduce \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#reduceBack","title":"NonEmptyMap.reduceBack","content":"NonEmptyMap.reduceBack \nreduceBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#keys","title":"NonEmptyMap.keys","content":"NonEmptyMap.keys \nkeys \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#values","title":"NonEmptyMap.values","content":"NonEmptyMap.values \nvalues \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#mapValues","title":"NonEmptyMap.mapValues","content":"NonEmptyMap.mapValues \nmapValues \nMap values of the original Map. \nKeys remain unchanged."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#iterValues","title":"NonEmptyMap.iterValues","content":"NonEmptyMap.iterValues \niterValues \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#unzip","title":"NonEmptyMap.unzip","content":"NonEmptyMap.unzip \nunzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#unionWith","title":"NonEmptyMap.unionWith","content":"NonEmptyMap.unionWith \nunionWith \n\n Returns the union of two maps, using the combiner function for duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#union","title":"NonEmptyMap.union","content":"NonEmptyMap.union \nunion \n\n Returns the union of two maps, preferring values from the first in case of duplicate keys.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#traverse","title":"NonEmptyMap.traverse","content":"NonEmptyMap.traverse \ntraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap.html#traversei","title":"NonEmptyMap.traversei","content":"NonEmptyMap.traversei \ntraversei \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html","title":"NonEmptySeq","content":"NonEmptySeq \n \nNonEmptySeq.unsafeOfSeq \nunsafeOfSeq \nNonEmptySeq.create \ncreate \nNonEmptySeq.(|..) \n(|..) \nNonEmptySeq.(..|) \n(..|) \nNonEmptySeq.allPairs \nallPairs \nNonEmptySeq.append \nappend \nNonEmptySeq.appendSeq \nappendSeq \nNonEmptySeq.appendSeqBack \nappendSeqBack \nNonEmptySeq.cache \ncache \nNonEmptySeq.collect \ncollect \nNonEmptySeq.concat \nconcat \nNonEmptySeq.delay \ndelay \nNonEmptySeq.head \nhead \nNonEmptySeq.indexed \nindexed \nNonEmptySeq.initInfinite \ninitInfinite \nNonEmptySeq.map \nmap \nNonEmptySeq.map2 \nmap2 \nNonEmptySeq.mapFold \nmapFold \nNonEmptySeq.mapFoldBack \nmapFoldBack \nNonEmptySeq.map3 \nmap3 \nNonEmptySeq.mapi \nmapi \nNonEmptySeq.mapi2 \nmapi2 \nNonEmptySeq.ofSeq \nofSeq \nNonEmptySeq.tryOfSeq \ntryOfSeq \nNonEmptySeq.ofArray \nofArray \nNonEmptySeq.tryOfArray \ntryOfArray \nNonEmptySeq.ofList \nofList \nNonEmptySeq.tryOfList \ntryOfList \nNonEmptySeq.pairwise \npairwise \nNonEmptySeq.permute \npermute \nNonEmptySeq.readonly \nreadonly \nNonEmptySeq.rev \nrev \nNonEmptySeq.scan \nscan \nNonEmptySeq.scanBack \nscanBack \nNonEmptySeq.singleton \nsingleton \nNonEmptySeq.sort \nsort \nNonEmptySeq.sortWith \nsortWith \nNonEmptySeq.sortBy \nsortBy \nNonEmptySeq.sortDescending \nsortDescending \nNonEmptySeq.sortByDescending \nsortByDescending \nNonEmptySeq.tail \ntail \nNonEmptySeq.unfold \nunfold \nNonEmptySeq.zip \nzip \nNonEmptySeq.zip3 \nzip3 \nNonEmptySeq.bind \nbind \nNonEmptySeq.apply \napply \nNonEmptySeq.lift2 \nlift2 \nNonEmptySeq.lift3 \nlift3 \nNonEmptySeq.replace \nreplace \nNonEmptySeq.distinct \ndistinct \nNonEmptySeq.reduce \nreduce"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#unsafeOfSeq","title":"NonEmptySeq.unsafeOfSeq","content":"NonEmptySeq.unsafeOfSeq \nunsafeOfSeq \nBuilds a non empty sequence from the given sequence. \n\n   **This function does not check whether the sequence is actually non empty or not.**\n \n   Use this function only if you are sure that the sequence is not empty and\n   you don\u0027t want to evaluate the first element of the sequence which would cause a\n   side effect.\n  \n   Otherwise, always use \u0060ofSeq\u0060. \n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#create","title":"NonEmptySeq.create","content":"NonEmptySeq.create \ncreate \nBuilds a non empty sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#(|..)","title":"NonEmptySeq.(|..)","content":"NonEmptySeq.(|..) \n(|..) \n\n Creates a NonEmptySeq range, containing at least the first element of the range\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#(..|)","title":"NonEmptySeq.(..|)","content":"NonEmptySeq.(..|) \n(..|) \n\n Creates a NonEmptySeq range, containing at least the last element of the range\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#allPairs","title":"NonEmptySeq.allPairs","content":"NonEmptySeq.allPairs \nallPairs \nReturns a new sequence that contains all pairings of elements from the first and second sequences."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#append","title":"NonEmptySeq.append","content":"NonEmptySeq.append \nappend \nWraps the two given enumerations as a single concatenated\n enumeration. \nThe returned sequence may be passed between threads safely. However, \n individual IEnumerator values generated from the returned sequence should not be accessed\n concurrently."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#appendSeq","title":"NonEmptySeq.appendSeq","content":"NonEmptySeq.appendSeq \nappendSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#appendSeqBack","title":"NonEmptySeq.appendSeqBack","content":"NonEmptySeq.appendSeqBack \nappendSeqBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#cache","title":"NonEmptySeq.cache","content":"NonEmptySeq.cache \ncache \nReturns a sequence that corresponds to a cached version of the input sequence.\n This result sequence will have the same elements as the input sequence. The result \n can be enumerated multiple times. The input sequence will be enumerated at most \n once and only as far as is necessary.    Caching a sequence is typically useful when repeatedly\n evaluating items in the original sequence is computationally expensive or if\n iterating the sequence causes side-effects that the user does not want to be\n repeated multiple times.\n\n Enumeration of the result sequence is thread safe in the sense that multiple independent IEnumerator\n values may be used simultaneously from different threads (accesses to \n the internal lookaside table are thread safe). Each individual IEnumerator\n is not typically thread safe and should not be accessed concurrently. \nOnce enumeration of the input sequence has started,\n it\u0027s enumerator will be kept live by this object until the enumeration has completed.\n At that point, the enumerator will be disposed. \n\n The enumerator may be disposed and underlying cache storage released by \n converting the returned sequence object to type IDisposable, and calling the Dispose method\n on this object. The sequence object may then be re-enumerated and a fresh enumerator will\n be used."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#collect","title":"NonEmptySeq.collect","content":"NonEmptySeq.collect \ncollect \nApplies the given function to each element of the sequence and concatenates all the\n results. \nRemember sequence is lazy, effects are delayed until it is enumerated."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#concat","title":"NonEmptySeq.concat","content":"NonEmptySeq.concat \nconcat \nCombines the given enumeration-of-enumerations as a single concatenated\n enumeration. \nThe returned sequence may be passed between threads safely. However, \n individual IEnumerator values generated from the returned sequence should not be accessed concurrently."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#delay","title":"NonEmptySeq.delay","content":"NonEmptySeq.delay \ndelay \nReturns a sequence that is built from the given delayed specification of a\n sequence. \nThe input function is evaluated each time an IEnumerator for the sequence \n is requested."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#head","title":"NonEmptySeq.head","content":"NonEmptySeq.head \nhead \nReturns the first element of the sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#indexed","title":"NonEmptySeq.indexed","content":"NonEmptySeq.indexed \nindexed \nBuilds a new collection whose elements are the corresponding elements of the input collection\n paired with the integer index (from 0) of each element."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#initInfinite","title":"NonEmptySeq.initInfinite","content":"NonEmptySeq.initInfinite \ninitInfinite \nGenerates a new sequence which, when iterated, will return successive\n elements by calling the given function.    The results of calling the function\n will not be saved, that is the function will be reapplied as necessary to\n regenerate the elements.    The function is passed the index of the item being\n generated. \nThe returned sequence may be passed between threads safely. However, \n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.\n Iteration can continue up to \u003Ccode\u003EInt32.MaxValue\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#map","title":"NonEmptySeq.map","content":"NonEmptySeq.map \nmap \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection.    The given function will be applied\n as elements are demanded using the \u003Ccode\u003EMoveNext\u003C/code\u003E method on enumerators retrieved from the\n object. \nThe returned sequence may be passed between threads safely. However, \n individual IEnumerator values generated from the returned sequence should not be accessed concurrently."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#map2","title":"NonEmptySeq.map2","content":"NonEmptySeq.map2 \nmap2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding pairs of elements from the two sequences. If one input sequence is shorter than \n the other then the remaining elements of the longer sequence are ignored."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#mapFold","title":"NonEmptySeq.mapFold","content":"NonEmptySeq.mapFold \nmapFold \nCombines map and fold. Builds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The function is also used to accumulate a final value. \nThis function digests the whole initial sequence as soon as it is called. As a result this function should\n not be used with large or infinite sequences.This function consumes the whole input sequence before yielding the first element of the result sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#mapFoldBack","title":"NonEmptySeq.mapFoldBack","content":"NonEmptySeq.mapFoldBack \nmapFoldBack \nCombines map and foldBack. Builds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The function is also used to accumulate a final value. \nThis function digests the whole initial sequence as soon as it is called. As a result this function should\n not be used with large or infinite sequences.This function consumes the whole input sequence before yielding the first element of the result sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#map3","title":"NonEmptySeq.map3","content":"NonEmptySeq.map3 \nmap3 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding triples of elements from the three sequences. If one input sequence if shorter than\n the others then the remaining elements of the longer sequences are ignored."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#mapi","title":"NonEmptySeq.mapi","content":"NonEmptySeq.mapi \nmapi \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The integer index passed to the\n function indicates the index (from 0) of element being transformed."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#mapi2","title":"NonEmptySeq.mapi2","content":"NonEmptySeq.mapi2 \nmapi2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding pairs of elements from the two sequences. If one input sequence is shorter than \n the other then the remaining elements of the longer sequence are ignored. The integer index passed to the\n function indicates the index (from 0) of element being transformed."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#ofSeq","title":"NonEmptySeq.ofSeq","content":"NonEmptySeq.ofSeq \nofSeq \nBuilds a non empty sequence from the given sequence. \n\n   Throws exception for empty sequence.\n \n   Evaluates the first element of the sequence and may trigger side effects.\n   If you are sure that the sequence is not empty and want to avoid that, you can use \u0060unsafeOfSeq\u0060 instead.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#tryOfSeq","title":"NonEmptySeq.tryOfSeq","content":"NonEmptySeq.tryOfSeq \ntryOfSeq \n\n Transforms a sequence to a NonEmptySeq, returning an option to signal when the original sequence was empty.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#ofArray","title":"NonEmptySeq.ofArray","content":"NonEmptySeq.ofArray \nofArray \nBuilds a non empty sequence from the given array. \nThrows exception for empty array"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#tryOfArray","title":"NonEmptySeq.tryOfArray","content":"NonEmptySeq.tryOfArray \ntryOfArray \n\n Transforms a array to a NonEmptySeq, returning an option to signal when the original array was empty.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#ofList","title":"NonEmptySeq.ofList","content":"NonEmptySeq.ofList \nofList \nBuilds a non empty sequence from the given list. \nThrows exception for empty list"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#tryOfList","title":"NonEmptySeq.tryOfList","content":"NonEmptySeq.tryOfList \ntryOfList \n\n Transforms a list to a NonEmptySeq, returning an option to signal when the original list was empty.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#pairwise","title":"NonEmptySeq.pairwise","content":"NonEmptySeq.pairwise \npairwise \nReturns a sequence of each element in the input sequence and its predecessor, with the\n exception of the first element which is only returned as the predecessor of the second element."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#permute","title":"NonEmptySeq.permute","content":"NonEmptySeq.permute \npermute \nReturns a sequence with all elements permuted according to the\n specified permutation. \nNote that this function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences.This function consumes the whole input sequence before yielding the first element of the result sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#readonly","title":"NonEmptySeq.readonly","content":"NonEmptySeq.readonly \nreadonly \nBuilds a new sequence object that delegates to the given sequence object. This ensures \n the original sequence cannot be rediscovered and mutated by a type cast. For example, \n if given an array the returned sequence will return the elements of the array, but\n you cannot cast the returned sequence object to an array."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#rev","title":"NonEmptySeq.rev","content":"NonEmptySeq.rev \nrev \nReturns a new sequence with the elements in reverse order. \nThis function consumes the whole input sequence before yielding the first element of the reversed sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#scan","title":"NonEmptySeq.scan","content":"NonEmptySeq.scan \nscan \nLike fold, but computes on-demand and returns the sequence of intermediary and final results."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#scanBack","title":"NonEmptySeq.scanBack","content":"NonEmptySeq.scanBack \nscanBack \nLike \u003Ccode\u003EfoldBack\u003C/code\u003E, but returns the sequence of intermediary and final results. \nThis function returns a sequence that digests the whole initial sequence as soon as that\n sequence is iterated. As a result this function should not be used with large or infinite sequences.\n This function consumes the whole input sequence before yielding the first element of the result sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#singleton","title":"NonEmptySeq.singleton","content":"NonEmptySeq.singleton \nsingleton \nReturns a sequence that yields one item only."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#sort","title":"NonEmptySeq.sort","content":"NonEmptySeq.sort \nsort \nYields a sequence ordered by keys. \nThis function returns a sequence that digests the whole initial sequence as soon as \n that sequence is iterated. As a result this function should not be used with \n large or infinite sequences. The function makes no assumption on the ordering of the original \n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved.This function consumes the whole input sequence before yielding the first element of the result sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#sortWith","title":"NonEmptySeq.sortWith","content":"NonEmptySeq.sortWith \nsortWith \nYields a sequence ordered using the given comparison function. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences. The function makes no assumption on the ordering of the original\n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved.This function consumes the whole input sequence before yielding the first element of the result sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#sortBy","title":"NonEmptySeq.sortBy","content":"NonEmptySeq.sortBy \nsortBy \nApplies a key-generating function to each element of a sequence and yield a sequence ordered\n by keys.    The keys are compared using generic comparison as implemented by \u003Ccode\u003EOperators.compare\u003C/code\u003E. \nThis function returns a sequence that digests the whole initial sequence as soon as \n that sequence is iterated. As a result this function should not be used with \n large or infinite sequences. The function makes no assumption on the ordering of the original \n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#sortDescending","title":"NonEmptySeq.sortDescending","content":"NonEmptySeq.sortDescending \nsortDescending \nYields a sequence ordered descending by keys. \nThis function returns a sequence that digests the whole initial sequence as soon as \n that sequence is iterated. As a result this function should not be used with \n large or infinite sequences. The function makes no assumption on the ordering of the original \n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#sortByDescending","title":"NonEmptySeq.sortByDescending","content":"NonEmptySeq.sortByDescending \nsortByDescending \nApplies a key-generating function to each element of a sequence and yield a sequence ordered\n descending by keys.    The keys are compared using generic comparison as implemented by \u003Ccode\u003EOperators.compare\u003C/code\u003E. \nThis function returns a sequence that digests the whole initial sequence as soon as \n that sequence is iterated. As a result this function should not be used with \n large or infinite sequences. The function makes no assumption on the ordering of the original \n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#tail","title":"NonEmptySeq.tail","content":"NonEmptySeq.tail \ntail \nReturns a sequence that skips 1 element of the underlying sequence and then yields the\n remaining elements of the sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#unfold","title":"NonEmptySeq.unfold","content":"NonEmptySeq.unfold \nunfold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#zip","title":"NonEmptySeq.zip","content":"NonEmptySeq.zip \nzip \nCombines the two sequences into a sequence of pairs. The two sequences need not have equal lengths:\n when one sequence is exhausted any remaining elements in the other\n sequence are ignored."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#zip3","title":"NonEmptySeq.zip3","content":"NonEmptySeq.zip3 \nzip3 \nCombines the three sequences into a sequence of triples. The sequences need not have equal lengths:\n when one sequence is exhausted any remaining elements in the other\n sequences are ignored."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#bind","title":"NonEmptySeq.bind","content":"NonEmptySeq.bind \nbind \nApplies the given function to each element of the NonEmptySequence and concatenates all the\n results. \nRemember NonEmptySequence is lazy, effects are delayed until it is enumerated.This is the same as Seq.collect but the type of the mapping function is not flexible."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#apply","title":"NonEmptySeq.apply","content":"NonEmptySeq.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#lift2","title":"NonEmptySeq.lift2","content":"NonEmptySeq.lift2 \nlift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#lift3","title":"NonEmptySeq.lift3","content":"NonEmptySeq.lift3 \nlift3 \nCombines values from three NonEmptySeq and calls a mapping function on this combination."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#replace","title":"NonEmptySeq.replace","content":"NonEmptySeq.replace \nreplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#distinct","title":"NonEmptySeq.distinct","content":"NonEmptySeq.distinct \ndistinct \nReturns a sequence that contains no duplicate entries according to the generic hash and equality comparisons\n on the keys returned by the given key-generating function.\n If an element occurs multiple times in the sequence then the later occurrences are discarded."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq.html#reduce","title":"NonEmptySeq.reduce","content":"NonEmptySeq.reduce \nreduce \nApplies a function to each element of the sequence, threading an accumulator argument\n through the computation. Apply the function to the first two elements of the sequence.\n Then feed this result into the function along with the third element and so on. \n Return the final result. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes \n \u003Ccode\u003Ef (... (f i0 i1) i2 ...) iN\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder.html","title":"NonEmptySeqBuilder","content":"NonEmptySeqBuilder \n \nNonEmptySeqBuilder.NESeqBuilder \nNESeqBuilder \nNonEmptySeqBuilder.neseq \nneseq"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder.html#neseq","title":"NonEmptySeqBuilder.neseq","content":"NonEmptySeqBuilder.neseq \nneseq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder-neseqbuilder.html","title":"NESeqBuilder","content":"NESeqBuilder \n \nNESeqBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nNESeqBuilder.Combine \nCombine \nNESeqBuilder.Delay \nDelay \nNESeqBuilder.Yield \nYield \nNESeqBuilder.Zero \nZero"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder-neseqbuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"NESeqBuilder.\u0060\u0060.ctor\u0060\u0060","content":"NESeqBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder-neseqbuilder.html#Combine","title":"NESeqBuilder.Combine","content":"NESeqBuilder.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder-neseqbuilder.html#Delay","title":"NESeqBuilder.Delay","content":"NESeqBuilder.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder-neseqbuilder.html#Yield","title":"NESeqBuilder.Yield","content":"NESeqBuilder.Yield \nYield \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseqbuilder-neseqbuilder.html#Zero","title":"NESeqBuilder.Zero","content":"NESeqBuilder.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html","title":"NonEmptySet","content":"NonEmptySet \n\n Basic operations on NonEmptySet\n \nNonEmptySet.create \ncreate \nNonEmptySet.singleton \nsingleton \nNonEmptySet.toList \ntoList \nNonEmptySet.toSeq \ntoSeq \nNonEmptySet.toArray \ntoArray \nNonEmptySet.toSet \ntoSet \nNonEmptySet.toNonEmptyList \ntoNonEmptyList \nNonEmptySet.toNonEmptySeq \ntoNonEmptySeq \nNonEmptySet.ofArray \nofArray \nNonEmptySet.ofList \nofList \nNonEmptySet.ofNonEmptyList \nofNonEmptyList \nNonEmptySet.ofSeq \nofSeq \nNonEmptySet.ofNonEmptySeq \nofNonEmptySeq \nNonEmptySet.ofSet \nofSet \nNonEmptySet.tryOfSet \ntryOfSet \nNonEmptySet.count \ncount \nNonEmptySet.add \nadd \nNonEmptySet.contains \ncontains \nNonEmptySet.isSubset \nisSubset \nNonEmptySet.isProperSubset \nisProperSubset \nNonEmptySet.isSuperset \nisSuperset \nNonEmptySet.isProperSuperset \nisProperSuperset \nNonEmptySet.exists \nexists \nNonEmptySet.map \nmap \nNonEmptySet.forall \nforall \nNonEmptySet.union \nunion \nNonEmptySet.unionMany \nunionMany \nNonEmptySet.iter \niter \nNonEmptySet.minElement \nminElement \nNonEmptySet.maxElement \nmaxElement \nNonEmptySet.fold \nfold \nNonEmptySet.foldBack \nfoldBack \nNonEmptySet.reduce \nreduce"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#create","title":"NonEmptySet.create","content":"NonEmptySet.create \ncreate \nBuilds a non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#singleton","title":"NonEmptySet.singleton","content":"NonEmptySet.singleton \nsingleton \nBuilds a non empty set with a single element."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#toList","title":"NonEmptySet.toList","content":"NonEmptySet.toList \ntoList \nBuilds a list from the given non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#toSeq","title":"NonEmptySet.toSeq","content":"NonEmptySet.toSeq \ntoSeq \nBuilds a sequence from the given non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#toArray","title":"NonEmptySet.toArray","content":"NonEmptySet.toArray \ntoArray \nBuilds an array from the given non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#toSet","title":"NonEmptySet.toSet","content":"NonEmptySet.toSet \ntoSet \nBuilds a set from the given non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#toNonEmptyList","title":"NonEmptySet.toNonEmptyList","content":"NonEmptySet.toNonEmptyList \ntoNonEmptyList \nBuilds a non-empty list from the given non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#toNonEmptySeq","title":"NonEmptySet.toNonEmptySeq","content":"NonEmptySet.toNonEmptySeq \ntoNonEmptySeq \nBuilds a non-empty sequence from the given non empty set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#ofArray","title":"NonEmptySet.ofArray","content":"NonEmptySet.ofArray \nofArray \nBuilds a non empty set from the given array. \nThrows exception for empty array"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#ofList","title":"NonEmptySet.ofList","content":"NonEmptySet.ofList \nofList \nBuilds a non empty set from the given list. \nThrows exception for empty list"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#ofNonEmptyList","title":"NonEmptySet.ofNonEmptyList","content":"NonEmptySet.ofNonEmptyList \nofNonEmptyList \nBuilds a non empty set from the given non-empty list."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#ofSeq","title":"NonEmptySet.ofSeq","content":"NonEmptySet.ofSeq \nofSeq \nBuilds a non empty set from the given sequence. \nThrows exception for empty sequence"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#ofNonEmptySeq","title":"NonEmptySet.ofNonEmptySeq","content":"NonEmptySet.ofNonEmptySeq \nofNonEmptySeq \nBuilds a non empty set from the given non-empty sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#ofSet","title":"NonEmptySet.ofSet","content":"NonEmptySet.ofSet \nofSet \nBuilds a non empty set from the given set. \nThrows exception for empty set"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#tryOfSet","title":"NonEmptySet.tryOfSet","content":"NonEmptySet.tryOfSet \ntryOfSet \n\n Transforms a set to a NonEmptySet, returning an option to signal when the original set was empty.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#count","title":"NonEmptySet.count","content":"NonEmptySet.count \ncount \n\n Returns the count of a non empty set. You can also use property nes.Count\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#add","title":"NonEmptySet.add","content":"NonEmptySet.add \nadd \nReturns a new set with an element added to the set. No exception is raised if\n the set already contains the given element."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#contains","title":"NonEmptySet.contains","content":"NonEmptySet.contains \ncontains \nEvaluates to \u0022true\u0022 if the given element is in the given set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#isSubset","title":"NonEmptySet.isSubset","content":"NonEmptySet.isSubset \nisSubset \nEvaluates to \u0022true\u0022 if all elements of the first set are in the second"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#isProperSubset","title":"NonEmptySet.isProperSubset","content":"NonEmptySet.isProperSubset \nisProperSubset \nEvaluates to \u0022true\u0022 if all elements of the first set are in the second, and at least\n one element of the second is not in the first."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#isSuperset","title":"NonEmptySet.isSuperset","content":"NonEmptySet.isSuperset \nisSuperset \nEvaluates to \u0022true\u0022 if all elements of the second set are in the first."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#isProperSuperset","title":"NonEmptySet.isProperSuperset","content":"NonEmptySet.isProperSuperset \nisProperSuperset \nEvaluates to \u0022true\u0022 if all elements of the second set are in the first, and at least\n one element of the first is not in the second."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#exists","title":"NonEmptySet.exists","content":"NonEmptySet.exists \nexists \nTests if any element of the collection satisfies the given predicate.\n If the input function is \u003Ccode\u003Epredicate\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ep i0 or ... or p iN\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#map","title":"NonEmptySet.map","content":"NonEmptySet.map \nmap \nReturns a new collection containing the results of applying the\n given function to each element of the input set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#forall","title":"NonEmptySet.forall","content":"NonEmptySet.forall \nforall \nTests if all elements of the collection satisfy the given predicate.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E and \u0022j0...jN\u0022\n then computes \u003Ccode\u003Ep i0 \u0026amp;\u0026amp; ... \u0026amp;\u0026amp; p iN\u003C/code\u003E."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#union","title":"NonEmptySet.union","content":"NonEmptySet.union \nunion \nComputes the union of the two sets."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#unionMany","title":"NonEmptySet.unionMany","content":"NonEmptySet.unionMany \nunionMany \nComputes the union of a non empty list of sets."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#iter","title":"NonEmptySet.iter","content":"NonEmptySet.iter \niter \nApplies the given function to each element of the set, in order according\n to the comparison function."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#minElement","title":"NonEmptySet.minElement","content":"NonEmptySet.minElement \nminElement \nReturns the lowest element in the set according to the ordering being used for the set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#maxElement","title":"NonEmptySet.maxElement","content":"NonEmptySet.maxElement \nmaxElement \nReturns the highest element in the set according to the ordering being used for the set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#fold","title":"NonEmptySet.fold","content":"NonEmptySet.fold \nfold \nApplies the given accumulating function to all the elements of the set"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#foldBack","title":"NonEmptySet.foldBack","content":"NonEmptySet.foldBack \nfoldBack \nApplies the given accumulating function to all the elements of the set."},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset.html#reduce","title":"NonEmptySet.reduce","content":"NonEmptySet.reduce \nreduce \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-option.html","title":"Option","content":"Option \n\n Additional operations on Option\n \nOption.traverse \ntraverse"},{"uri":"/FSharpPlus/reference/fsharpplus-data-option.html#traverse","title":"Option.traverse","content":"Option.traverse \ntraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html","title":"OptionT","content":"OptionT \n\n Basic operations on OptionT\n \nOptionT.run \nrun \nOptionT.lift \nlift \nOptionT.hoist \nhoist \nOptionT.bind \nbind \nOptionT.apply \napply \nOptionT.map \nmap \nOptionT.map2 \nmap2 \nOptionT.map3 \nmap3"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#run","title":"OptionT.run","content":"OptionT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#lift","title":"OptionT.lift","content":"OptionT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into an OptionT\u003C\u0027Monad\u003Coption\u003C\u0027T\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#hoist","title":"OptionT.hoist","content":"OptionT.hoist \nhoist \n\n Transform an option\u003C\u0027T,\u0027Error\u003E to an OptionT\u003C\u0027Monad\u003Coption\u003C\u0027T,\u0027Error\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#bind","title":"OptionT.bind","content":"OptionT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#apply","title":"OptionT.apply","content":"OptionT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#map","title":"OptionT.map","content":"OptionT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#map2","title":"OptionT.map2","content":"OptionT.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont.html#map3","title":"OptionT.map3","content":"OptionT.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray.html","title":"ParallelArray","content":"ParallelArray \n\n Basic operations on ParallelArray\n \nParallelArray.run \nrun \nParallelArray.map \nmap \nParallelArray.ap \nap \nParallelArray.map2 \nmap2 \nParallelArray.map3 \nmap3"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray.html#run","title":"ParallelArray.run","content":"ParallelArray.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray.html#map","title":"ParallelArray.map","content":"ParallelArray.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray.html#ap","title":"ParallelArray.ap","content":"ParallelArray.ap \nap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray.html#map2","title":"ParallelArray.map2","content":"ParallelArray.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray.html#map3","title":"ParallelArray.map3","content":"ParallelArray.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarrayoperators.html","title":"ParallelArrayOperators","content":"ParallelArrayOperators \n \nParallelArrayOperators.parray \nparray"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarrayoperators.html#parray","title":"ParallelArrayOperators.parray","content":"ParallelArrayOperators.parray \nparray \n\n Creates a parallel array from a normal array.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html","title":"Reader","content":"Reader \n\n Basic operations on Reader\n \nReader.run \nrun \nReader.map \nmap \nReader.bind \nbind \nReader.apply \napply \nReader.map2 \nmap2 \nReader.map3 \nmap3 \nReader.zip \nzip \nReader.ask \nask \nReader.local \nlocal"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#run","title":"Reader.run","content":"Reader.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#map","title":"Reader.map","content":"Reader.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#bind","title":"Reader.bind","content":"Reader.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#apply","title":"Reader.apply","content":"Reader.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#map2","title":"Reader.map2","content":"Reader.map2 \nmap2 \n\n Combines two Readers into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#map3","title":"Reader.map3","content":"Reader.map3 \nmap3 \n\n Combines three Readers into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#zip","title":"Reader.zip","content":"Reader.zip \nzip \n\n Zips two Readers into one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#ask","title":"Reader.ask","content":"Reader.ask \nask \n\n Retrieves the monad environment.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader.html#local","title":"Reader.local","content":"Reader.local \nlocal \n Executes a computation in a modified environment. "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html","title":"ReaderT","content":"ReaderT \n\n Basic operations on Reader\n \nReaderT.run \nrun \nReaderT.hoist \nhoist \nReaderT.map \nmap \nReaderT.map2 \nmap2 \nReaderT.map3 \nmap3 \nReaderT.apply \napply \nReaderT.zip \nzip \nReaderT.bind \nbind \nReaderT.lift \nlift"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#run","title":"ReaderT.run","content":"ReaderT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#hoist","title":"ReaderT.hoist","content":"ReaderT.hoist \nhoist \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#map","title":"ReaderT.map","content":"ReaderT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#map2","title":"ReaderT.map2","content":"ReaderT.map2 \nmap2 \n\n Combines two ReaderTs into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#map3","title":"ReaderT.map3","content":"ReaderT.map3 \nmap3 \n\n Combines three ReaderTs into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#apply","title":"ReaderT.apply","content":"ReaderT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#zip","title":"ReaderT.zip","content":"ReaderT.zip \nzip \n\n Zips two ReaderTs into one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#bind","title":"ReaderT.bind","content":"ReaderT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert.html#lift","title":"ReaderT.lift","content":"ReaderT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into an ReaderT\u003C\u0027R, \u0027Monad\u003C\u0027T\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-result.html","title":"Result","content":"Result \n\n Additional operations on Result\n \nResult.traverse \ntraverse"},{"uri":"/FSharpPlus/reference/fsharpplus-data-result.html#traverse","title":"Result.traverse","content":"Result.traverse \ntraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultorexception.html","title":"ResultOrException","content":"ResultOrException \n\n Result\u003C\u0027TSuccess,\u0027TFailure\u003E specialized in \u0027TFailure = Exception \n \nResultOrException.IsResult \nIsResult \nResultOrException.IsException \nIsException \nResultOrException.Result \nResult \nResultOrException.Exception \nException"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultorexception.html#IsResult","title":"ResultOrException.IsResult","content":"ResultOrException.IsResult \nIsResult \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultorexception.html#IsException","title":"ResultOrException.IsException","content":"ResultOrException.IsException \nIsException \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultorexception.html#Result","title":"ResultOrException.Result","content":"ResultOrException.Result \nResult \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultorexception.html#Exception","title":"ResultOrException.Exception","content":"ResultOrException.Exception \nException \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html","title":"ResultT","content":"ResultT \n\n Basic operations on ResultT\n \nResultT.run \nrun \nResultT.lift \nlift \nResultT.hoist \nhoist \nResultT.bind \nbind \nResultT.apply \napply \nResultT.map \nmap \nResultT.map2 \nmap2 \nResultT.map3 \nmap3"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#run","title":"ResultT.run","content":"ResultT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#lift","title":"ResultT.lift","content":"ResultT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into a ResultT\u003C\u0027Monad\u003CResult\u003C\u0027T, \u0027TError\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#hoist","title":"ResultT.hoist","content":"ResultT.hoist \nhoist \n\n Transform a Result\u003C\u0027T,\u0027Error\u003E to a ResultT\u003C\u0027Monad\u003CResult\u003C\u0027T,\u0027Error\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#bind","title":"ResultT.bind","content":"ResultT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#apply","title":"ResultT.apply","content":"ResultT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#map","title":"ResultT.map","content":"ResultT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#map2","title":"ResultT.map2","content":"ResultT.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt.html#map3","title":"ResultT.map3","content":"ResultT.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seq.html","title":"Seq","content":"Seq \n\n Additional operations on Seq\n \nSeq.sequence \nsequence \nSeq.traverse \ntraverse \nSeq.replicateM \nreplicateM"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seq.html#sequence","title":"Seq.sequence","content":"Seq.sequence \nsequence \n\n Evaluates each action in the sequence from left to right and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-seq.html#traverse","title":"Seq.traverse","content":"Seq.traverse \ntraverse \n\n Maps each element of the sequence to an action, evaluates these actions from left to right and collect the results.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-seq.html#replicateM","title":"Seq.replicateM","content":"Seq.replicateM \nreplicateM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html","title":"SeqT","content":"SeqT \n\n Basic operations on SeqT\n \nSeqT.run \nrun \nSeqT.lift \nlift \nSeqT.bind \nbind \nSeqT.apply \napply \nSeqT.lift2 \nlift2 \nSeqT.lift3 \nlift3 \nSeqT.map \nmap"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#run","title":"SeqT.run","content":"SeqT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#lift","title":"SeqT.lift","content":"SeqT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into a SeqT\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#bind","title":"SeqT.bind","content":"SeqT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#apply","title":"SeqT.apply","content":"SeqT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#lift2","title":"SeqT.lift2","content":"SeqT.lift2 \nlift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#lift3","title":"SeqT.lift3","content":"SeqT.lift3 \nlift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt.html#map","title":"SeqT.map","content":"SeqT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqtoperationsmodule.html","title":"SeqTOperations","content":"SeqTOperations \n \nSeqTOperations.seqT \nseqT \nSeqTOperations.(|SeqT|) \n(|SeqT|)"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqtoperationsmodule.html#seqT","title":"SeqTOperations.seqT","content":"SeqTOperations.seqT \nseqT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqtoperationsmodule.html#(|SeqT|)","title":"SeqTOperations.(|SeqT|)","content":"SeqTOperations.(|SeqT|) \n(|SeqT|) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2.html","title":"SeqT_V2","content":"SeqT_V2 \n \nSeqT_V2.SeqT \nSeqT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html","title":"SeqT","content":"SeqT \n \nSeqT.AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nAppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nSeqT.CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E \nCollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E \nSeqT.Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E \nMap2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E \nSeqT.MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E \nMapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E \nSeqT.SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E \nSeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E \nSeqT.TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nTryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nSeqT.TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nTryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \nSeqT.ofIEnumerableM \nofIEnumerableM \nSeqT.wrap \nwrap \nSeqT.ofSeq \nofSeq \nSeqT.hoist \nhoist \nSeqT.runAsArray \nrunAsArray \nSeqT.runAsList \nrunAsList \nSeqT.run \nrun \nSeqT.empty \nempty \nSeqT.singleton \nsingleton \nSeqT.delay \ndelay \nSeqT.bindLift \nbindLift \nSeqT.lift \nlift \nSeqT.collect \ncollect \nSeqT.apply \napply \nSeqT.lift2 \nlift2 \nSeqT.append \nappend \nSeqT.mapM \nmapM \nSeqT.map \nmap \nSeqT.map2 \nmap2 \nSeqT.map2M \nmap2M \nSeqT.map3 \nmap3 \nSeqT.map3M \nmap3M \nSeqT.zip \nzip \nSeqT.zip3 \nzip3 \nSeqT.lift3 \nlift3 \nSeqT.filter \nfilter \nSeqT.iteriM \niteriM \nSeqT.iterM \niterM \nSeqT.iteri \niteri \nSeqT.iter \niter \nSeqT.tryWith \ntryWith \nSeqT.tryFinally \ntryFinally \nSeqT.unfoldM \nunfoldM \nSeqT.unfold \nunfold \nSeqT.truncate \ntruncate \nSeqT.take \ntake \nSeqT.drop \ndrop \nSeqT.skip \nskip"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#ofIEnumerableM","title":"SeqT.ofIEnumerableM","content":"SeqT.ofIEnumerableM \nofIEnumerableM \n\n Creates a SeqT sequence from an IEnumerableM.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#wrap","title":"SeqT.wrap","content":"SeqT.wrap \nwrap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#ofSeq","title":"SeqT.ofSeq","content":"SeqT.ofSeq \nofSeq \n\n Transforms a regular sequence into a SeqT, driven by the return type.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#hoist","title":"SeqT.hoist","content":"SeqT.hoist \nhoist \n\n Transforms a regular sequence into a SeqT, driven by the return type.\n An alias of \u0060ofSeq\u0060.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#runAsArray","title":"SeqT.runAsArray","content":"SeqT.runAsArray \nrunAsArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#runAsList","title":"SeqT.runAsList","content":"SeqT.runAsList \nrunAsList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#run","title":"SeqT.run","content":"SeqT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#empty","title":"SeqT.empty","content":"SeqT.empty \nempty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#singleton","title":"SeqT.singleton","content":"SeqT.singleton \nsingleton \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#delay","title":"SeqT.delay","content":"SeqT.delay \ndelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#bindLift","title":"SeqT.bindLift","content":"SeqT.bindLift \nbindLift \n\n A combination of bind and lift operations.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#lift","title":"SeqT.lift","content":"SeqT.lift \nlift \n\n Lifts the source into the SeqT.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#collect","title":"SeqT.collect","content":"SeqT.collect \ncollect \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#apply","title":"SeqT.apply","content":"SeqT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#lift2","title":"SeqT.lift2","content":"SeqT.lift2 \nlift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#append","title":"SeqT.append","content":"SeqT.append \nappend \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#mapM","title":"SeqT.mapM","content":"SeqT.mapM \nmapM \n\n A transformation, which traverses the sequence with an action in the inner monad.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#map","title":"SeqT.map","content":"SeqT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#map2","title":"SeqT.map2","content":"SeqT.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#map2M","title":"SeqT.map2M","content":"SeqT.map2M \nmap2M \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#map3","title":"SeqT.map3","content":"SeqT.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#map3M","title":"SeqT.map3M","content":"SeqT.map3M \nmap3M \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#zip","title":"SeqT.zip","content":"SeqT.zip \nzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#zip3","title":"SeqT.zip3","content":"SeqT.zip3 \nzip3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#lift3","title":"SeqT.lift3","content":"SeqT.lift3 \nlift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#filter","title":"SeqT.filter","content":"SeqT.filter \nfilter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#iteriM","title":"SeqT.iteriM","content":"SeqT.iteriM \niteriM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#iterM","title":"SeqT.iterM","content":"SeqT.iterM \niterM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#iteri","title":"SeqT.iteri","content":"SeqT.iteri \niteri \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#iter","title":"SeqT.iter","content":"SeqT.iter \niter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#tryWith","title":"SeqT.tryWith","content":"SeqT.tryWith \ntryWith \n\n Implements the \u0027TryWith\u0027 functionality for the computation expression builder.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#tryFinally","title":"SeqT.tryFinally","content":"SeqT.tryFinally \ntryFinally \n\n Implements the \u0027TryFinally\u0027 functionality for the computation expression builder.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#unfoldM","title":"SeqT.unfoldM","content":"SeqT.unfoldM \nunfoldM \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#unfold","title":"SeqT.unfold","content":"SeqT.unfold \nunfold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#truncate","title":"SeqT.truncate","content":"SeqT.truncate \ntruncate \nReturns a sequence that when enumerated returns at most N elements."},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#take","title":"SeqT.take","content":"SeqT.take \ntake \nReturns the first N elements of the sequence. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the sequence. \u003Ccode\u003ESeqT.truncate\u003C/code\u003E\n returns as many items as the sequence contains instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#drop","title":"SeqT.drop","content":"SeqT.drop \ndrop \nReturns a sequence that skips at most N elements of the underlying sequence and then yields the\n remaining elements of the sequence."},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt.html#skip","title":"SeqT.skip","content":"SeqT.skip \nskip \nReturns a sequence that skips N elements of the underlying sequence and then yields the\n remaining elements of the sequence. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the sequence. \u003Ccode\u003ESeqT.drop\u003C/code\u003E\n returns as many items as the sequence contains instead of throwing an exception."},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-appendstate-2.html","title":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E","content":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \n \nAppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted1 \nNotStarted1 \nAppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HasEnumerator1 \nHasEnumerator1 \nAppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted2 \nNotStarted2 \nAppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HasEnumerator2 \nHasEnumerator2 \nAppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-appendstate-2.html#NotStarted1","title":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted1","content":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted1 \nNotStarted1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-appendstate-2.html#HasEnumerator1","title":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HasEnumerator1","content":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HasEnumerator1 \nHasEnumerator1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-appendstate-2.html#NotStarted2","title":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted2","content":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted2 \nNotStarted2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-appendstate-2.html#HasEnumerator2","title":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HasEnumerator2","content":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HasEnumerator2 \nHasEnumerator2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-appendstate-2.html#Finished","title":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished","content":"AppendState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-collectstate-3.html","title":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E","content":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E \n \nCollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.NotStarted \nNotStarted \nCollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.HaveInputEnumerator \nHaveInputEnumerator \nCollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.HaveInnerEnumerator \nHaveInnerEnumerator \nCollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-collectstate-3.html#NotStarted","title":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.NotStarted","content":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.NotStarted \nNotStarted \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-collectstate-3.html#HaveInputEnumerator","title":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.HaveInputEnumerator","content":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.HaveInputEnumerator \nHaveInputEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-collectstate-3.html#HaveInnerEnumerator","title":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.HaveInnerEnumerator","content":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.HaveInnerEnumerator \nHaveInnerEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-collectstate-3.html#Finished","title":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.Finished","content":"CollectState\u003C\u0027T, \u0027U, \u0027Monad\u003Cbool\u003E\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-map2state-3.html","title":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E","content":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E \n \nMap2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.NotStarted \nNotStarted \nMap2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.HasEnumerator \nHasEnumerator \nMap2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-map2state-3.html#NotStarted","title":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.NotStarted","content":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.NotStarted \nNotStarted \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-map2state-3.html#HasEnumerator","title":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.HasEnumerator","content":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.HasEnumerator \nHasEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-map2state-3.html#Finished","title":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.Finished","content":"Map2State\u003C\u0027T1, \u0027T2, \u0027Monad\u003Cbool\u003E\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-mapstate-2.html","title":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E","content":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E \n \nMapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.NotStarted \nNotStarted \nMapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.HasEnumerator \nHasEnumerator \nMapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-mapstate-2.html#NotStarted","title":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.NotStarted","content":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.NotStarted \nNotStarted \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-mapstate-2.html#HasEnumerator","title":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.HasEnumerator","content":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.HasEnumerator \nHasEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-mapstate-2.html#Finished","title":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.Finished","content":"MapState\u003C\u0027T, \u0027Monad\u003Cbool\u003E\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-seqstate-2.html","title":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E","content":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E \n \nSeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.NotStarted \nNotStarted \nSeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.HasEnumerator \nHasEnumerator \nSeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-seqstate-2.html#NotStarted","title":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.NotStarted","content":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.NotStarted \nNotStarted \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-seqstate-2.html#HasEnumerator","title":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.HasEnumerator","content":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.HasEnumerator \nHasEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-seqstate-2.html#Finished","title":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.Finished","content":"SeqState\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E, \u0027T\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-tryfinallystate-2.html","title":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E","content":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \n \nTryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted \nNotStarted \nTryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveBodyEnumerator \nHaveBodyEnumerator \nTryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-tryfinallystate-2.html#NotStarted","title":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted","content":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted \nNotStarted \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-tryfinallystate-2.html#HaveBodyEnumerator","title":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveBodyEnumerator","content":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveBodyEnumerator \nHaveBodyEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-tryfinallystate-2.html#Finished","title":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished","content":"TryFinallyState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-trywithstate-2.html","title":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E","content":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \n \nTryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted \nNotStarted \nTryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveBodyEnumerator \nHaveBodyEnumerator \nTryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveHandlerEnumerator \nHaveHandlerEnumerator \nTryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished \nFinished"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-trywithstate-2.html#NotStarted","title":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted","content":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.NotStarted \nNotStarted \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-trywithstate-2.html#HaveBodyEnumerator","title":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveBodyEnumerator","content":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveBodyEnumerator \nHaveBodyEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-trywithstate-2.html#HaveHandlerEnumerator","title":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveHandlerEnumerator","content":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.HaveHandlerEnumerator \nHaveHandlerEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt_v2-seqt-trywithstate-2.html#Finished","title":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished","content":"TryWithState\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Finished \nFinished \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-specialbuilders.html","title":"SpecialBuilders","content":"SpecialBuilders \n \nSpecialBuilders.innerMonad \ninnerMonad \nSpecialBuilders.innerMonad2 \ninnerMonad2"},{"uri":"/FSharpPlus/reference/fsharpplus-data-specialbuilders.html#innerMonad","title":"SpecialBuilders.innerMonad","content":"SpecialBuilders.innerMonad \ninnerMonad \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-specialbuilders.html#innerMonad2","title":"SpecialBuilders.innerMonad2","content":"SpecialBuilders.innerMonad2 \ninnerMonad2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html","title":"State","content":"State \n\n Basic operations on State\n \nState.run \nrun \nState.map \nmap \nState.map2 \nmap2 \nState.map3 \nmap3 \nState.bind \nbind \nState.apply \napply \nState.eval \neval \nState.exec \nexec \nState.get \nget \nState.gets \ngets \nState.put \nput \nState.modify \nmodify \nState.zip \nzip"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#run","title":"State.run","content":"State.run \nrun \n\n Runs the state with an inital state to get back the result and the new state.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#map","title":"State.map","content":"State.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#map2","title":"State.map2","content":"State.map2 \nmap2 \n\n Combines two States into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#map3","title":"State.map3","content":"State.map3 \nmap3 \n\n Combines three States into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#bind","title":"State.bind","content":"State.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#apply","title":"State.apply","content":"State.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#eval","title":"State.eval","content":"State.eval \neval \n\n Evaluates a \u003Cparamref name=\u0022sa\u0022\u003Estate computation\u003C/paramref\u003E with the \u003Cparamref name=\u0022s\u0022\u003Einitial value\u003C/paramref\u003E and return only the result value of the computation. Ignore the final state.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#exec","title":"State.exec","content":"State.exec \nexec \n\n Evaluates a \u003Cparamref name=\u0022sa\u0022\u003Estate computation\u003C/paramref\u003E with the \u003Cparamref name=\u0022s\u0022\u003Einitial value\u003C/paramref\u003E and return only the final state of the computation. Ignore the result value.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#get","title":"State.get","content":"State.get \nget \n\n Return the state from the internals of the monad.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#gets","title":"State.gets","content":"State.gets \ngets \n\n Get a value which depends on the current state.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#put","title":"State.put","content":"State.put \nput \n\n Replace the state inside the monad.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#modify","title":"State.modify","content":"State.modify \nmodify \n\n Modify the state inside the monad by applying a function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state.html#zip","title":"State.zip","content":"State.zip \nzip \n\n Zips two States into one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html","title":"StateT","content":"StateT \n\n Basic operations on StateT\n \nStateT.run \nrun \nStateT.lift \nlift \nStateT.hoist \nhoist \nStateT.map \nmap \nStateT.map2 \nmap2 \nStateT.map3 \nmap3 \nStateT.apply \napply \nStateT.zip \nzip \nStateT.bind \nbind"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#run","title":"StateT.run","content":"StateT.run \nrun \n\n Runs the state with an inital state to get back the result and the new state wrapped in an inner monad.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#lift","title":"StateT.lift","content":"StateT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into a StateT\u003C\u0027S,\u0027\u0060\u0060Monad\u003C\u0027T * \u0027S\u003E\u0060\u0060\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#hoist","title":"StateT.hoist","content":"StateT.hoist \nhoist \n\n Transform a State\u003C\u0027S, \u0027T\u003E to a StateT\u003C\u0027S, \u0027\u0060\u0060Monad\u003C\u0027T * \u0027S\u003E\u0060\u0060\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#map","title":"StateT.map","content":"StateT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#map2","title":"StateT.map2","content":"StateT.map2 \nmap2 \n\n Combines two StateTs into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#map3","title":"StateT.map3","content":"StateT.map3 \nmap3 \n\n Combines three StateTs into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#apply","title":"StateT.apply","content":"StateT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#zip","title":"StateT.zip","content":"StateT.zip \nzip \n\n Zips two StateTs into one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet.html#bind","title":"StateT.bind","content":"StateT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html","title":"Validation","content":"Validation \n \nValidation.map \nmap \nValidation.apply \napply \nValidation.zip \nzip \nValidation.map2 \nmap2 \nValidation.map3 \nmap3 \nValidation.foldBack \nfoldBack \nValidation.traverse \ntraverse \nValidation.sequence \nsequence \nValidation.bimap \nbimap \nValidation.bifoldBack \nbifoldBack \nValidation.biFoldBack \nbiFoldBack \nValidation.bitraverse \nbitraverse \nValidation.bisequence \nbisequence \nValidation.bind \nbind \nValidation.orElse \norElse \nValidation.defaultValue \ndefaultValue \nValidation.defaultWith \ndefaultWith \nValidation.valueOr \nvalueOr \nValidation.liftResult \nliftResult \nValidation.liftChoice \nliftChoice \nValidation.appValidation \nappValidation \nValidation.toResult \ntoResult \nValidation.ofResult \nofResult \nValidation.toChoice \ntoChoice \nValidation.ofChoice \nofChoice \nValidation.ofOptionWith \nofOptionWith \nValidation.ofValueOptionWith \nofValueOptionWith \nValidation.either \neither \nValidation.validate \nvalidate \nValidation.validationNel \nvalidationNel \nValidation.ensure \nensure \nValidation.protect \nprotect \nValidation._Success \n_Success \nValidation._Failure \n_Failure \nValidation.isoValidationResult \nisoValidationResult \nValidation.partition \npartition"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#map","title":"Validation.map","content":"Validation.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#apply","title":"Validation.apply","content":"Validation.apply \napply \n\n Applies the wrapped value to the wrapped function when both are Success and returns a wrapped result or the Failure(s).\n \u003Cparam name=\u0022f\u0022\u003EThe function wrapped in a Success or a Failure.\u003C/param\u003E\n \u003Cparam name=\u0022x\u0022\u003EThe value wrapped in a Success or a Failure.\u003C/param\u003E\n \u003Creturns\u003EA Success of the function applied to the value when both are Success, or the Failure(s) if more than one, combined with the Semigroup (\u002B\u002B) operation of the Error type.\u003C/returns\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#zip","title":"Validation.zip","content":"Validation.zip \nzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#map2","title":"Validation.map2","content":"Validation.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#map3","title":"Validation.map3","content":"Validation.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#foldBack","title":"Validation.foldBack","content":"Validation.foldBack \nfoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#traverse","title":"Validation.traverse","content":"Validation.traverse \ntraverse \n\n Traverse the Success case with the supplied function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#sequence","title":"Validation.sequence","content":"Validation.sequence \nsequence \n\n Traverse the Success case.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#bimap","title":"Validation.bimap","content":"Validation.bimap \nbimap \nMaps both success and failure of a Validation."},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#bifoldBack","title":"Validation.bifoldBack","content":"Validation.bifoldBack \nbifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#biFoldBack","title":"Validation.biFoldBack","content":"Validation.biFoldBack \nbiFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#bitraverse","title":"Validation.bitraverse","content":"Validation.bitraverse \nbitraverse \n\n Like traverse but taking an additional function to traverse the Failure part as well.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#bisequence","title":"Validation.bisequence","content":"Validation.bisequence \nbisequence \n\n Like sequence but traversing the Failure part as well.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#bind","title":"Validation.bind","content":"Validation.bind \nbind \n\n Binds through a Validation, which is useful for\n composing Validations sequentially. Note that despite having a bind\n function of the correct type, Validation is not a monad.\n The reason is, this bind does not accumulate errors, so it does not\n agree with the Applicative instance.\n\n There is nothing wrong with using this function, it just does not make a\n valid Monad instance.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#orElse","title":"Validation.orElse","content":"Validation.orElse \norElse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#defaultValue","title":"Validation.defaultValue","content":"Validation.defaultValue \ndefaultValue \n\n Extracts the Success value or use the supplied default value when it\u0027s a Failure.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#defaultWith","title":"Validation.defaultWith","content":"Validation.defaultWith \ndefaultWith \n\n Extracts the Success value or applies the compensation function over the Failure.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#valueOr","title":"Validation.valueOr","content":"Validation.valueOr \nvalueOr \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#liftResult","title":"Validation.liftResult","content":"Validation.liftResult \nliftResult \n\n Converts a \u0027Result\u0027 to a \u0027Validation\u0027\n when the \u0027Error\u0027 of the \u0027Result\u0027 needs to be lifted into a \u0027Semigroup\u0027.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#liftChoice","title":"Validation.liftChoice","content":"Validation.liftChoice \nliftChoice \n\n Converting a \u0027Choice\u0027 to a \u0027Validation\u0027\n when the \u0027Choice2Of2\u0027 of the \u0027Choice\u0027 needs to be lifted into a \u0027Semigroup\u0027.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#appValidation","title":"Validation.appValidation","content":"Validation.appValidation \nappValidation \n\n Takes two Validations and returns the first Success.\n If both are Failures it returns both Failures combined with the supplied function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#toResult","title":"Validation.toResult","content":"Validation.toResult \ntoResult \n\n Converts a Validation\u003C\u0027Error,\u0027T\u003E to a Result\u003C\u0027T,\u0027Error\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#ofResult","title":"Validation.ofResult","content":"Validation.ofResult \nofResult \n\n Creates a Validation\u003C\u0027Error,\u0027T\u003E from a Result\u003C\u0027T,\u0027Error\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#toChoice","title":"Validation.toChoice","content":"Validation.toChoice \ntoChoice \n\n Converts a Validation\u003C\u0027Error,\u0027T\u003E to a Choice\u003C\u0027T,\u0027Error\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#ofChoice","title":"Validation.ofChoice","content":"Validation.ofChoice \nofChoice \n\n Creates a Validation\u003C\u0027Error,\u0027T\u003E from a Choice\u003C\u0027T,\u0027Error\u003E.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#ofOptionWith","title":"Validation.ofOptionWith","content":"Validation.ofOptionWith \nofOptionWith \nConverts an option to a Validation."},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#ofValueOptionWith","title":"Validation.ofValueOptionWith","content":"Validation.ofValueOptionWith \nofValueOptionWith \nConverts a voption to a Validation."},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#either","title":"Validation.either","content":"Validation.either \neither \n Extracts a value from either side of a Validation."},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#validate","title":"Validation.validate","content":"Validation.validate \nvalidate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#validationNel","title":"Validation.validationNel","content":"Validation.validationNel \nvalidationNel \n\n validationNel : Result\u003C\u0027a,\u0027e\u003E -\u003E Validation (NonEmptyList\u003C\u0027e\u003E) a\n This is \u0027liftError\u0027 specialized to \u0027NonEmptyList\u0027, since\n they are a common semigroup to use.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#ensure","title":"Validation.ensure","content":"Validation.ensure \nensure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#protect","title":"Validation.protect","content":"Validation.protect \nprotect \n\n Creates a safe version of the supplied function, which returns a Validation\u003Cexn, \u0027U\u003E instead of throwing exceptions.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#_Success","title":"Validation._Success","content":"Validation._Success \n_Success \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#_Failure","title":"Validation._Failure","content":"Validation._Failure \n_Failure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#isoValidationResult","title":"Validation.isoValidationResult","content":"Validation.isoValidationResult \nisoValidationResult \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation.html#partition","title":"Validation.partition","content":"Validation.partition \npartition \n\n Creates two lists by classifying the values depending on whether they were wrapped with Success or Failure.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoption.html","title":"ValueOption","content":"ValueOption \n\n Additional operations on ValueOption\n \nValueOption.traverse \ntraverse"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoption.html#traverse","title":"ValueOption.traverse","content":"ValueOption.traverse \ntraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html","title":"ValueOptionT","content":"ValueOptionT \n\n Basic operations on ValueOptionT\n \nValueOptionT.run \nrun \nValueOptionT.lift \nlift \nValueOptionT.hoist \nhoist \nValueOptionT.bind \nbind \nValueOptionT.apply \napply \nValueOptionT.map \nmap \nValueOptionT.map2 \nmap2 \nValueOptionT.map3 \nmap3"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#run","title":"ValueOptionT.run","content":"ValueOptionT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#lift","title":"ValueOptionT.lift","content":"ValueOptionT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into an ValueOptionT\u003C\u0027Monad\u003Cvoption\u003C\u0027T\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#hoist","title":"ValueOptionT.hoist","content":"ValueOptionT.hoist \nhoist \n\n Transform an voption\u003C\u0027T,\u0027Error\u003E to an ValueOptionT\u003C\u0027Monad\u003Cvoption\u003C\u0027T,\u0027Error\u003E\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#bind","title":"ValueOptionT.bind","content":"ValueOptionT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#apply","title":"ValueOptionT.apply","content":"ValueOptionT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#map","title":"ValueOptionT.map","content":"ValueOptionT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#map2","title":"ValueOptionT.map2","content":"ValueOptionT.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont.html#map3","title":"ValueOptionT.map3","content":"ValueOptionT.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html","title":"Writer","content":"Writer \n\n Basic operations on Writer\n \nWriter.run \nrun \nWriter.map \nmap \nWriter.map2 \nmap2 \nWriter.map3 \nmap3 \nWriter.bind \nbind \nWriter.apply \napply \nWriter.exec \nexec \nWriter.tell \ntell \nWriter.listen \nlisten \nWriter.pass \npass"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#run","title":"Writer.run","content":"Writer.run \nrun \n\n Unwraps a writer computation as a (result, output) pair. (The inverse of Writer.)\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#map","title":"Writer.map","content":"Writer.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#map2","title":"Writer.map2","content":"Writer.map2 \nmap2 \n\n Combines two Writers into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#map3","title":"Writer.map3","content":"Writer.map3 \nmap3 \n\n Combines three Writers into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#bind","title":"Writer.bind","content":"Writer.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#apply","title":"Writer.apply","content":"Writer.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#exec","title":"Writer.exec","content":"Writer.exec \nexec \n\n Extract the output from a writer computation.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#tell","title":"Writer.tell","content":"Writer.tell \ntell \n\n Embeds a simple writer action.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#listen","title":"Writer.listen","content":"Writer.listen \nlisten \n An action that executes the action \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Em\u003C/span\u003E and adds its output\n to the value of the computation. "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer.html#pass","title":"Writer.pass","content":"Writer.pass \npass \n\n Action that executes the action m, which returns a value and a function, and returns the value, applying the function to the output.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html","title":"WriterT","content":"WriterT \n\n Basic operations on WriterT\n \nWriterT.run \nrun \nWriterT.lift \nlift \nWriterT.map \nmap \nWriterT.map2 \nmap2 \nWriterT.map3 \nmap3 \nWriterT.apply \napply \nWriterT.bind \nbind"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#run","title":"WriterT.run","content":"WriterT.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#lift","title":"WriterT.lift","content":"WriterT.lift \nlift \n\n Embed a Monad\u003C\u0027T\u003E into a WriterT\u003C\u0027Monad\u003C\u0027T * \u0027Monoid\u003E\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#map","title":"WriterT.map","content":"WriterT.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#map2","title":"WriterT.map2","content":"WriterT.map2 \nmap2 \n\n Combines two WriterTs into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#map3","title":"WriterT.map3","content":"WriterT.map3 \nmap3 \n\n Combines three WriterTs into one by applying a mapping function.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#apply","title":"WriterT.apply","content":"WriterT.apply \napply \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert.html#bind","title":"WriterT.bind","content":"WriterT.bind \nbind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html","title":"ZipList","content":"ZipList \n\n Basic operations on ZipList\n \nZipList.run \nrun \nZipList.map \nmap \nZipList.map2 \nmap2 \nZipList.map3 \nmap3 \nZipList.singleton \nsingleton \nZipList.zip \nzip"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html#run","title":"ZipList.run","content":"ZipList.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html#map","title":"ZipList.map","content":"ZipList.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html#map2","title":"ZipList.map2","content":"ZipList.map2 \nmap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html#map3","title":"ZipList.map3","content":"ZipList.map3 \nmap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html#singleton","title":"ZipList.singleton","content":"ZipList.singleton \nsingleton \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist.html#zip","title":"ZipList.zip","content":"ZipList.zip \nzip \nCombines the two lists into a list of pairs. The two lists need not have equal lengths:\n when one list is exhausted any remaining elements in the other\n list are ignored."},{"uri":"/FSharpPlus/reference/fsharpplus-data-all.html","title":"All","content":"All \n\n Boolean monoid under conjunction.\n \nAll.(\u002B) \n(\u002B) \nAll.Zero \nZero \nAll.All \nAll"},{"uri":"/FSharpPlus/reference/fsharpplus-data-all.html#(\u002B)","title":"All.(\u002B)","content":"All.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-all.html#Zero","title":"All.Zero","content":"All.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-all.html#All","title":"All.All","content":"All.All \nAll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-any.html","title":"Any","content":"Any \n\n Boolean monoid under disjunction.\n \nAny.(\u002B) \n(\u002B) \nAny.Zero \nZero \nAny.Any \nAny"},{"uri":"/FSharpPlus/reference/fsharpplus-data-any.html#(\u002B)","title":"Any.(\u002B)","content":"Any.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-any.html#Zero","title":"Any.Zero","content":"Any.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-any.html#Any","title":"Any.Any","content":"Any.Any \nAny \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E \n \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.CallCC \nCallCC \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Catch \nCatch \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Delay \nDelay \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift \nLift \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift2 \nLift2 \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.LiftAsync \nLiftAsync \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Listen \nListen \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Local \nLocal \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Map \nMap \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Pass \nPass \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Put \nPut \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Return \nReturn \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Tell \nTell \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Throw \nThrow \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryFinally \nTryFinally \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryWith \nTryWith \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Using \nUsing \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Ask \nget_Ask \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Empty \nget_Empty \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Get \nget_Get \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Zero \nget_Zero \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u002B) \n(\u002B) \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.ChoiceT \nChoiceT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#CallCC","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.CallCC","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Catch","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Catch","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Delay","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Delay","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Lift","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Lift2","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift2","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#LiftAsync","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.LiftAsync","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Listen","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Listen","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Local","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Local","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Map","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Map","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Pass","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Pass","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Put","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Put","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Return","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Return","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Tell","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Tell","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Throw","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Throw","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#TryFinally","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryFinally","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#TryWith","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryWith","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#Using","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Using","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#get_Ask","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Ask","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#get_Empty","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Empty","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#get_Get","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Get","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#get_Zero","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Zero","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#(\u002B)","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u002B)","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#(\u003E=\u003E)","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E=\u003E)","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Choice functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#(\u003E\u003E=)","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E\u003E=)","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#(\u003C|\u003E)","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C|\u003E)","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#(\u003C*\u003E)","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C*\u003E)","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-choicet-1.html#ChoiceT","title":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.ChoiceT","content":"ChoiceT\u003C\u0027monad\u003CChoice\u003C\u0027t,\u0027e\u003E\u003E\u003E.ChoiceT \nChoiceT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E \n\n Right-to-left composition of functors. The composition of applicative functors is always applicative, but the composition of monads is not always a monad.\n \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map \nMap \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map2 \nMap2 \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map3 \nMap3 \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.( \u003C* ) \n( \u003C* ) \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.( *\u003E ) \n( *\u003E ) \nCompose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Compose \nCompose"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Lift2","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Lift2","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Lift3","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Lift3","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Map","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Map2","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map2","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Map3","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map3","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Return","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Return","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#get_Empty","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.get_Empty","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#(\u003C!\u003E)","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C!\u003E)","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Composed Applicative Functor. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#(\u003C|\u003E)","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E)","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#(\u003C.\u003E)","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C.\u003E)","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#( \u003C* )","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.( \u003C* )","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two composed applicatives left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#(\u003C*\u003E)","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E)","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#( *\u003E )","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.( *\u003E )","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two composed applicatives left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-compose-1.html#Compose","title":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Compose","content":"Compose\u003C\u0027functorF\u003C\u0027functorG\u003C\u0027t\u003E\u003E\u003E.Compose \nCompose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html","title":"Const\u003C\u0027t, \u0027u\u003E","content":"Const\u003C\u0027t, \u0027u\u003E \n The Const functor, defined as Const\u003C\u0027T, \u0027U\u003E where \u0027U is a phantom type. Useful for: Lens getters Its applicative instance plays a fundamental role in Lens.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Useful for: Lens getters.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Its applicative instance plays a fundamental role in Lens.  \nConst\u003C\u0027t, \u0027u\u003E.Bifold \nBifold \nConst\u003C\u0027t, \u0027u\u003E.BifoldBack \nBifoldBack \nConst\u003C\u0027t, \u0027u\u003E.BifoldMap \nBifoldMap \nConst\u003C\u0027t, \u0027u\u003E.Bimap \nBimap \nConst\u003C\u0027t, \u0027u\u003E.Bitraverse \nBitraverse \nConst\u003C\u0027t, \u0027u\u003E.Contramap \nContramap \nConst\u003C\u0027t, \u0027u\u003E.First \nFirst \nConst\u003C\u0027t, \u0027u\u003E.Lift2 \nLift2 \nConst\u003C\u0027t, \u0027u\u003E.Lift3 \nLift3 \nConst\u003C\u0027t, \u0027u\u003E.Map \nMap \nConst\u003C\u0027t, \u0027u\u003E.Return \nReturn \nConst\u003C\u0027t, \u0027u\u003E.get_Zero \nget_Zero \nConst\u003C\u0027t, \u0027u\u003E.(\u002B) \n(\u002B) \nConst\u003C\u0027t, \u0027u\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nConst\u003C\u0027t, \u0027u\u003E.( \u003C* ) \n( \u003C* ) \nConst\u003C\u0027t, \u0027u\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nConst\u003C\u0027t, \u0027u\u003E.( *\u003E ) \n( *\u003E ) \nConst\u003C\u0027t, \u0027u\u003E.Const \nConst"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Bifold","title":"Const\u003C\u0027t, \u0027u\u003E.Bifold","content":"Const\u003C\u0027t, \u0027u\u003E.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#BifoldBack","title":"Const\u003C\u0027t, \u0027u\u003E.BifoldBack","content":"Const\u003C\u0027t, \u0027u\u003E.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#BifoldMap","title":"Const\u003C\u0027t, \u0027u\u003E.BifoldMap","content":"Const\u003C\u0027t, \u0027u\u003E.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Bimap","title":"Const\u003C\u0027t, \u0027u\u003E.Bimap","content":"Const\u003C\u0027t, \u0027u\u003E.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Bitraverse","title":"Const\u003C\u0027t, \u0027u\u003E.Bitraverse","content":"Const\u003C\u0027t, \u0027u\u003E.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Contramap","title":"Const\u003C\u0027t, \u0027u\u003E.Contramap","content":"Const\u003C\u0027t, \u0027u\u003E.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#First","title":"Const\u003C\u0027t, \u0027u\u003E.First","content":"Const\u003C\u0027t, \u0027u\u003E.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Lift2","title":"Const\u003C\u0027t, \u0027u\u003E.Lift2","content":"Const\u003C\u0027t, \u0027u\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Lift3","title":"Const\u003C\u0027t, \u0027u\u003E.Lift3","content":"Const\u003C\u0027t, \u0027u\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Map","title":"Const\u003C\u0027t, \u0027u\u003E.Map","content":"Const\u003C\u0027t, \u0027u\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Return","title":"Const\u003C\u0027t, \u0027u\u003E.Return","content":"Const\u003C\u0027t, \u0027u\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#get_Zero","title":"Const\u003C\u0027t, \u0027u\u003E.get_Zero","content":"Const\u003C\u0027t, \u0027u\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#(\u002B)","title":"Const\u003C\u0027t, \u0027u\u003E.(\u002B)","content":"Const\u003C\u0027t, \u0027u\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#(\u003C!\u003E)","title":"Const\u003C\u0027t, \u0027u\u003E.(\u003C!\u003E)","content":"Const\u003C\u0027t, \u0027u\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Const. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#( \u003C* )","title":"Const\u003C\u0027t, \u0027u\u003E.( \u003C* )","content":"Const\u003C\u0027t, \u0027u\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Consts left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#(\u003C*\u003E)","title":"Const\u003C\u0027t, \u0027u\u003E.(\u003C*\u003E)","content":"Const\u003C\u0027t, \u0027u\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#( *\u003E )","title":"Const\u003C\u0027t, \u0027u\u003E.( *\u003E )","content":"Const\u003C\u0027t, \u0027u\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Consts left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-const-2.html#Const","title":"Const\u003C\u0027t, \u0027u\u003E.Const","content":"Const\u003C\u0027t, \u0027u\u003E.Const \nConst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html","title":"Cont\u003C\u0027r, \u0027t\u003E","content":"Cont\u003C\u0027r, \u0027t\u003E \n Computation type: Computations which can be interrupted and resumed.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Binding strategy: Binding a function to a monadic value creates a new continuation which uses the function as the continuation of the monadic computation.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Useful for: Complex control structures, error handling, and creating co-routines. \nCont\u003C\u0027r, \u0027t\u003E.CallCC \nCallCC \nCont\u003C\u0027r, \u0027t\u003E.Delay \nDelay \nCont\u003C\u0027r, \u0027t\u003E.Lift \nLift \nCont\u003C\u0027r, \u0027t\u003E.Lift2 \nLift2 \nCont\u003C\u0027r, \u0027t\u003E.Lift3 \nLift3 \nCont\u003C\u0027r, \u0027t\u003E.LiftAsync \nLiftAsync \nCont\u003C\u0027r, \u0027t\u003E.Local \nLocal \nCont\u003C\u0027r, \u0027t\u003E.Map \nMap \nCont\u003C\u0027r, \u0027t\u003E.Put \nPut \nCont\u003C\u0027r, \u0027t\u003E.Return \nReturn \nCont\u003C\u0027r, \u0027t\u003E.TryFinally \nTryFinally \nCont\u003C\u0027r, \u0027t\u003E.TryWith \nTryWith \nCont\u003C\u0027r, \u0027t\u003E.Using \nUsing \nCont\u003C\u0027r, \u0027t\u003E.get_Ask \nget_Ask \nCont\u003C\u0027r, \u0027t\u003E.get_Get \nget_Get \nCont\u003C\u0027r, \u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nCont\u003C\u0027r, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nCont\u003C\u0027r, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nCont\u003C\u0027r, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \nCont\u003C\u0027r, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nCont\u003C\u0027r, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \nCont\u003C\u0027r, \u0027t\u003E.Cont \nCont"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#CallCC","title":"Cont\u003C\u0027r, \u0027t\u003E.CallCC","content":"Cont\u003C\u0027r, \u0027t\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Delay","title":"Cont\u003C\u0027r, \u0027t\u003E.Delay","content":"Cont\u003C\u0027r, \u0027t\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Lift","title":"Cont\u003C\u0027r, \u0027t\u003E.Lift","content":"Cont\u003C\u0027r, \u0027t\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Lift2","title":"Cont\u003C\u0027r, \u0027t\u003E.Lift2","content":"Cont\u003C\u0027r, \u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Lift3","title":"Cont\u003C\u0027r, \u0027t\u003E.Lift3","content":"Cont\u003C\u0027r, \u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#LiftAsync","title":"Cont\u003C\u0027r, \u0027t\u003E.LiftAsync","content":"Cont\u003C\u0027r, \u0027t\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Local","title":"Cont\u003C\u0027r, \u0027t\u003E.Local","content":"Cont\u003C\u0027r, \u0027t\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Map","title":"Cont\u003C\u0027r, \u0027t\u003E.Map","content":"Cont\u003C\u0027r, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Put","title":"Cont\u003C\u0027r, \u0027t\u003E.Put","content":"Cont\u003C\u0027r, \u0027t\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Return","title":"Cont\u003C\u0027r, \u0027t\u003E.Return","content":"Cont\u003C\u0027r, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#TryFinally","title":"Cont\u003C\u0027r, \u0027t\u003E.TryFinally","content":"Cont\u003C\u0027r, \u0027t\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#TryWith","title":"Cont\u003C\u0027r, \u0027t\u003E.TryWith","content":"Cont\u003C\u0027r, \u0027t\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Using","title":"Cont\u003C\u0027r, \u0027t\u003E.Using","content":"Cont\u003C\u0027r, \u0027t\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#get_Ask","title":"Cont\u003C\u0027r, \u0027t\u003E.get_Ask","content":"Cont\u003C\u0027r, \u0027t\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#get_Get","title":"Cont\u003C\u0027r, \u0027t\u003E.get_Get","content":"Cont\u003C\u0027r, \u0027t\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#(\u003E=\u003E)","title":"Cont\u003C\u0027r, \u0027t\u003E.(\u003E=\u003E)","content":"Cont\u003C\u0027r, \u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Cont functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#(\u003E\u003E=)","title":"Cont\u003C\u0027r, \u0027t\u003E.(\u003E\u003E=)","content":"Cont\u003C\u0027r, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#(\u003C!\u003E)","title":"Cont\u003C\u0027r, \u0027t\u003E.(\u003C!\u003E)","content":"Cont\u003C\u0027r, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Cont. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#( \u003C* )","title":"Cont\u003C\u0027r, \u0027t\u003E.( \u003C* )","content":"Cont\u003C\u0027r, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Conts left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#(\u003C*\u003E)","title":"Cont\u003C\u0027r, \u0027t\u003E.(\u003C*\u003E)","content":"Cont\u003C\u0027r, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#( *\u003E )","title":"Cont\u003C\u0027r, \u0027t\u003E.( *\u003E )","content":"Cont\u003C\u0027r, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Conts left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-cont-2.html#Cont","title":"Cont\u003C\u0027r, \u0027t\u003E.Cont","content":"Cont\u003C\u0027r, \u0027t\u003E.Cont \nCont \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-contt-2.html","title":"ContT\u003C\u0027r, \u0027t\u003E","content":"ContT\u003C\u0027r, \u0027t\u003E \n\n Monad Transformer for Cont\u003C\u0027R,\u0027T\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproduct-2.html","title":"Coproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E","content":"Coproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E \n \nCoproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCoproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.Map \nMap"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproduct-2.html#\u0060\u0060.ctor\u0060\u0060","title":"Coproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Coproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproduct-2.html#Map","title":"Coproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.Map","content":"Coproduct\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductbase-2.html","title":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E","content":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E \n \nCoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.getContents \ngetContents \nCoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.Map \nMap"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductbase-2.html#\u0060\u0060.ctor\u0060\u0060","title":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductbase-2.html#getContents","title":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.getContents","content":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.getContents \ngetContents \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-coproductbase-2.html#Map","title":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.Map","content":"CoproductBase\u003C\u0027functorL\u003C\u0027t\u003E, \u0027functorR\u003C\u0027t\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html","title":"DList\u003C\u0027T\u003E","content":"DList\u003C\u0027T\u003E \n\n DList is an ordered linear structure implementing the List signature (head, tail, cons), \n end-insertion (add), and O(1) append. Ordering is by insertion history.\n DList is an implementation of [John Hughes\u0027 append list](http://dl.acm.org/citation.cfm?id=8475).\n \nDList\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDList\u003C\u0027T\u003E.Add \nAdd \nDList\u003C\u0027T\u003E.Cons \nCons \nDList\u003C\u0027T\u003E.toSeq \ntoSeq \nDList\u003C\u0027T\u003E.Length \nLength \nDList\u003C\u0027T\u003E.Uncons \nUncons \nDList\u003C\u0027T\u003E.TryTail \nTryTail \nDList\u003C\u0027T\u003E.TryUncons \nTryUncons \nDList\u003C\u0027T\u003E.Head \nHead \nDList\u003C\u0027T\u003E.Tail \nTail \nDList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nDList\u003C\u0027T\u003E.Item \nItem \nDList\u003C\u0027T\u003E.TryHead \nTryHead \nDList\u003C\u0027T\u003E.Fold \nFold \nDList\u003C\u0027T\u003E.Map \nMap \nDList\u003C\u0027T\u003E.OfSeq \nOfSeq \nDList\u003C\u0027T\u003E.Return \nReturn \nDList\u003C\u0027T\u003E.ToList \nToList \nDList\u003C\u0027T\u003E.ToSeq \nToSeq \nDList\u003C\u0027T\u003E.append \nappend \nDList\u003C\u0027T\u003E.appendLists \nappendLists \nDList\u003C\u0027T\u003E.fold \nfold \nDList\u003C\u0027T\u003E.foldBack \nfoldBack \nDList\u003C\u0027T\u003E.get_Empty \nget_Empty \nDList\u003C\u0027T\u003E.get_Zero \nget_Zero \nDList\u003C\u0027T\u003E.head \nhead \nDList\u003C\u0027T\u003E.ofSeq \nofSeq \nDList\u003C\u0027T\u003E.(\u002B) \n(\u002B) \nDList\u003C\u0027T\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nDList\u003C\u0027T\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nDList\u003C\u0027T\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nDList\u003C\u0027T\u003E.tryHead \ntryHead"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#\u0060\u0060.ctor\u0060\u0060","title":"DList\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DList\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Add","title":"DList\u003C\u0027T\u003E.Add","content":"DList\u003C\u0027T\u003E.Add \nAdd \n\n O(1). Returns a new DList with the element added to the end.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Cons","title":"DList\u003C\u0027T\u003E.Cons","content":"DList\u003C\u0027T\u003E.Cons \nCons \n\n O(1). Returns a new DList with the element added to the front.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#toSeq","title":"DList\u003C\u0027T\u003E.toSeq","content":"DList\u003C\u0027T\u003E.toSeq \ntoSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Length","title":"DList\u003C\u0027T\u003E.Length","content":"DList\u003C\u0027T\u003E.Length \nLength \n\n O(1). Returns the count of elememts.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Uncons","title":"DList\u003C\u0027T\u003E.Uncons","content":"DList\u003C\u0027T\u003E.Uncons \nUncons \n\n O(log n). Returns the first element and tail.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#TryTail","title":"DList\u003C\u0027T\u003E.TryTail","content":"DList\u003C\u0027T\u003E.TryTail \nTryTail \n\n O(log n). Returns option DList of the elements trailing the first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#TryUncons","title":"DList\u003C\u0027T\u003E.TryUncons","content":"DList\u003C\u0027T\u003E.TryUncons \nTryUncons \n\n O(log n). Returns option first element and tail.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Head","title":"DList\u003C\u0027T\u003E.Head","content":"DList\u003C\u0027T\u003E.Head \nHead \n\n O(log n). Returns the first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Tail","title":"DList\u003C\u0027T\u003E.Tail","content":"DList\u003C\u0027T\u003E.Tail \nTail \n\n O(log n). Returns a new DList of the elements trailing the first element.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#IsEmpty","title":"DList\u003C\u0027T\u003E.IsEmpty","content":"DList\u003C\u0027T\u003E.IsEmpty \nIsEmpty \n\n O(1). Returns true if the DList has no elements.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Item","title":"DList\u003C\u0027T\u003E.Item","content":"DList\u003C\u0027T\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#TryHead","title":"DList\u003C\u0027T\u003E.TryHead","content":"DList\u003C\u0027T\u003E.TryHead \nTryHead \n\n O(log n). Returns option first element\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Fold","title":"DList\u003C\u0027T\u003E.Fold","content":"DList\u003C\u0027T\u003E.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Map","title":"DList\u003C\u0027T\u003E.Map","content":"DList\u003C\u0027T\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#OfSeq","title":"DList\u003C\u0027T\u003E.OfSeq","content":"DList\u003C\u0027T\u003E.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#Return","title":"DList\u003C\u0027T\u003E.Return","content":"DList\u003C\u0027T\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#ToList","title":"DList\u003C\u0027T\u003E.ToList","content":"DList\u003C\u0027T\u003E.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#ToSeq","title":"DList\u003C\u0027T\u003E.ToSeq","content":"DList\u003C\u0027T\u003E.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#append","title":"DList\u003C\u0027T\u003E.append","content":"DList\u003C\u0027T\u003E.append \nappend \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#appendLists","title":"DList\u003C\u0027T\u003E.appendLists","content":"DList\u003C\u0027T\u003E.appendLists \nappendLists \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#fold","title":"DList\u003C\u0027T\u003E.fold","content":"DList\u003C\u0027T\u003E.fold \nfold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#foldBack","title":"DList\u003C\u0027T\u003E.foldBack","content":"DList\u003C\u0027T\u003E.foldBack \nfoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#get_Empty","title":"DList\u003C\u0027T\u003E.get_Empty","content":"DList\u003C\u0027T\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#get_Zero","title":"DList\u003C\u0027T\u003E.get_Zero","content":"DList\u003C\u0027T\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#head","title":"DList\u003C\u0027T\u003E.head","content":"DList\u003C\u0027T\u003E.head \nhead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#ofSeq","title":"DList\u003C\u0027T\u003E.ofSeq","content":"DList\u003C\u0027T\u003E.ofSeq \nofSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#(\u002B)","title":"DList\u003C\u0027T\u003E.(\u002B)","content":"DList\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#(\u003E\u003E=)","title":"DList\u003C\u0027T\u003E.(\u003E\u003E=)","content":"DList\u003C\u0027T\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#(\u003C|\u003E)","title":"DList\u003C\u0027T\u003E.(\u003C|\u003E)","content":"DList\u003C\u0027T\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#(\u003C*\u003E)","title":"DList\u003C\u0027T\u003E.(\u003C*\u003E)","content":"DList\u003C\u0027T\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlist-1.html#tryHead","title":"DList\u003C\u0027T\u003E.tryHead","content":"DList\u003C\u0027T\u003E.tryHead \ntryHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlistdata-1.html","title":"DListData\u003C\u0027T\u003E","content":"DListData\u003C\u0027T\u003E \n \nDListData\u003C\u0027T\u003E.Nil \nNil \nDListData\u003C\u0027T\u003E.Unit \nUnit \nDListData\u003C\u0027T\u003E.Join \nJoin"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlistdata-1.html#Nil","title":"DListData\u003C\u0027T\u003E.Nil","content":"DListData\u003C\u0027T\u003E.Nil \nNil \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlistdata-1.html#Unit","title":"DListData\u003C\u0027T\u003E.Unit","content":"DListData\u003C\u0027T\u003E.Unit \nUnit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dlistdata-1.html#Join","title":"DListData\u003C\u0027T\u003E.Join","content":"DListData\u003C\u0027T\u003E.Join \nJoin \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dual-1.html","title":"Dual\u003C\u0027t\u003E","content":"Dual\u003C\u0027t\u003E \n\n The dual of a monoid, obtained by swapping the arguments of append.\n \nDual\u003C\u0027t\u003E.get_Zero \nget_Zero \nDual\u003C\u0027t\u003E.(\u002B) \n(\u002B) \nDual\u003C\u0027t\u003E.Dual \nDual"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dual-1.html#get_Zero","title":"Dual\u003C\u0027t\u003E.get_Zero","content":"Dual\u003C\u0027t\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dual-1.html#(\u002B)","title":"Dual\u003C\u0027t\u003E.(\u002B)","content":"Dual\u003C\u0027t\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-dual-1.html#Dual","title":"Dual\u003C\u0027t\u003E.Dual","content":"Dual\u003C\u0027t\u003E.Dual \nDual \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-endo-1.html","title":"Endo\u003C\u0027t\u003E","content":"Endo\u003C\u0027t\u003E \n\n The monoid of endomorphisms under composition.\n \nEndo\u003C\u0027t\u003E.get_Zero \nget_Zero \nEndo\u003C\u0027t\u003E.(\u002B) \n(\u002B) \nEndo\u003C\u0027t\u003E.Endo \nEndo"},{"uri":"/FSharpPlus/reference/fsharpplus-data-endo-1.html#get_Zero","title":"Endo\u003C\u0027t\u003E.get_Zero","content":"Endo\u003C\u0027t\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-endo-1.html#(\u002B)","title":"Endo\u003C\u0027t\u003E.(\u002B)","content":"Endo\u003C\u0027t\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-endo-1.html#Endo","title":"Endo\u003C\u0027t\u003E.Endo","content":"Endo\u003C\u0027t\u003E.Endo \nEndo \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-first-1.html","title":"First\u003C\u0027t\u003E","content":"First\u003C\u0027t\u003E \n\n Option\u003C\u0027T\u003E monoid returning the leftmost non-None value.\n \nFirst\u003C\u0027t\u003E.get_Zero \nget_Zero \nFirst\u003C\u0027t\u003E.(\u002B) \n(\u002B) \nFirst\u003C\u0027t\u003E.run \nrun \nFirst\u003C\u0027t\u003E.First \nFirst"},{"uri":"/FSharpPlus/reference/fsharpplus-data-first-1.html#get_Zero","title":"First\u003C\u0027t\u003E.get_Zero","content":"First\u003C\u0027t\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-first-1.html#(\u002B)","title":"First\u003C\u0027t\u003E.(\u002B)","content":"First\u003C\u0027t\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-first-1.html#run","title":"First\u003C\u0027t\u003E.run","content":"First\u003C\u0027t\u003E.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-first-1.html#First","title":"First\u003C\u0027t\u003E.First","content":"First\u003C\u0027t\u003E.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E \n \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Delay \nDelay \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Lift2 \nLift2 \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Lift3 \nLift3 \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Map \nMap \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Return \nReturn \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Pure \nPure \nFree\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Roll \nRoll"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Delay","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Delay","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Lift2","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Lift2","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Lift3","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Lift3","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Map","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Map","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Return","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Return","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#(\u003E\u003E=)","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.(\u003E\u003E=)","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#(\u003C*\u003E)","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.(\u003C*\u003E)","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Pure","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Pure","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-free-2.html#Roll","title":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Roll","content":"Free\u003C\u0027functor\u003C\u0027t\u003E, \u0027t\u003E.Roll \nRoll \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ienumerablem-2.html","title":"IEnumerableM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E","content":"IEnumerableM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \n \nIEnumerableM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.GetEnumerator \nGetEnumerator"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ienumerablem-2.html#GetEnumerator","title":"IEnumerableM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.GetEnumerator","content":"IEnumerableM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.GetEnumerator \nGetEnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ienumeratorm-2.html","title":"IEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E","content":"IEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E \n \nIEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.MoveNext \nMoveNext \nIEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Current \nCurrent"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ienumeratorm-2.html#MoveNext","title":"IEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.MoveNext","content":"IEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.MoveNext \nMoveNext \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ienumeratorm-2.html#Current","title":"IEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Current","content":"IEnumeratorM\u003C\u0027Monad\u003Cbool\u003E, \u0027T\u003E.Current \nCurrent \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html","title":"Identity\u003C\u0027t\u003E","content":"Identity\u003C\u0027t\u003E \n Computation type: Simple function application.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Binding strategy: The bound function is applied to the input value. Identity x \u003E\u003E= f = Identity (f x)\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Useful for: Lens setters and updaters - Monads can be derived from monad transformers applied to the Identity monad.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   The Identity monad is a monad that does not embody any computational strategy. \n           It simply applies the bound function to its input without any modification. \n           Computationally, there is no reason to use the Identity monad instead of the much simpler act of simply applying functions to their arguments.\n           The purpose of the Identity monad is its fundamental role in the theory of monad transformers.\n           Any monad transformer applied to the Identity monad yields a non-transformer version of that monad.\n           Its applicative instance plays a fundamental role in Lens.  \nIdentity\u003C\u0027t\u003E.Lift2 \nLift2 \nIdentity\u003C\u0027t\u003E.Lift3 \nLift3 \nIdentity\u003C\u0027t\u003E.Map \nMap \nIdentity\u003C\u0027t\u003E.Map2 \nMap2 \nIdentity\u003C\u0027t\u003E.Map3 \nMap3 \nIdentity\u003C\u0027t\u003E.Pure \nPure \nIdentity\u003C\u0027t\u003E.Return \nReturn \nIdentity\u003C\u0027t\u003E.Zip \nZip \nIdentity\u003C\u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nIdentity\u003C\u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nIdentity\u003C\u0027t\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \nIdentity\u003C\u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nIdentity\u003C\u0027t\u003E.Identity \nIdentity"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Lift2","title":"Identity\u003C\u0027t\u003E.Lift2","content":"Identity\u003C\u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Lift3","title":"Identity\u003C\u0027t\u003E.Lift3","content":"Identity\u003C\u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Map","title":"Identity\u003C\u0027t\u003E.Map","content":"Identity\u003C\u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Map2","title":"Identity\u003C\u0027t\u003E.Map2","content":"Identity\u003C\u0027t\u003E.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Map3","title":"Identity\u003C\u0027t\u003E.Map3","content":"Identity\u003C\u0027t\u003E.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Pure","title":"Identity\u003C\u0027t\u003E.Pure","content":"Identity\u003C\u0027t\u003E.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Return","title":"Identity\u003C\u0027t\u003E.Return","content":"Identity\u003C\u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Zip","title":"Identity\u003C\u0027t\u003E.Zip","content":"Identity\u003C\u0027t\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#(\u003E=\u003E)","title":"Identity\u003C\u0027t\u003E.(\u003E=\u003E)","content":"Identity\u003C\u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Id functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#(\u003E\u003E=)","title":"Identity\u003C\u0027t\u003E.(\u003E\u003E=)","content":"Identity\u003C\u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#(\u003C.\u003E)","title":"Identity\u003C\u0027t\u003E.(\u003C.\u003E)","content":"Identity\u003C\u0027t\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#(\u003C*\u003E)","title":"Identity\u003C\u0027t\u003E.(\u003C*\u003E)","content":"Identity\u003C\u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-identity-1.html#Identity","title":"Identity\u003C\u0027t\u003E.Identity","content":"Identity\u003C\u0027t\u003E.Identity \nIdentity \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E \n\n Kleisli arrows of a monad. Represents a function \u0027T -\u003E \u0027Monad\u003C\u0027U\u003E\n \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Arr \nArr \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Contramap \nContramap \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Dimap \nDimap \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Empty \nEmpty \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.First \nFirst \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Left \nLeft \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Map \nMap \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Right \nRight \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Second \nSecond \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.get_App \nget_App \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.get_Id \nget_Id \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(|||) \n(|||) \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(\u003C\u003C\u003C) \n(\u003C\u003C\u003C) \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(\u002B\u002B\u002B) \n(\u002B\u002B\u002B) \nKleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Kleisli \nKleisli"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#\u0060\u0060\u003C|\u003E\u0060\u0060","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.\u0060\u0060\u003C|\u003E\u0060\u0060","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.\u0060\u0060\u003C|\u003E\u0060\u0060 \n\u0060\u0060\u003C|\u003E\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Arr","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Arr","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Arr \nArr \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Contramap","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Contramap","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Contramap \nContramap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Dimap","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Dimap","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Dimap \nDimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Empty","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Empty","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Empty \nEmpty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#First","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.First","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Left","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Left","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Left \nLeft \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Map","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Map","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Right","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Right","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Right \nRight \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Second","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Second","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Second \nSecond \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#get_App","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.get_App","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.get_App \nget_App \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#get_Id","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.get_Id","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.get_Id \nget_Id \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#(|||)","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(|||)","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(|||) \n(|||) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#(\u003C\u003C\u003C)","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(\u003C\u003C\u003C)","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(\u003C\u003C\u003C) \n(\u003C\u003C\u003C) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#(\u002B\u002B\u002B)","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(\u002B\u002B\u002B)","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.(\u002B\u002B\u002B) \n(\u002B\u002B\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-kleisli-2.html#Kleisli","title":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Kleisli","content":"Kleisli\u003C\u0027t, \u0027monad\u003C\u0027u\u003E\u003E.Kleisli \nKleisli \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-last-1.html","title":"Last\u003C\u0027t\u003E","content":"Last\u003C\u0027t\u003E \n\n Option\u003C\u0027T\u003E monoid returning the rightmost non-None value.\n \nLast\u003C\u0027t\u003E.get_Zero \nget_Zero \nLast\u003C\u0027t\u003E.(\u002B) \n(\u002B) \nLast\u003C\u0027t\u003E.run \nrun \nLast\u003C\u0027t\u003E.Last \nLast"},{"uri":"/FSharpPlus/reference/fsharpplus-data-last-1.html#get_Zero","title":"Last\u003C\u0027t\u003E.get_Zero","content":"Last\u003C\u0027t\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-last-1.html#(\u002B)","title":"Last\u003C\u0027t\u003E.(\u002B)","content":"Last\u003C\u0027t\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-last-1.html#run","title":"Last\u003C\u0027t\u003E.run","content":"Last\u003C\u0027t\u003E.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-last-1.html#Last","title":"Last\u003C\u0027t\u003E.Last","content":"Last\u003C\u0027t\u003E.Last \nLast \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E \n\n Monad Transformer for list\u003C\u0027T\u003E\n \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Map \nMap \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Put \nPut \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.ListT \nListT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#CallCC","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.CallCC","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Catch","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Catch","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Delay","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Delay","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Lift","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Lift2","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift2","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Lift3","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift3","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#LiftAsync","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.LiftAsync","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Local","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Local","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Map","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Map","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Put","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Put","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Return","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Return","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Throw","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Throw","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#TryFinally","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.TryFinally","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#TryWith","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.TryWith","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#Using","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Using","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#get_Ask","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Ask","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#get_Empty","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Empty","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#get_Get","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Get","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#(\u003E\u003E=)","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=)","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#(\u003C|\u003E)","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E)","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#(\u003C*\u003E)","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E)","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-listt-1.html#ListT","title":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.ListT","content":"ListT\u003C\u0027monad\u003Clist\u003C\u0027t\u003E\u003E\u003E.ListT \nListT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod-1.html","title":"MonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"MonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nMonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod-1.html#Delay","title":"MonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay","content":"MonadFxStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E \n \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Combine \nCombine \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Delay \nDelay \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.For \nFor \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.While \nWhile \nMonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Zero \nZero"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html#Combine","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Combine","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Combine \nCombine \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html#Delay","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Delay","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html#For","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.For","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.For \nFor \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html#While","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.While","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.While \nWhile \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadfxstrictbuildermod2-2.html#Zero","title":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Zero","content":"MonadFxStrictBuilderMod2\u003C\u0027monad\u003C\u0027t\u003E, \u0027monad\u003Cunit\u003E\u003E.Zero \nZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadplusstrictbuildermod-1.html","title":"MonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E","content":"MonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E \n \nMonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadplusstrictbuildermod-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-monadplusstrictbuildermod-1.html#Delay","title":"MonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay","content":"MonadPlusStrictBuilderMod\u003C\u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-mult-1.html","title":"Mult\u003C\u0027a\u003E","content":"Mult\u003C\u0027a\u003E \n\n Numeric wrapper for multiplication monoid (*, 1)\n \nMult\u003C\u0027a\u003E.get_Zero \nget_Zero \nMult\u003C\u0027a\u003E.(\u002B) \n(\u002B) \nMult\u003C\u0027a\u003E.Mult \nMult"},{"uri":"/FSharpPlus/reference/fsharpplus-data-mult-1.html#get_Zero","title":"Mult\u003C\u0027a\u003E.get_Zero","content":"Mult\u003C\u0027a\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-mult-1.html#(\u002B)","title":"Mult\u003C\u0027a\u003E.(\u002B)","content":"Mult\u003C\u0027a\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-mult-1.html#Mult","title":"Mult\u003C\u0027a\u003E.Mult","content":"Mult\u003C\u0027a\u003E.Mult \nMult \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E \n\n A Map where keys are not unique.\n \nMultiMap\u003C\u0027Key, \u0027Value\u003E.Item \nItem \nMultiMap\u003C\u0027Key, \u0027Value\u003E.Map \nMap \nMultiMap\u003C\u0027Key, \u0027Value\u003E.OfArray \nOfArray \nMultiMap\u003C\u0027Key, \u0027Value\u003E.OfList \nOfList \nMultiMap\u003C\u0027Key, \u0027Value\u003E.OfSeq \nOfSeq \nMultiMap\u003C\u0027Key, \u0027Value\u003E.ToArray \nToArray \nMultiMap\u003C\u0027Key, \u0027Value\u003E.ToList \nToList \nMultiMap\u003C\u0027Key, \u0027Value\u003E.ToSeq \nToSeq \nMultiMap\u003C\u0027Key, \u0027Value\u003E.get_Zero \nget_Zero \nMultiMap\u003C\u0027Key, \u0027Value\u003E.(\u002B) \n(\u002B)"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#Item","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.Item","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#Map","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.Map","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#OfArray","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.OfArray","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.OfArray \nOfArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#OfList","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.OfList","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.OfList \nOfList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#OfSeq","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.OfSeq","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#ToArray","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.ToArray","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.ToArray \nToArray \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#ToList","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.ToList","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#ToSeq","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.ToSeq","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#get_Zero","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.get_Zero","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-multimap-2.html#(\u002B)","title":"MultiMap\u003C\u0027Key, \u0027Value\u003E.(\u002B)","content":"MultiMap\u003C\u0027Key, \u0027Value\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html","title":"NonEmptyList\u003C\u0027t\u003E","content":"NonEmptyList\u003C\u0027t\u003E \n\n A type-safe list that contains at least one element.\n \nNonEmptyList\u003C\u0027t\u003E.Length \nLength \nNonEmptyList\u003C\u0027t\u003E.tail \ntail \nNonEmptyList\u003C\u0027t\u003E.head \nhead \nNonEmptyList\u003C\u0027t\u003E.GetSlice \nGetSlice \nNonEmptyList\u003C\u0027t\u003E.Item \nItem \nNonEmptyList\u003C\u0027t\u003E.Choice \nChoice \nNonEmptyList\u003C\u0027t\u003E.Duplicate \nDuplicate \nNonEmptyList\u003C\u0027t\u003E.Extract \nExtract \nNonEmptyList\u003C\u0027t\u003E.Fold \nFold \nNonEmptyList\u003C\u0027t\u003E.FoldBack \nFoldBack \nNonEmptyList\u003C\u0027t\u003E.Gather \nGather \nNonEmptyList\u003C\u0027t\u003E.Lift2 \nLift2 \nNonEmptyList\u003C\u0027t\u003E.Lift3 \nLift3 \nNonEmptyList\u003C\u0027t\u003E.Map \nMap \nNonEmptyList\u003C\u0027t\u003E.Map2 \nMap2 \nNonEmptyList\u003C\u0027t\u003E.Map3 \nMap3 \nNonEmptyList\u003C\u0027t\u003E.MapIndexed \nMapIndexed \nNonEmptyList\u003C\u0027t\u003E.Pure \nPure \nNonEmptyList\u003C\u0027t\u003E.Reduce \nReduce \nNonEmptyList\u003C\u0027t\u003E.Replace \nReplace \nNonEmptyList\u003C\u0027t\u003E.Return \nReturn \nNonEmptyList\u003C\u0027t\u003E.Sequence \nSequence \nNonEmptyList\u003C\u0027t\u003E.Sum \nSum \nNonEmptyList\u003C\u0027t\u003E.ToList \nToList \nNonEmptyList\u003C\u0027t\u003E.ToSeq \nToSeq \nNonEmptyList\u003C\u0027t\u003E.Transpose \nTranspose \nNonEmptyList\u003C\u0027t\u003E.Traverse \nTraverse \nNonEmptyList\u003C\u0027t\u003E.Unzip \nUnzip \nNonEmptyList\u003C\u0027t\u003E.Zip \nZip \nNonEmptyList\u003C\u0027t\u003E.(\u002B) \n(\u002B) \nNonEmptyList\u003C\u0027t\u003E.(=\u003E\u003E) \n(=\u003E\u003E) \nNonEmptyList\u003C\u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nNonEmptyList\u003C\u0027t\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \nNonEmptyList\u003C\u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nNonEmptyList\u003C\u0027t\u003E.Head \nHead \nNonEmptyList\u003C\u0027t\u003E.Tail \nTail"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Length","title":"NonEmptyList\u003C\u0027t\u003E.Length","content":"NonEmptyList\u003C\u0027t\u003E.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#tail","title":"NonEmptyList\u003C\u0027t\u003E.tail","content":"NonEmptyList\u003C\u0027t\u003E.tail \ntail \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#head","title":"NonEmptyList\u003C\u0027t\u003E.head","content":"NonEmptyList\u003C\u0027t\u003E.head \nhead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#GetSlice","title":"NonEmptyList\u003C\u0027t\u003E.GetSlice","content":"NonEmptyList\u003C\u0027t\u003E.GetSlice \nGetSlice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Item","title":"NonEmptyList\u003C\u0027t\u003E.Item","content":"NonEmptyList\u003C\u0027t\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Choice","title":"NonEmptyList\u003C\u0027t\u003E.Choice","content":"NonEmptyList\u003C\u0027t\u003E.Choice \nChoice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Duplicate","title":"NonEmptyList\u003C\u0027t\u003E.Duplicate","content":"NonEmptyList\u003C\u0027t\u003E.Duplicate \nDuplicate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Extract","title":"NonEmptyList\u003C\u0027t\u003E.Extract","content":"NonEmptyList\u003C\u0027t\u003E.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Fold","title":"NonEmptyList\u003C\u0027t\u003E.Fold","content":"NonEmptyList\u003C\u0027t\u003E.Fold \nFold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#FoldBack","title":"NonEmptyList\u003C\u0027t\u003E.FoldBack","content":"NonEmptyList\u003C\u0027t\u003E.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Gather","title":"NonEmptyList\u003C\u0027t\u003E.Gather","content":"NonEmptyList\u003C\u0027t\u003E.Gather \nGather \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Lift2","title":"NonEmptyList\u003C\u0027t\u003E.Lift2","content":"NonEmptyList\u003C\u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Lift3","title":"NonEmptyList\u003C\u0027t\u003E.Lift3","content":"NonEmptyList\u003C\u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Map","title":"NonEmptyList\u003C\u0027t\u003E.Map","content":"NonEmptyList\u003C\u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Map2","title":"NonEmptyList\u003C\u0027t\u003E.Map2","content":"NonEmptyList\u003C\u0027t\u003E.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Map3","title":"NonEmptyList\u003C\u0027t\u003E.Map3","content":"NonEmptyList\u003C\u0027t\u003E.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#MapIndexed","title":"NonEmptyList\u003C\u0027t\u003E.MapIndexed","content":"NonEmptyList\u003C\u0027t\u003E.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Pure","title":"NonEmptyList\u003C\u0027t\u003E.Pure","content":"NonEmptyList\u003C\u0027t\u003E.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Reduce","title":"NonEmptyList\u003C\u0027t\u003E.Reduce","content":"NonEmptyList\u003C\u0027t\u003E.Reduce \nReduce \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Replace","title":"NonEmptyList\u003C\u0027t\u003E.Replace","content":"NonEmptyList\u003C\u0027t\u003E.Replace \nReplace \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Return","title":"NonEmptyList\u003C\u0027t\u003E.Return","content":"NonEmptyList\u003C\u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Sequence","title":"NonEmptyList\u003C\u0027t\u003E.Sequence","content":"NonEmptyList\u003C\u0027t\u003E.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Sum","title":"NonEmptyList\u003C\u0027t\u003E.Sum","content":"NonEmptyList\u003C\u0027t\u003E.Sum \nSum \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#ToList","title":"NonEmptyList\u003C\u0027t\u003E.ToList","content":"NonEmptyList\u003C\u0027t\u003E.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#ToSeq","title":"NonEmptyList\u003C\u0027t\u003E.ToSeq","content":"NonEmptyList\u003C\u0027t\u003E.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Transpose","title":"NonEmptyList\u003C\u0027t\u003E.Transpose","content":"NonEmptyList\u003C\u0027t\u003E.Transpose \nTranspose \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Traverse","title":"NonEmptyList\u003C\u0027t\u003E.Traverse","content":"NonEmptyList\u003C\u0027t\u003E.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Unzip","title":"NonEmptyList\u003C\u0027t\u003E.Unzip","content":"NonEmptyList\u003C\u0027t\u003E.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Zip","title":"NonEmptyList\u003C\u0027t\u003E.Zip","content":"NonEmptyList\u003C\u0027t\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#(\u002B)","title":"NonEmptyList\u003C\u0027t\u003E.(\u002B)","content":"NonEmptyList\u003C\u0027t\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#(=\u003E\u003E)","title":"NonEmptyList\u003C\u0027t\u003E.(=\u003E\u003E)","content":"NonEmptyList\u003C\u0027t\u003E.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#(\u003E\u003E=)","title":"NonEmptyList\u003C\u0027t\u003E.(\u003E\u003E=)","content":"NonEmptyList\u003C\u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#(\u003C.\u003E)","title":"NonEmptyList\u003C\u0027t\u003E.(\u003C.\u003E)","content":"NonEmptyList\u003C\u0027t\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#(\u003C*\u003E)","title":"NonEmptyList\u003C\u0027t\u003E.(\u003C*\u003E)","content":"NonEmptyList\u003C\u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Head","title":"NonEmptyList\u003C\u0027t\u003E.Head","content":"NonEmptyList\u003C\u0027t\u003E.Head \nHead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptylist-1.html#Tail","title":"NonEmptyList\u003C\u0027t\u003E.Tail","content":"NonEmptyList\u003C\u0027t\u003E.Tail \nTail \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E \n\n A type-safe map that contains at least one element.\n \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Add \nAdd \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ContainsKey \nContainsKey \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TryFind \nTryFind \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TryGetValue \nTryGetValue \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Item \nItem \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Create \nCreate \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.FoldIndexed \nFoldIndexed \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Iterate \nIterate \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.IterateIndexed \nIterateIndexed \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Map \nMap \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.MapIndexed \nMapIndexed \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ToList \nToList \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ToSeq \nToSeq \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Traverse \nTraverse \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TraverseIndexed \nTraverseIndexed \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Unzip \nUnzip \nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Value \nValue"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Add","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Add","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Add \nAdd \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#ContainsKey","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ContainsKey","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ContainsKey \nContainsKey \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#TryFind","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TryFind","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TryFind \nTryFind \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#TryGetValue","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TryGetValue","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TryGetValue \nTryGetValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Item","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Item","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#\u0060\u0060\u002B\u0060\u0060","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.\u0060\u0060\u002B\u0060\u0060","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.\u0060\u0060\u002B\u0060\u0060 \n\u0060\u0060\u002B\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Create","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Create","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Create \nCreate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#FoldIndexed","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.FoldIndexed","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.FoldIndexed \nFoldIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Iterate","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Iterate","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Iterate \nIterate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#IterateIndexed","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.IterateIndexed","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.IterateIndexed \nIterateIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Map","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Map","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#MapIndexed","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.MapIndexed","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.MapIndexed \nMapIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#ToList","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ToList","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#ToSeq","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ToSeq","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Traverse","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Traverse","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#TraverseIndexed","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TraverseIndexed","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.TraverseIndexed \nTraverseIndexed \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Unzip","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Unzip","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Unzip \nUnzip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptymap-2.html#Value","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Value","content":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E.Value \nValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq-1.html","title":"NonEmptySeq\u003C\u0027T\u003E","content":"NonEmptySeq\u003C\u0027T\u003E \n\n A type-safe sequence that contains at least one element.\n \nNonEmptySeq\u003C\u0027T\u003E.First \nFirst"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyseq-1.html#First","title":"NonEmptySeq\u003C\u0027T\u003E.First","content":"NonEmptySeq\u003C\u0027T\u003E.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html","title":"NonEmptySet\u003C\u0027a\u003E","content":"NonEmptySet\u003C\u0027a\u003E \n\n A type-safe set that contains at least one element.\n \nNonEmptySet\u003C\u0027a\u003E.Add \nAdd \nNonEmptySet\u003C\u0027a\u003E.Contains \nContains \nNonEmptySet\u003C\u0027a\u003E.IsProperSubsetOf \nIsProperSubsetOf \nNonEmptySet\u003C\u0027a\u003E.IsProperSupersetOf \nIsProperSupersetOf \nNonEmptySet\u003C\u0027a\u003E.IsSubsetOf \nIsSubsetOf \nNonEmptySet\u003C\u0027a\u003E.IsSupersetOf \nIsSupersetOf \nNonEmptySet\u003C\u0027a\u003E.MinimumElement \nMinimumElement \nNonEmptySet\u003C\u0027a\u003E.Count \nCount \nNonEmptySet\u003C\u0027a\u003E.MaximumElement \nMaximumElement \nNonEmptySet\u003C\u0027a\u003E.Create \nCreate \nNonEmptySet\u003C\u0027a\u003E.FoldBack \nFoldBack \nNonEmptySet\u003C\u0027a\u003E.Map \nMap \nNonEmptySet\u003C\u0027a\u003E.Reduce \nReduce \nNonEmptySet\u003C\u0027a\u003E.Return \nReturn \nNonEmptySet\u003C\u0027a\u003E.ToList \nToList \nNonEmptySet\u003C\u0027a\u003E.ToSeq \nToSeq \nNonEmptySet\u003C\u0027a\u003E.(\u002B) \n(\u002B) \nNonEmptySet\u003C\u0027a\u003E.Value \nValue"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Add","title":"NonEmptySet\u003C\u0027a\u003E.Add","content":"NonEmptySet\u003C\u0027a\u003E.Add \nAdd \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Contains","title":"NonEmptySet\u003C\u0027a\u003E.Contains","content":"NonEmptySet\u003C\u0027a\u003E.Contains \nContains \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#IsProperSubsetOf","title":"NonEmptySet\u003C\u0027a\u003E.IsProperSubsetOf","content":"NonEmptySet\u003C\u0027a\u003E.IsProperSubsetOf \nIsProperSubsetOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#IsProperSupersetOf","title":"NonEmptySet\u003C\u0027a\u003E.IsProperSupersetOf","content":"NonEmptySet\u003C\u0027a\u003E.IsProperSupersetOf \nIsProperSupersetOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#IsSubsetOf","title":"NonEmptySet\u003C\u0027a\u003E.IsSubsetOf","content":"NonEmptySet\u003C\u0027a\u003E.IsSubsetOf \nIsSubsetOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#IsSupersetOf","title":"NonEmptySet\u003C\u0027a\u003E.IsSupersetOf","content":"NonEmptySet\u003C\u0027a\u003E.IsSupersetOf \nIsSupersetOf \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#MinimumElement","title":"NonEmptySet\u003C\u0027a\u003E.MinimumElement","content":"NonEmptySet\u003C\u0027a\u003E.MinimumElement \nMinimumElement \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Count","title":"NonEmptySet\u003C\u0027a\u003E.Count","content":"NonEmptySet\u003C\u0027a\u003E.Count \nCount \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#MaximumElement","title":"NonEmptySet\u003C\u0027a\u003E.MaximumElement","content":"NonEmptySet\u003C\u0027a\u003E.MaximumElement \nMaximumElement \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Create","title":"NonEmptySet\u003C\u0027a\u003E.Create","content":"NonEmptySet\u003C\u0027a\u003E.Create \nCreate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#FoldBack","title":"NonEmptySet\u003C\u0027a\u003E.FoldBack","content":"NonEmptySet\u003C\u0027a\u003E.FoldBack \nFoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Map","title":"NonEmptySet\u003C\u0027a\u003E.Map","content":"NonEmptySet\u003C\u0027a\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Reduce","title":"NonEmptySet\u003C\u0027a\u003E.Reduce","content":"NonEmptySet\u003C\u0027a\u003E.Reduce \nReduce \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Return","title":"NonEmptySet\u003C\u0027a\u003E.Return","content":"NonEmptySet\u003C\u0027a\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#ToList","title":"NonEmptySet\u003C\u0027a\u003E.ToList","content":"NonEmptySet\u003C\u0027a\u003E.ToList \nToList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#ToSeq","title":"NonEmptySet\u003C\u0027a\u003E.ToSeq","content":"NonEmptySet\u003C\u0027a\u003E.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#(\u002B)","title":"NonEmptySet\u003C\u0027a\u003E.(\u002B)","content":"NonEmptySet\u003C\u0027a\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nonemptyset-1.html#Value","title":"NonEmptySet\u003C\u0027a\u003E.Value","content":"NonEmptySet\u003C\u0027a\u003E.Value \nValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E \n\n Monad Transformer for Option\u003C\u0027T\u003E\n \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Listen \nListen \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Map \nMap \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Pass \nPass \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Put \nPut \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Tell \nTell \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Zero \nget_Zero \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u002B) \n(\u002B) \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nOptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.OptionT \nOptionT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#CallCC","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.CallCC","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Catch","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Catch","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Delay","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Delay","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Lift","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Lift2","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift2","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Lift3","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift3","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#LiftAsync","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.LiftAsync","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Listen","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Listen","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Local","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Local","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Map","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Map","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Pass","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Pass","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Put","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Put","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Return","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Return","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Tell","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Tell","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Throw","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Throw","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#TryFinally","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.TryFinally","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#TryWith","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.TryWith","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#Using","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Using","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#get_Ask","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Ask","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#get_Empty","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Empty","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#get_Get","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Get","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#get_Zero","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Zero","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#(\u002B)","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u002B)","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#(\u003E=\u003E)","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003E=\u003E)","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Option functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#(\u003E\u003E=)","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=)","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#(\u003C|\u003E)","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E)","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#(\u003C*\u003E)","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E)","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-optiont-1.html#OptionT","title":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.OptionT","content":"OptionT\u003C\u0027monad\u003Coption\u003C\u0027t\u003E\u003E\u003E.OptionT \nOptionT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html","title":"ParallelArray\u003C\u0027t\u003E","content":"ParallelArray\u003C\u0027t\u003E \n\n Array with an Applicative functor based on zipping and parallel execution.\n \nParallelArray\u003C\u0027t\u003E.Lift2 \nLift2 \nParallelArray\u003C\u0027t\u003E.Lift3 \nLift3 \nParallelArray\u003C\u0027t\u003E.Map \nMap \nParallelArray\u003C\u0027t\u003E.Return \nReturn \nParallelArray\u003C\u0027t\u003E.get_Zero \nget_Zero \nParallelArray\u003C\u0027t\u003E.(\u002B) \n(\u002B) \nParallelArray\u003C\u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nParallelArray\u003C\u0027t\u003E.Infinite \nInfinite \nParallelArray\u003C\u0027t\u003E.Bounded \nBounded"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#Lift2","title":"ParallelArray\u003C\u0027t\u003E.Lift2","content":"ParallelArray\u003C\u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#Lift3","title":"ParallelArray\u003C\u0027t\u003E.Lift3","content":"ParallelArray\u003C\u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#Map","title":"ParallelArray\u003C\u0027t\u003E.Map","content":"ParallelArray\u003C\u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#Return","title":"ParallelArray\u003C\u0027t\u003E.Return","content":"ParallelArray\u003C\u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#get_Zero","title":"ParallelArray\u003C\u0027t\u003E.get_Zero","content":"ParallelArray\u003C\u0027t\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#(\u002B)","title":"ParallelArray\u003C\u0027t\u003E.(\u002B)","content":"ParallelArray\u003C\u0027t\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#(\u003C*\u003E)","title":"ParallelArray\u003C\u0027t\u003E.(\u003C*\u003E)","content":"ParallelArray\u003C\u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#Infinite","title":"ParallelArray\u003C\u0027t\u003E.Infinite","content":"ParallelArray\u003C\u0027t\u003E.Infinite \nInfinite \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parallelarray-1.html#Bounded","title":"ParallelArray\u003C\u0027t\u003E.Bounded","content":"ParallelArray\u003C\u0027t\u003E.Bounded \nBounded \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html","title":"Reader\u003C\u0027r, \u0027t\u003E","content":"Reader\u003C\u0027r, \u0027t\u003E \n Computation type: Computations which read values from a shared environment.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Binding strategy: Monad values are functions from the environment to a value. The bound function is applied to the bound value, and both have access to the shared environment.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Useful for: Maintaining variable bindings, or other shared environment. \nReader\u003C\u0027r, \u0027t\u003E.Delay \nDelay \nReader\u003C\u0027r, \u0027t\u003E.Extract \nExtract \nReader\u003C\u0027r, \u0027t\u003E.Lift2 \nLift2 \nReader\u003C\u0027r, \u0027t\u003E.Lift3 \nLift3 \nReader\u003C\u0027r, \u0027t\u003E.Local \nLocal \nReader\u003C\u0027r, \u0027t\u003E.Map \nMap \nReader\u003C\u0027r, \u0027t\u003E.Return \nReturn \nReader\u003C\u0027r, \u0027t\u003E.TryFinally \nTryFinally \nReader\u003C\u0027r, \u0027t\u003E.TryWith \nTryWith \nReader\u003C\u0027r, \u0027t\u003E.Using \nUsing \nReader\u003C\u0027r, \u0027t\u003E.Zip \nZip \nReader\u003C\u0027r, \u0027t\u003E.get_Ask \nget_Ask \nReader\u003C\u0027r, \u0027t\u003E.(=\u003E\u003E) \n(=\u003E\u003E) \nReader\u003C\u0027r, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nReader\u003C\u0027r, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nReader\u003C\u0027r, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \nReader\u003C\u0027r, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nReader\u003C\u0027r, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \nReader\u003C\u0027r, \u0027t\u003E.Reader \nReader"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Delay","title":"Reader\u003C\u0027r, \u0027t\u003E.Delay","content":"Reader\u003C\u0027r, \u0027t\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Extract","title":"Reader\u003C\u0027r, \u0027t\u003E.Extract","content":"Reader\u003C\u0027r, \u0027t\u003E.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Lift2","title":"Reader\u003C\u0027r, \u0027t\u003E.Lift2","content":"Reader\u003C\u0027r, \u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Lift3","title":"Reader\u003C\u0027r, \u0027t\u003E.Lift3","content":"Reader\u003C\u0027r, \u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Local","title":"Reader\u003C\u0027r, \u0027t\u003E.Local","content":"Reader\u003C\u0027r, \u0027t\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Map","title":"Reader\u003C\u0027r, \u0027t\u003E.Map","content":"Reader\u003C\u0027r, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Return","title":"Reader\u003C\u0027r, \u0027t\u003E.Return","content":"Reader\u003C\u0027r, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#TryFinally","title":"Reader\u003C\u0027r, \u0027t\u003E.TryFinally","content":"Reader\u003C\u0027r, \u0027t\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#TryWith","title":"Reader\u003C\u0027r, \u0027t\u003E.TryWith","content":"Reader\u003C\u0027r, \u0027t\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Using","title":"Reader\u003C\u0027r, \u0027t\u003E.Using","content":"Reader\u003C\u0027r, \u0027t\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Zip","title":"Reader\u003C\u0027r, \u0027t\u003E.Zip","content":"Reader\u003C\u0027r, \u0027t\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#get_Ask","title":"Reader\u003C\u0027r, \u0027t\u003E.get_Ask","content":"Reader\u003C\u0027r, \u0027t\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#(=\u003E\u003E)","title":"Reader\u003C\u0027r, \u0027t\u003E.(=\u003E\u003E)","content":"Reader\u003C\u0027r, \u0027t\u003E.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#(\u003E\u003E=)","title":"Reader\u003C\u0027r, \u0027t\u003E.(\u003E\u003E=)","content":"Reader\u003C\u0027r, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#(\u003C!\u003E)","title":"Reader\u003C\u0027r, \u0027t\u003E.(\u003C!\u003E)","content":"Reader\u003C\u0027r, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Reader. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#( \u003C* )","title":"Reader\u003C\u0027r, \u0027t\u003E.( \u003C* )","content":"Reader\u003C\u0027r, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Readers left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#(\u003C*\u003E)","title":"Reader\u003C\u0027r, \u0027t\u003E.(\u003C*\u003E)","content":"Reader\u003C\u0027r, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#( *\u003E )","title":"Reader\u003C\u0027r, \u0027t\u003E.( *\u003E )","content":"Reader\u003C\u0027r, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Readers left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-reader-2.html#Reader","title":"Reader\u003C\u0027r, \u0027t\u003E.Reader","content":"Reader\u003C\u0027r, \u0027t\u003E.Reader \nReader \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E \n\n Monad Transformer for Reader\u003C\u0027R, \u0027T\u003E\n \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.CallCC \nCallCC \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Catch \nCatch \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift \nLift \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift2 \nLift2 \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift3 \nLift3 \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.LiftAsync \nLiftAsync \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Listen \nListen \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Local \nLocal \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Map \nMap \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Pass \nPass \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Put \nPut \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Return \nReturn \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Tell \nTell \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Throw \nThrow \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.TryFinally \nTryFinally \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.TryWith \nTryWith \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Using \nUsing \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Zip \nZip \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Ask \nget_Ask \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Empty \nget_Empty \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Get \nget_Get \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.( \u003C* ) \n( \u003C* ) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.( *\u003E ) \n( *\u003E ) \nReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.ReaderT \nReaderT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#CallCC","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.CallCC","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Catch","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Catch","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Delay","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Delay","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Lift","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Lift2","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift2","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Lift3","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift3","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#LiftAsync","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.LiftAsync","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Listen","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Listen","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Local","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Local","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Map","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Map","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Pass","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Pass","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Put","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Put","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Return","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Return","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Tell","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Tell","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Throw","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Throw","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#TryFinally","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.TryFinally","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#TryWith","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.TryWith","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Using","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Using","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#Zip","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Zip","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#get_Ask","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Ask","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#get_Empty","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Empty","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#get_Get","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Get","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#(\u003E=\u003E)","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E=\u003E)","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Reader functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#(\u003E=\u003E)","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E=\u003E)","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Reader functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#(\u003E\u003E=)","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E\u003E=)","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n\n Takes a Reader value and a function from a plain type to a Reader value, and returns a new Reader value.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#(\u003C!\u003E)","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C!\u003E)","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a ReaderT. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#(\u003C|\u003E)","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C|\u003E)","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#( \u003C* )","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.( \u003C* )","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Readers left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#(\u003C*\u003E)","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C*\u003E)","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#( *\u003E )","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.( *\u003E )","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Readers left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-readert-2.html#ReaderT","title":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.ReaderT","content":"ReaderT\u003C\u0027r, \u0027monad\u003C\u0027t\u003E\u003E.ReaderT \nReaderT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E \n\n Monad Transformer for Result\u003C\u0027T, \u0027E\u003E\n \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.CallCC \nCallCC \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Catch \nCatch \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Delay \nDelay \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift \nLift \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift2 \nLift2 \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift3 \nLift3 \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.LiftAsync \nLiftAsync \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Listen \nListen \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Local \nLocal \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Map \nMap \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Pass \nPass \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Put \nPut \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Return \nReturn \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Tell \nTell \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Throw \nThrow \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryFinally \nTryFinally \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryWith \nTryWith \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Using \nUsing \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Ask \nget_Ask \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Empty \nget_Empty \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Get \nget_Get \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Zero \nget_Zero \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u002B) \n(\u002B) \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.ResultT \nResultT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#CallCC","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.CallCC","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Catch","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Catch","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Delay","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Delay","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Lift","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Lift2","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift2","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Lift3","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift3","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#LiftAsync","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.LiftAsync","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Listen","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Listen","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Local","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Local","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Map","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Map","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Pass","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Pass","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Put","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Put","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Return","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Return","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Tell","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Tell","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Throw","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Throw","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#TryFinally","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryFinally","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#TryWith","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryWith","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#Using","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Using","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#get_Ask","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Ask","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#get_Empty","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Empty","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#get_Get","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Get","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#get_Zero","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Zero","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#(\u002B)","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u002B)","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#(\u003E=\u003E)","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E=\u003E)","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Result functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#(\u003E\u003E=)","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E\u003E=)","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#(\u003C|\u003E)","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C|\u003E)","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#(\u003C*\u003E)","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C*\u003E)","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-resultt-1.html#ResultT","title":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.ResultT","content":"ResultT\u003C\u0027monad\u003CResult\u003C\u0027t,\u0027e\u003E\u003E\u003E.ResultT \nResultT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E \n \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Map \nMap \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Put \nPut \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nSeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.SeqT \nSeqT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#CallCC","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.CallCC","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Catch","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Catch","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Delay","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Delay","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Lift","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Lift2","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift2","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Lift3","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift3","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#LiftAsync","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.LiftAsync","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Local","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Local","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Map","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Map","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Put","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Put","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Return","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Return","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Throw","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Throw","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#TryFinally","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.TryFinally","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#TryWith","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.TryWith","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#Using","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Using","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#get_Ask","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Ask","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#get_Empty","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Empty","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#get_Get","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Get","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#(\u003E\u003E=)","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=)","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#(\u003C|\u003E)","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E)","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#(\u003C*\u003E)","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E)","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-1.html#SeqT","title":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.SeqT","content":"SeqT\u003C\u0027monad\u003Cseq\u003C\u0027t\u003E\u003E\u003E.SeqT \nSeqT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E \n \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.CallCC \nCallCC \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Catch \nCatch \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Delay \nDelay \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Drop \nDrop \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift \nLift \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift2 \nLift2 \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift3 \nLift3 \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.LiftAsync \nLiftAsync \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Limit \nLimit \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Local \nLocal \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Map \nMap \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.OfSeq \nOfSeq \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Put \nPut \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Return \nReturn \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Skip \nSkip \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Take \nTake \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Throw \nThrow \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.TryFinally \nTryFinally \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.TryWith \nTryWith \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Using \nUsing \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Zip \nZip \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Ask \nget_Ask \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Empty \nget_Empty \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Get \nget_Get \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \nSeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.SeqT \nSeqT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#CallCC","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.CallCC","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Catch","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Catch","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Delay","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Delay","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Drop","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Drop","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Drop \nDrop \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Lift","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Lift2","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift2","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Lift3","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift3","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#LiftAsync","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.LiftAsync","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Limit","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Limit","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Limit \nLimit \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Local","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Local","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Map","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Map","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#OfSeq","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.OfSeq","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.OfSeq \nOfSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Put","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Put","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Return","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Return","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Skip","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Skip","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Skip \nSkip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Take","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Take","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Take \nTake \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Throw","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Throw","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#TryFinally","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.TryFinally","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#TryWith","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.TryWith","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Using","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Using","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#Zip","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Zip","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#get_Ask","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Ask","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#get_Empty","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Empty","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#get_Get","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Get","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#(\u003E\u003E=)","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003E\u003E=)","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#(\u003C!\u003E)","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C!\u003E)","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#(\u003C|\u003E)","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C|\u003E)","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#( \u003C* )","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.( \u003C* )","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two lists left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#(\u003C*\u003E)","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C*\u003E)","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#( *\u003E )","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.( *\u003E )","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two lists left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqt-2.html#SeqT","title":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.SeqT","content":"SeqT\u003C\u0027monad\u003Cbool\u003E, \u0027t\u003E.SeqT \nSeqT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqtoperations.html","title":"SeqTOperations","content":"SeqTOperations \n \nSeqTOperations.SeqT \nSeqT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-seqtoperations.html#SeqT","title":"SeqTOperations.SeqT","content":"SeqTOperations.SeqT \nSeqT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html","title":"State\u003C\u0027s, \u0027t\u003E","content":"State\u003C\u0027s, \u0027t\u003E \n Computation type: Computations which maintain state.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E   Binding strategy: Threads a state parameter through the sequence of bound functions so that the same state value is never used twice, giving the illusion of in-place update.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E   Useful for: Building computations from sequences of operations that require a shared state.\u003C/p\u003E\n The \u003Ctypeparamref name=\u0022\u0027s\u0022 /\u003E indicates the computation state, while \u003Ctypeparamref name=\u0022\u0027t\u0022 /\u003E indicates the result. \nState\u003C\u0027s, \u0027t\u003E.Delay \nDelay \nState\u003C\u0027s, \u0027t\u003E.Lift2 \nLift2 \nState\u003C\u0027s, \u0027t\u003E.Lift3 \nLift3 \nState\u003C\u0027s, \u0027t\u003E.Map \nMap \nState\u003C\u0027s, \u0027t\u003E.Put \nPut \nState\u003C\u0027s, \u0027t\u003E.Return \nReturn \nState\u003C\u0027s, \u0027t\u003E.TryFinally \nTryFinally \nState\u003C\u0027s, \u0027t\u003E.TryWith \nTryWith \nState\u003C\u0027s, \u0027t\u003E.Using \nUsing \nState\u003C\u0027s, \u0027t\u003E.Zip \nZip \nState\u003C\u0027s, \u0027t\u003E.get_Get \nget_Get \nState\u003C\u0027s, \u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nState\u003C\u0027s, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nState\u003C\u0027s, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nState\u003C\u0027s, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \nState\u003C\u0027s, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nState\u003C\u0027s, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \nState\u003C\u0027s, \u0027t\u003E.State \nState"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Delay","title":"State\u003C\u0027s, \u0027t\u003E.Delay","content":"State\u003C\u0027s, \u0027t\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Lift2","title":"State\u003C\u0027s, \u0027t\u003E.Lift2","content":"State\u003C\u0027s, \u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Lift3","title":"State\u003C\u0027s, \u0027t\u003E.Lift3","content":"State\u003C\u0027s, \u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Map","title":"State\u003C\u0027s, \u0027t\u003E.Map","content":"State\u003C\u0027s, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Put","title":"State\u003C\u0027s, \u0027t\u003E.Put","content":"State\u003C\u0027s, \u0027t\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Return","title":"State\u003C\u0027s, \u0027t\u003E.Return","content":"State\u003C\u0027s, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#TryFinally","title":"State\u003C\u0027s, \u0027t\u003E.TryFinally","content":"State\u003C\u0027s, \u0027t\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#TryWith","title":"State\u003C\u0027s, \u0027t\u003E.TryWith","content":"State\u003C\u0027s, \u0027t\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Using","title":"State\u003C\u0027s, \u0027t\u003E.Using","content":"State\u003C\u0027s, \u0027t\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#Zip","title":"State\u003C\u0027s, \u0027t\u003E.Zip","content":"State\u003C\u0027s, \u0027t\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#get_Get","title":"State\u003C\u0027s, \u0027t\u003E.get_Get","content":"State\u003C\u0027s, \u0027t\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#(\u003E=\u003E)","title":"State\u003C\u0027s, \u0027t\u003E.(\u003E=\u003E)","content":"State\u003C\u0027s, \u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two State functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#(\u003E\u003E=)","title":"State\u003C\u0027s, \u0027t\u003E.(\u003E\u003E=)","content":"State\u003C\u0027s, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#(\u003C!\u003E)","title":"State\u003C\u0027s, \u0027t\u003E.(\u003C!\u003E)","content":"State\u003C\u0027s, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a State. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#( \u003C* )","title":"State\u003C\u0027s, \u0027t\u003E.( \u003C* )","content":"State\u003C\u0027s, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two States left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#(\u003C*\u003E)","title":"State\u003C\u0027s, \u0027t\u003E.(\u003C*\u003E)","content":"State\u003C\u0027s, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#( *\u003E )","title":"State\u003C\u0027s, \u0027t\u003E.( *\u003E )","content":"State\u003C\u0027s, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two States left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-state-2.html#State","title":"State\u003C\u0027s, \u0027t\u003E.State","content":"State\u003C\u0027s, \u0027t\u003E.State \nState \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E \n\n Monad Transformer for State\u003C\u0027S, \u0027T\u003E\n \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Catch \nCatch \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Delay \nDelay \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift \nLift \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift2 \nLift2 \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift3 \nLift3 \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.LiftAsync \nLiftAsync \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Local \nLocal \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Map \nMap \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Put \nPut \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Return \nReturn \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Throw \nThrow \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.TryFinally \nTryFinally \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.TryWith \nTryWith \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Using \nUsing \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Zip \nZip \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Ask \nget_Ask \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Empty \nget_Empty \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Get \nget_Get \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.( \u003C* ) \n( \u003C* ) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.( *\u003E ) \n( *\u003E ) \nStateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.StateT \nStateT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Catch","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Catch","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Delay","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Delay","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Lift","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Lift2","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift2","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Lift3","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift3","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#LiftAsync","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.LiftAsync","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Local","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Local","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Map","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Map","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Put","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Put","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Return","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Return","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Throw","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Throw","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#TryFinally","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.TryFinally","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#TryWith","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.TryWith","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Using","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Using","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#Zip","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Zip","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#get_Ask","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Ask","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#get_Empty","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Empty","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#get_Get","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Get","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#(\u003E=\u003E)","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003E=\u003E)","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two State functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#(\u003E\u003E=)","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003E\u003E=)","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#(\u003C!\u003E)","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C!\u003E)","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a StateT. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#(\u003C|\u003E)","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C|\u003E)","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#( \u003C* )","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.( \u003C* )","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two States left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#(\u003C*\u003E)","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C*\u003E)","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#( *\u003E )","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.( *\u003E )","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two States left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-statet-2.html#StateT","title":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.StateT","content":"StateT\u003C\u0027s, \u0027monad\u003C\u0027t * \u0027s\u003E\u003E.StateT \nStateT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html","title":"Validation\u003C\u0027error, \u0027t\u003E","content":"Validation\u003C\u0027error, \u0027t\u003E \n\n A \u0027Validation\u0027 is either a value of the type \u0027error or \u0027t, similar to \u0027Result\u0027. However,\n the \u0027Applicative\u0027 instance for \u0027Validation\u0027 accumulates errors using a \u0027Semigroup\u0027 on \u0027error.\n In contrast, the Applicative for \u0027Result\u0027 returns only the first error.\n\n A consequence of this is that \u0027Validation\u0027 is not a monad. There is no F#\u002B \u0027Bind\u0027 method since\n that would violate monad rules.\n \nValidation\u003C\u0027error, \u0027t\u003E.Bifold \nBifold \nValidation\u003C\u0027error, \u0027t\u003E.BifoldBack \nBifoldBack \nValidation\u003C\u0027error, \u0027t\u003E.BifoldMap \nBifoldMap \nValidation\u003C\u0027error, \u0027t\u003E.Bimap \nBimap \nValidation\u003C\u0027error, \u0027t\u003E.Bisequence \nBisequence \nValidation\u003C\u0027error, \u0027t\u003E.Bitraverse \nBitraverse \nValidation\u003C\u0027error, \u0027t\u003E.Lift2 \nLift2 \nValidation\u003C\u0027error, \u0027t\u003E.Lift3 \nLift3 \nValidation\u003C\u0027error, \u0027t\u003E.Map \nMap \nValidation\u003C\u0027error, \u0027t\u003E.Map2 \nMap2 \nValidation\u003C\u0027error, \u0027t\u003E.Map3 \nMap3 \nValidation\u003C\u0027error, \u0027t\u003E.Pure \nPure \nValidation\u003C\u0027error, \u0027t\u003E.Return \nReturn \nValidation\u003C\u0027error, \u0027t\u003E.Sequence \nSequence \nValidation\u003C\u0027error, \u0027t\u003E.SequenceBiApply \nSequenceBiApply \nValidation\u003C\u0027error, \u0027t\u003E.SequenceBiApply \nSequenceBiApply \nValidation\u003C\u0027error, \u0027t\u003E.Traverse \nTraverse \nValidation\u003C\u0027error, \u0027t\u003E.Zip \nZip \nValidation\u003C\u0027error, \u0027t\u003E.get_Empty \nget_Empty \nValidation\u003C\u0027error, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nValidation\u003C\u0027error, \u0027t\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nValidation\u003C\u0027error, \u0027t\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \nValidation\u003C\u0027error, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \nValidation\u003C\u0027error, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nValidation\u003C\u0027error, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \nValidation\u003C\u0027error, \u0027t\u003E.Failure \nFailure \nValidation\u003C\u0027error, \u0027t\u003E.Success \nSuccess"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Bifold","title":"Validation\u003C\u0027error, \u0027t\u003E.Bifold","content":"Validation\u003C\u0027error, \u0027t\u003E.Bifold \nBifold \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#BifoldBack","title":"Validation\u003C\u0027error, \u0027t\u003E.BifoldBack","content":"Validation\u003C\u0027error, \u0027t\u003E.BifoldBack \nBifoldBack \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#BifoldMap","title":"Validation\u003C\u0027error, \u0027t\u003E.BifoldMap","content":"Validation\u003C\u0027error, \u0027t\u003E.BifoldMap \nBifoldMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Bimap","title":"Validation\u003C\u0027error, \u0027t\u003E.Bimap","content":"Validation\u003C\u0027error, \u0027t\u003E.Bimap \nBimap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Bisequence","title":"Validation\u003C\u0027error, \u0027t\u003E.Bisequence","content":"Validation\u003C\u0027error, \u0027t\u003E.Bisequence \nBisequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Bitraverse","title":"Validation\u003C\u0027error, \u0027t\u003E.Bitraverse","content":"Validation\u003C\u0027error, \u0027t\u003E.Bitraverse \nBitraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Lift2","title":"Validation\u003C\u0027error, \u0027t\u003E.Lift2","content":"Validation\u003C\u0027error, \u0027t\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Lift3","title":"Validation\u003C\u0027error, \u0027t\u003E.Lift3","content":"Validation\u003C\u0027error, \u0027t\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Map","title":"Validation\u003C\u0027error, \u0027t\u003E.Map","content":"Validation\u003C\u0027error, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Map2","title":"Validation\u003C\u0027error, \u0027t\u003E.Map2","content":"Validation\u003C\u0027error, \u0027t\u003E.Map2 \nMap2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Map3","title":"Validation\u003C\u0027error, \u0027t\u003E.Map3","content":"Validation\u003C\u0027error, \u0027t\u003E.Map3 \nMap3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Pure","title":"Validation\u003C\u0027error, \u0027t\u003E.Pure","content":"Validation\u003C\u0027error, \u0027t\u003E.Pure \nPure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Return","title":"Validation\u003C\u0027error, \u0027t\u003E.Return","content":"Validation\u003C\u0027error, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Sequence","title":"Validation\u003C\u0027error, \u0027t\u003E.Sequence","content":"Validation\u003C\u0027error, \u0027t\u003E.Sequence \nSequence \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#SequenceBiApply","title":"Validation\u003C\u0027error, \u0027t\u003E.SequenceBiApply","content":"Validation\u003C\u0027error, \u0027t\u003E.SequenceBiApply \nSequenceBiApply \n\n Creates an array with either all Success values or the Failure ones.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#SequenceBiApply","title":"Validation\u003C\u0027error, \u0027t\u003E.SequenceBiApply","content":"Validation\u003C\u0027error, \u0027t\u003E.SequenceBiApply \nSequenceBiApply \n\n Creates a list with either all Success values or the Failure ones.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Traverse","title":"Validation\u003C\u0027error, \u0027t\u003E.Traverse","content":"Validation\u003C\u0027error, \u0027t\u003E.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Zip","title":"Validation\u003C\u0027error, \u0027t\u003E.Zip","content":"Validation\u003C\u0027error, \u0027t\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#get_Empty","title":"Validation\u003C\u0027error, \u0027t\u003E.get_Empty","content":"Validation\u003C\u0027error, \u0027t\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#(\u003C!\u003E)","title":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C!\u003E)","content":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Validator. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#(\u003C|\u003E)","title":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C|\u003E)","content":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#(\u003C.\u003E)","title":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C.\u003E)","content":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C.\u003E) \n(\u003C.\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#( \u003C* )","title":"Validation\u003C\u0027error, \u0027t\u003E.( \u003C* )","content":"Validation\u003C\u0027error, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Validations left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#(\u003C*\u003E)","title":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C*\u003E)","content":"Validation\u003C\u0027error, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#( *\u003E )","title":"Validation\u003C\u0027error, \u0027t\u003E.( *\u003E )","content":"Validation\u003C\u0027error, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Validations left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Failure","title":"Validation\u003C\u0027error, \u0027t\u003E.Failure","content":"Validation\u003C\u0027error, \u0027t\u003E.Failure \nFailure \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-validation-2.html#Success","title":"Validation\u003C\u0027error, \u0027t\u003E.Success","content":"Validation\u003C\u0027error, \u0027t\u003E.Success \nSuccess \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E \n\n Monad Transformer for ValueOption\u003C\u0027T\u003E\n \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Listen \nListen \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Map \nMap \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Pass \nPass \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Put \nPut \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Tell \nTell \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Zero \nget_Zero \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u002B) \n(\u002B) \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.ValueOptionT \nValueOptionT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#CallCC","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.CallCC","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Catch","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Catch","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Delay","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Delay","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Lift","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Lift2","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift2","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Lift3","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift3","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#LiftAsync","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.LiftAsync","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Listen","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Listen","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Local","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Local","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Map","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Map","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Pass","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Pass","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Put","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Put","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Return","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Return","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Tell","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Tell","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Throw","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Throw","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#TryFinally","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.TryFinally","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#TryWith","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.TryWith","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#Using","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Using","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#get_Ask","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Ask","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#get_Empty","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Empty","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#get_Get","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Get","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#get_Zero","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Zero","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#(\u002B)","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u002B)","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#(\u003E=\u003E)","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003E=\u003E)","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two ValueOption functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#(\u003E\u003E=)","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=)","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#(\u003C|\u003E)","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E)","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#(\u003C*\u003E)","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E)","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-valueoptiont-1.html#ValueOptionT","title":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.ValueOptionT","content":"ValueOptionT\u003C\u0027monad\u003Cvoption\u003C\u0027t\u003E\u003E\u003E.ValueOptionT \nValueOptionT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html","title":"Writer\u003C\u0027monoid, \u0027t\u003E","content":"Writer\u003C\u0027monoid, \u0027t\u003E \n Computation type: Computations which produce a stream of data in addition to the computed values.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Binding strategy: Combines the outputs of the subcomputations using \u003Ccode\u003Emappend\u003C/code\u003E.\n \u003Cp class=\u0027fsdocs-para\u0027\u003E\u003C/p\u003E   Useful for: Logging, or other computations that produce output \u0022on the side\u0022.  \nWriter\u003C\u0027monoid, \u0027t\u003E.Extract \nExtract \nWriter\u003C\u0027monoid, \u0027t\u003E.Listen \nListen \nWriter\u003C\u0027monoid, \u0027t\u003E.Map \nMap \nWriter\u003C\u0027monoid, \u0027t\u003E.Pass \nPass \nWriter\u003C\u0027monoid, \u0027t\u003E.Return \nReturn \nWriter\u003C\u0027monoid, \u0027t\u003E.Tell \nTell \nWriter\u003C\u0027monoid, \u0027t\u003E.(=\u003E\u003E) \n(=\u003E\u003E) \nWriter\u003C\u0027monoid, \u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nWriter\u003C\u0027monoid, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nWriter\u003C\u0027monoid, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nWriter\u003C\u0027monoid, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \nWriter\u003C\u0027monoid, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nWriter\u003C\u0027monoid, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \nWriter\u003C\u0027monoid, \u0027t\u003E.Writer \nWriter"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Extract","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Extract","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Extract \nExtract \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Listen","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Listen","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Map","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Map","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Pass","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Pass","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Return","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Return","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Tell","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Tell","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#(=\u003E\u003E)","title":"Writer\u003C\u0027monoid, \u0027t\u003E.(=\u003E\u003E)","content":"Writer\u003C\u0027monoid, \u0027t\u003E.(=\u003E\u003E) \n(=\u003E\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#(\u003E=\u003E)","title":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003E=\u003E)","content":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Writer functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#(\u003E\u003E=)","title":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003E\u003E=)","content":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#(\u003C!\u003E)","title":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003C!\u003E)","content":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a Writer. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#( \u003C* )","title":"Writer\u003C\u0027monoid, \u0027t\u003E.( \u003C* )","content":"Writer\u003C\u0027monoid, \u0027t\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Writers left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#(\u003C*\u003E)","title":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003C*\u003E)","content":"Writer\u003C\u0027monoid, \u0027t\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#( *\u003E )","title":"Writer\u003C\u0027monoid, \u0027t\u003E.( *\u003E )","content":"Writer\u003C\u0027monoid, \u0027t\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Writers left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writer-2.html#Writer","title":"Writer\u003C\u0027monoid, \u0027t\u003E.Writer","content":"Writer\u003C\u0027monoid, \u0027t\u003E.Writer \nWriter \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E \n\n Monad Transformer for Writer\u003C\u0027Monoid, \u0027T\u003E\n \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.CallCC \nCallCC \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Catch \nCatch \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Delay \nDelay \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift \nLift \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift2 \nLift2 \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift3 \nLift3 \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.LiftAsync \nLiftAsync \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Listen \nListen \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Local \nLocal \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Map \nMap \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Pass \nPass \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Put \nPut \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Return \nReturn \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Tell \nTell \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Throw \nThrow \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.TryFinally \nTryFinally \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.TryWith \nTryWith \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Using \nUsing \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Ask \nget_Ask \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Empty \nget_Empty \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Get \nget_Get \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.( \u003C* ) \n( \u003C* ) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.( *\u003E ) \n( *\u003E ) \nWriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.WriterT \nWriterT"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#CallCC","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.CallCC","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.CallCC \nCallCC \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Catch","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Catch","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Catch \nCatch \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Delay","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Delay","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Delay \nDelay \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Lift","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift \nLift \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Lift2","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift2","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Lift3","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift3","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#LiftAsync","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.LiftAsync","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.LiftAsync \nLiftAsync \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Listen","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Listen","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Listen \nListen \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Local","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Local","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Local \nLocal \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Map","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Map","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Pass","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Pass","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Pass \nPass \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Put","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Put","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Put \nPut \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Return","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Return","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Tell","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Tell","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Tell \nTell \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Throw","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Throw","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Throw \nThrow \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#TryFinally","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.TryFinally","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.TryFinally \nTryFinally \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#TryWith","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.TryWith","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.TryWith \nTryWith \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#Using","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Using","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.Using \nUsing \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#get_Ask","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Ask","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Ask \nget_Ask \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#get_Empty","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Empty","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#get_Get","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Get","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.get_Get \nget_Get \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#(\u003E=\u003E)","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003E=\u003E)","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003E=\u003E) \n(\u003E=\u003E) \n\n Composes left-to-right two Writer functions (Kleisli composition).\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#(\u003E\u003E=)","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003E\u003E=)","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003E\u003E=) \n(\u003E\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#(\u003C!\u003E)","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C!\u003E)","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C!\u003E) \n(\u003C!\u003E) \nLifts a function into a WriterT. Same as map.\n To be used in Applicative Style expressions, combined with \u003C*\u003E\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#(\u003C|\u003E)","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C|\u003E)","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#( \u003C* )","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.( \u003C* )","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.( \u003C* ) \n( \u003C* ) \n\n Sequences two Writers left-to-right, discarding the value of the second argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#(\u003C*\u003E)","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C*\u003E)","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#( *\u003E )","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.( *\u003E )","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.( *\u003E ) \n( *\u003E ) \n\n Sequences two Writers left-to-right, discarding the value of the first argument.\n "},{"uri":"/FSharpPlus/reference/fsharpplus-data-writert-1.html#WriterT","title":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.WriterT","content":"WriterT\u003C\u0027monad\u003C\u0027t * \u0027monoid\u003E\u003E.WriterT \nWriterT \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html","title":"ZipList\u003C\u0027s\u003E","content":"ZipList\u003C\u0027s\u003E \n\n A sequence with an Applicative functor based on zipping.\n \nZipList\u003C\u0027s\u003E.Item \nItem \nZipList\u003C\u0027s\u003E.IsLeftZero \nIsLeftZero \nZipList\u003C\u0027s\u003E.Lift2 \nLift2 \nZipList\u003C\u0027s\u003E.Lift3 \nLift3 \nZipList\u003C\u0027s\u003E.Map \nMap \nZipList\u003C\u0027s\u003E.Return \nReturn \nZipList\u003C\u0027s\u003E.ToSeq \nToSeq \nZipList\u003C\u0027s\u003E.Traverse \nTraverse \nZipList\u003C\u0027s\u003E.Zip \nZip \nZipList\u003C\u0027s\u003E.get_Empty \nget_Empty \nZipList\u003C\u0027s\u003E.get_Zero \nget_Zero \nZipList\u003C\u0027s\u003E.(\u002B) \n(\u002B) \nZipList\u003C\u0027s\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \nZipList\u003C\u0027s\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \nZipList\u003C\u0027s\u003E.ZipList \nZipList"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Item","title":"ZipList\u003C\u0027s\u003E.Item","content":"ZipList\u003C\u0027s\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#IsLeftZero","title":"ZipList\u003C\u0027s\u003E.IsLeftZero","content":"ZipList\u003C\u0027s\u003E.IsLeftZero \nIsLeftZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Lift2","title":"ZipList\u003C\u0027s\u003E.Lift2","content":"ZipList\u003C\u0027s\u003E.Lift2 \nLift2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Lift3","title":"ZipList\u003C\u0027s\u003E.Lift3","content":"ZipList\u003C\u0027s\u003E.Lift3 \nLift3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Map","title":"ZipList\u003C\u0027s\u003E.Map","content":"ZipList\u003C\u0027s\u003E.Map \nMap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Return","title":"ZipList\u003C\u0027s\u003E.Return","content":"ZipList\u003C\u0027s\u003E.Return \nReturn \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#ToSeq","title":"ZipList\u003C\u0027s\u003E.ToSeq","content":"ZipList\u003C\u0027s\u003E.ToSeq \nToSeq \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Traverse","title":"ZipList\u003C\u0027s\u003E.Traverse","content":"ZipList\u003C\u0027s\u003E.Traverse \nTraverse \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#Zip","title":"ZipList\u003C\u0027s\u003E.Zip","content":"ZipList\u003C\u0027s\u003E.Zip \nZip \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#get_Empty","title":"ZipList\u003C\u0027s\u003E.get_Empty","content":"ZipList\u003C\u0027s\u003E.get_Empty \nget_Empty \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#get_Zero","title":"ZipList\u003C\u0027s\u003E.get_Zero","content":"ZipList\u003C\u0027s\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#(\u002B)","title":"ZipList\u003C\u0027s\u003E.(\u002B)","content":"ZipList\u003C\u0027s\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#(\u003C|\u003E)","title":"ZipList\u003C\u0027s\u003E.(\u003C|\u003E)","content":"ZipList\u003C\u0027s\u003E.(\u003C|\u003E) \n(\u003C|\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#(\u003C*\u003E)","title":"ZipList\u003C\u0027s\u003E.(\u003C*\u003E)","content":"ZipList\u003C\u0027s\u003E.(\u003C*\u003E) \n(\u003C*\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-ziplist-1.html#ZipList","title":"ZipList\u003C\u0027s\u003E.ZipList","content":"ZipList\u003C\u0027s\u003E.ZipList \nZipList \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nelist-1.html","title":"nelist\u003C\u0027t\u003E","content":"nelist\u003C\u0027t\u003E \n\n A type alias for NonEmptyList\u003C\u0027t\u003E\n \nnelist\u003C\u0027t\u003E.Length \nLength \nnelist\u003C\u0027t\u003E.tail \ntail \nnelist\u003C\u0027t\u003E.head \nhead \nnelist\u003C\u0027t\u003E.GetSlice \nGetSlice \nnelist\u003C\u0027t\u003E.Item \nItem"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nelist-1.html#Length","title":"nelist\u003C\u0027t\u003E.Length","content":"nelist\u003C\u0027t\u003E.Length \nLength \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nelist-1.html#tail","title":"nelist\u003C\u0027t\u003E.tail","content":"nelist\u003C\u0027t\u003E.tail \ntail \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nelist-1.html#head","title":"nelist\u003C\u0027t\u003E.head","content":"nelist\u003C\u0027t\u003E.head \nhead \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nelist-1.html#GetSlice","title":"nelist\u003C\u0027t\u003E.GetSlice","content":"nelist\u003C\u0027t\u003E.GetSlice \nGetSlice \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nelist-1.html#Item","title":"nelist\u003C\u0027t\u003E.Item","content":"nelist\u003C\u0027t\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nemap-2.html","title":"nemap\u003C\u0027Key, \u0027Value\u003E","content":"nemap\u003C\u0027Key, \u0027Value\u003E \n\n A type alias for NonEmptyMap\u003C\u0027Key,\u0027Value\u003E\n \nnemap\u003C\u0027Key, \u0027Value\u003E.Item \nItem"},{"uri":"/FSharpPlus/reference/fsharpplus-data-nemap-2.html#Item","title":"nemap\u003C\u0027Key, \u0027Value\u003E.Item","content":"nemap\u003C\u0027Key, \u0027Value\u003E.Item \nItem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-neseq-1.html","title":"neseq\u003C\u0027t\u003E","content":"neseq\u003C\u0027t\u003E \n\n A type alias for NonEmptySeq\u003C\u0027t\u003E\n \nneseq\u003C\u0027t\u003E.First \nFirst"},{"uri":"/FSharpPlus/reference/fsharpplus-data-neseq-1.html#First","title":"neseq\u003C\u0027t\u003E.First","content":"neseq\u003C\u0027t\u003E.First \nFirst \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-neset-1.html","title":"neset\u003C\u0027t\u003E","content":"neset\u003C\u0027t\u003E \n\n A type alias for NonEmptySet\u003C\u0027t\u003E\n \nneset\u003C\u0027t\u003E.MinimumElement \nMinimumElement \nneset\u003C\u0027t\u003E.Count \nCount \nneset\u003C\u0027t\u003E.MaximumElement \nMaximumElement"},{"uri":"/FSharpPlus/reference/fsharpplus-data-neset-1.html#MinimumElement","title":"neset\u003C\u0027t\u003E.MinimumElement","content":"neset\u003C\u0027t\u003E.MinimumElement \nMinimumElement \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-neset-1.html#Count","title":"neset\u003C\u0027t\u003E.Count","content":"neset\u003C\u0027t\u003E.Count \nCount \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-neset-1.html#MaximumElement","title":"neset\u003C\u0027t\u003E.MaximumElement","content":"neset\u003C\u0027t\u003E.MaximumElement \nMaximumElement \n"},{"uri":"/FSharpPlus/reference/fsharpplus-data-parray-1.html","title":"parray\u003C\u0027t\u003E","content":"parray\u003C\u0027t\u003E \n\n A type alias for ParallelArray\u003C\u0027T\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-biginteger.html","title":"BigInteger","content":"BigInteger \n \nBigInteger.trySqrtRem \ntrySqrtRem"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-biginteger.html#trySqrtRem","title":"BigInteger.trySqrtRem","content":"BigInteger.trySqrtRem \ntrySqrtRem \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-constraints.html","title":"Constraints","content":"Constraints \n \nConstraints.whenNestedTuple \nwhenNestedTuple"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-constraints.html#whenNestedTuple","title":"Constraints.whenNestedTuple","content":"Constraints.whenNestedTuple \nwhenNestedTuple \n\n Constrain \u0027t to be a nested tuple of \u003C\u0027t1,\u0027t2,\u0027t3,\u0027t4,\u0027t5,\u0027t6,\u0027t7,\u0027tr\u003E\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-decimal.html","title":"Decimal","content":"Decimal \n \nDecimal.trySqrt \ntrySqrt"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-decimal.html#trySqrt","title":"Decimal.trySqrt","content":"Decimal.trySqrt \ntrySqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html","title":"Errors","content":"Errors \n \nErrors.exnDivByZero \nexnDivByZero \nErrors.exnNoDivision \nexnNoDivision \nErrors.exnSqrtOfNegative \nexnSqrtOfNegative \nErrors.exnNoSqrt \nexnNoSqrt \nErrors.exnNoSubtraction \nexnNoSubtraction \nErrors.exnUnreachable \nexnUnreachable \nErrors.raiseIfNull \nraiseIfNull"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#exnDivByZero","title":"Errors.exnDivByZero","content":"Errors.exnDivByZero \nexnDivByZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#exnNoDivision","title":"Errors.exnNoDivision","content":"Errors.exnNoDivision \nexnNoDivision \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#exnSqrtOfNegative","title":"Errors.exnSqrtOfNegative","content":"Errors.exnSqrtOfNegative \nexnSqrtOfNegative \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#exnNoSqrt","title":"Errors.exnNoSqrt","content":"Errors.exnNoSqrt \nexnNoSqrt \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#exnNoSubtraction","title":"Errors.exnNoSubtraction","content":"Errors.exnNoSubtraction \nexnNoSubtraction \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#exnUnreachable","title":"Errors.exnUnreachable","content":"Errors.exnUnreachable \nexnUnreachable \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-errors.html#raiseIfNull","title":"Errors.raiseIfNull","content":"Errors.raiseIfNull \nraiseIfNull \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findlastsliceindex.html","title":"FindLastSliceIndex","content":"FindLastSliceIndex \n \nFindLastSliceIndex.seqImpl \nseqImpl \nFindLastSliceIndex.sequenceEqual \nsequenceEqual \nFindLastSliceIndex.listImpl \nlistImpl \nFindLastSliceIndex.arrayImpl \narrayImpl"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findlastsliceindex.html#seqImpl","title":"FindLastSliceIndex.seqImpl","content":"FindLastSliceIndex.seqImpl \nseqImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findlastsliceindex.html#sequenceEqual","title":"FindLastSliceIndex.sequenceEqual","content":"FindLastSliceIndex.sequenceEqual \nsequenceEqual \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findlastsliceindex.html#listImpl","title":"FindLastSliceIndex.listImpl","content":"FindLastSliceIndex.listImpl \nlistImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findlastsliceindex.html#arrayImpl","title":"FindLastSliceIndex.arrayImpl","content":"FindLastSliceIndex.arrayImpl \narrayImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findsliceindex.html","title":"FindSliceIndex","content":"FindSliceIndex \n \nFindSliceIndex.seqImpl \nseqImpl \nFindSliceIndex.sequenceEqual \nsequenceEqual \nFindSliceIndex.listImpl \nlistImpl \nFindSliceIndex.arrayImpl \narrayImpl"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findsliceindex.html#seqImpl","title":"FindSliceIndex.seqImpl","content":"FindSliceIndex.seqImpl \nseqImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findsliceindex.html#sequenceEqual","title":"FindSliceIndex.sequenceEqual","content":"FindSliceIndex.sequenceEqual \nsequenceEqual \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findsliceindex.html#listImpl","title":"FindSliceIndex.listImpl","content":"FindSliceIndex.listImpl \nlistImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-findsliceindex.html#arrayImpl","title":"FindSliceIndex.arrayImpl","content":"FindSliceIndex.arrayImpl \narrayImpl \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id.html","title":"Id","content":"Id \n \nId.run \nrun \nId.map \nmap \nId.create \ncreate"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id.html#run","title":"Id.run","content":"Id.run \nrun \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id.html#map","title":"Id.map","content":"Id.map \nmap \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id.html#create","title":"Id.create","content":"Id.create \ncreate \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-rational.html","title":"Rational","content":"Rational \n \nRational.numerator \nnumerator \nRational.denominator \ndenominator"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-rational.html#numerator","title":"Rational.numerator","content":"Rational.numerator \nnumerator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-rational.html#denominator","title":"Rational.denominator","content":"Rational.denominator \ndenominator \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html","title":"BitConverter","content":"BitConverter \n \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.GetBytes \nGetBytes \nBitConverter.ToChar \nToChar \nBitConverter.ToDouble \nToDouble \nBitConverter.ToGuid \nToGuid \nBitConverter.ToInt16 \nToInt16 \nBitConverter.ToInt32 \nToInt32 \nBitConverter.ToInt64 \nToInt64 \nBitConverter.ToSingle \nToSingle \nBitConverter.ToString \nToString \nBitConverter.ToString \nToString \nBitConverter.ToString \nToString \nBitConverter.ToUInt16 \nToUInt16 \nBitConverter.ToUInt32 \nToUInt32 \nBitConverter.ToUInt64 \nToUInt64"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a Guid into an array of bytes with length\n eight.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a double into an array of bytes with length\n eight.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a float into an array of bytes with length\n four.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts an unsigned long into an array of bytes with\n length eight.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts an uint into an array of bytes with\n length four.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts an ushort into an array of bytes with\n length two.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a long into an array of bytes with length\n eight.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts an int into an array of bytes with length\n four.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a short into an array of bytes with length\n two.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a char into an array of bytes with length two.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#GetBytes","title":"BitConverter.GetBytes","content":"BitConverter.GetBytes \nGetBytes \n\n Converts a byte into an array of bytes with length one.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToChar","title":"BitConverter.ToChar","content":"BitConverter.ToChar \nToChar \n\n Converts an array of bytes into a char.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToDouble","title":"BitConverter.ToDouble","content":"BitConverter.ToDouble \nToDouble \n\n Converts an array of bytes into a double.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToGuid","title":"BitConverter.ToGuid","content":"BitConverter.ToGuid \nToGuid \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToInt16","title":"BitConverter.ToInt16","content":"BitConverter.ToInt16 \nToInt16 \n\n Converts an array of bytes into a short.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToInt32","title":"BitConverter.ToInt32","content":"BitConverter.ToInt32 \nToInt32 \n\n Converts an array of bytes into an int.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToInt64","title":"BitConverter.ToInt64","content":"BitConverter.ToInt64 \nToInt64 \n\n Converts an array of bytes into a long.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToSingle","title":"BitConverter.ToSingle","content":"BitConverter.ToSingle \nToSingle \n\n Converts an array of bytes into a float.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToString","title":"BitConverter.ToString","content":"BitConverter.ToString \nToString \n\n Converts an array of bytes into a String.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToString","title":"BitConverter.ToString","content":"BitConverter.ToString \nToString \n\n Converts an array of bytes into a String.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToString","title":"BitConverter.ToString","content":"BitConverter.ToString \nToString \n\n Converts an array of bytes into a String.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToUInt16","title":"BitConverter.ToUInt16","content":"BitConverter.ToUInt16 \nToUInt16 \n\n Converts an array of bytes into an ushort.\n\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToUInt32","title":"BitConverter.ToUInt32","content":"BitConverter.ToUInt32 \nToUInt32 \n\n Converts an array of bytes into an uint.\n\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-bitconverter.html#ToUInt64","title":"BitConverter.ToUInt64","content":"BitConverter.ToUInt64 \nToUInt64 \n\n Converts an array of bytes into an unsigned long.\n\n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-default1.html","title":"Default1","content":"Default1 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-default2.html","title":"Default2","content":"Default2 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-default3.html","title":"Default3","content":"Default3 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-default4.html","title":"Default4","content":"Default4 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-default5.html","title":"Default5","content":"Default5 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-default6.html","title":"Default6","content":"Default6 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-dmstruct.html","title":"DmStruct","content":"DmStruct \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-dmstruct1-1.html","title":"DmStruct1\u003C\u0027T1\u003E","content":"DmStruct1\u003C\u0027T1\u003E \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-either-2.html","title":"Either\u003C\u0027t, \u0027u\u003E","content":"Either\u003C\u0027t, \u0027u\u003E \n \nEither\u003C\u0027t, \u0027u\u003E.Left \nLeft \nEither\u003C\u0027t, \u0027u\u003E.Right \nRight"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-either-2.html#Left","title":"Either\u003C\u0027t, \u0027u\u003E.Left","content":"Either\u003C\u0027t, \u0027u\u003E.Left \nLeft \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-either-2.html#Right","title":"Either\u003C\u0027t, \u0027u\u003E.Right","content":"Either\u003C\u0027t, \u0027u\u003E.Right \nRight \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id-1.html","title":"Id\u003C\u0027t\u003E","content":"Id\u003C\u0027t\u003E \n \nId\u003C\u0027t\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nId\u003C\u0027t\u003E.getValue \ngetValue"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id-1.html#\u0060\u0060.ctor\u0060\u0060","title":"Id\u003C\u0027t\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Id\u003C\u0027t\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id-1.html#getValue","title":"Id\u003C\u0027t\u003E.getValue","content":"Id\u003C\u0027t\u003E.getValue \ngetValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id0.html","title":"Id0","content":"Id0 \n \nId0.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nId0.getValue \ngetValue"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id0.html#\u0060\u0060.ctor\u0060\u0060","title":"Id0.\u0060\u0060.ctor\u0060\u0060","content":"Id0.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-id0.html#getValue","title":"Id0.getValue","content":"Id0.getValue \ngetValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-keyvaluepair2-2.html","title":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E","content":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E \n \nKeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nKeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.Key \nKey \nKeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.Value \nValue"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-keyvaluepair2-2.html#\u0060\u0060.ctor\u0060\u0060","title":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.\u0060\u0060.ctor\u0060\u0060","content":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-keyvaluepair2-2.html#Key","title":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.Key","content":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.Key \nKey \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-keyvaluepair2-2.html#Value","title":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.Value","content":"KeyValuePair2\u003C\u0027TKey, \u0027TValue\u003E.Value \nValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-set2-1.html","title":"Set2\u003C\u0027T\u003E","content":"Set2\u003C\u0027T\u003E \n \nSet2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-set2-1.html#\u0060\u0060.ctor\u0060\u0060","title":"Set2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Set2\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_dual-1.html","title":"_Dual\u003C\u0027T\u003E","content":"_Dual\u003C\u0027T\u003E \n \n_Dual\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n_Dual\u003C\u0027T\u003E.get_Zero \nget_Zero \n_Dual\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n_Dual\u003C\u0027T\u003E.Value \nValue"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_dual-1.html#\u0060\u0060.ctor\u0060\u0060","title":"_Dual\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"_Dual\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_dual-1.html#get_Zero","title":"_Dual\u003C\u0027T\u003E.get_Zero","content":"_Dual\u003C\u0027T\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_dual-1.html#(\u002B)","title":"_Dual\u003C\u0027T\u003E.(\u002B)","content":"_Dual\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_dual-1.html#Value","title":"_Dual\u003C\u0027T\u003E.Value","content":"_Dual\u003C\u0027T\u003E.Value \nValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_endo-1.html","title":"_Endo\u003C\u0027T\u003E","content":"_Endo\u003C\u0027T\u003E \n \n_Endo\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n_Endo\u003C\u0027T\u003E.get_Zero \nget_Zero \n_Endo\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n_Endo\u003C\u0027T\u003E.Value \nValue"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_endo-1.html#\u0060\u0060.ctor\u0060\u0060","title":"_Endo\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"_Endo\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_endo-1.html#get_Zero","title":"_Endo\u003C\u0027T\u003E.get_Zero","content":"_Endo\u003C\u0027T\u003E.get_Zero \nget_Zero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_endo-1.html#(\u002B)","title":"_Endo\u003C\u0027T\u003E.(\u002B)","content":"_Endo\u003C\u0027T\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-internals-_endo-1.html#Value","title":"_Endo\u003C\u0027T\u003E.Value","content":"_Endo\u003C\u0027T\u003E.Value \nValue \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html","title":"Applicative","content":"Applicative \nMath Operators ready to use over Applicative Functors. \nApplicative.(~-.) \n(~-.) \nApplicative.(.\u002B) \n(.\u002B) \nApplicative.(\u002B.) \n(\u002B.) \nApplicative.(.\u002B.) \n(.\u002B.) \nApplicative.(.-) \n(.-) \nApplicative.(-.) \n(-.) \nApplicative.(.-.) \n(.-.) \nApplicative.( .* ) \n( .* ) \nApplicative.( *. ) \n( *. ) \nApplicative.(.*.) \n(.*.) \nApplicative.(.%) \n(.%) \nApplicative.(%.) \n(%.) \nApplicative.(.%.) \n(.%.) \nApplicative.(./) \n(./) \nApplicative.(/.) \n(/.) \nApplicative.(./.) \n(./.) \nApplicative.(.=) \n(.=) \nApplicative.(=.) \n(=.) \nApplicative.(.=.) \n(.=.) \nApplicative.(.\u003E) \n(.\u003E) \nApplicative.(\u003E.) \n(\u003E.) \nApplicative.(.\u003E.) \n(.\u003E.) \nApplicative.(.\u003C) \n(.\u003C) \nApplicative.(\u003C.) \n(\u003C.) \nApplicative.(.\u003C.) \n(.\u003C.) \nApplicative.(.||) \n(.||) \nApplicative.(||.) \n(||.) \nApplicative.(.||.) \n(.||.) \nApplicative.(.\u0026\u0026) \n(.\u0026\u0026) \nApplicative.(\u0026\u0026.) \n(\u0026\u0026.) \nApplicative.(.\u0026\u0026.) \n(.\u0026\u0026.) \nApplicative.(.\u003C=) \n(.\u003C=) \nApplicative.(\u003C=.) \n(\u003C=.) \nApplicative.(.\u003C=.) \n(.\u003C=.) \nApplicative.(.\u003E=) \n(.\u003E=) \nApplicative.(\u003E=.) \n(\u003E=.) \nApplicative.(.\u003E=.) \n(.\u003E=.)"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(~-.)","title":"Applicative.(~-.)","content":"Applicative.(~-.) \n(~-.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u002B)","title":"Applicative.(.\u002B)","content":"Applicative.(.\u002B) \n(.\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(\u002B.)","title":"Applicative.(\u002B.)","content":"Applicative.(\u002B.) \n(\u002B.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u002B.)","title":"Applicative.(.\u002B.)","content":"Applicative.(.\u002B.) \n(.\u002B.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.-)","title":"Applicative.(.-)","content":"Applicative.(.-) \n(.-) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(-.)","title":"Applicative.(-.)","content":"Applicative.(-.) \n(-.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.-.)","title":"Applicative.(.-.)","content":"Applicative.(.-.) \n(.-.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#( .* )","title":"Applicative.( .* )","content":"Applicative.( .* ) \n( .* ) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#( *. )","title":"Applicative.( *. )","content":"Applicative.( *. ) \n( *. ) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.*.)","title":"Applicative.(.*.)","content":"Applicative.(.*.) \n(.*.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.%)","title":"Applicative.(.%)","content":"Applicative.(.%) \n(.%) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(%.)","title":"Applicative.(%.)","content":"Applicative.(%.) \n(%.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.%.)","title":"Applicative.(.%.)","content":"Applicative.(.%.) \n(.%.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(./)","title":"Applicative.(./)","content":"Applicative.(./) \n(./) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(/.)","title":"Applicative.(/.)","content":"Applicative.(/.) \n(/.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(./.)","title":"Applicative.(./.)","content":"Applicative.(./.) \n(./.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.=)","title":"Applicative.(.=)","content":"Applicative.(.=) \n(.=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(=.)","title":"Applicative.(=.)","content":"Applicative.(=.) \n(=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.=.)","title":"Applicative.(.=.)","content":"Applicative.(.=.) \n(.=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003E)","title":"Applicative.(.\u003E)","content":"Applicative.(.\u003E) \n(.\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(\u003E.)","title":"Applicative.(\u003E.)","content":"Applicative.(\u003E.) \n(\u003E.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003E.)","title":"Applicative.(.\u003E.)","content":"Applicative.(.\u003E.) \n(.\u003E.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003C)","title":"Applicative.(.\u003C)","content":"Applicative.(.\u003C) \n(.\u003C) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(\u003C.)","title":"Applicative.(\u003C.)","content":"Applicative.(\u003C.) \n(\u003C.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003C.)","title":"Applicative.(.\u003C.)","content":"Applicative.(.\u003C.) \n(.\u003C.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.||)","title":"Applicative.(.||)","content":"Applicative.(.||) \n(.||) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(||.)","title":"Applicative.(||.)","content":"Applicative.(||.) \n(||.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.||.)","title":"Applicative.(.||.)","content":"Applicative.(.||.) \n(.||.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u0026\u0026)","title":"Applicative.(.\u0026\u0026)","content":"Applicative.(.\u0026\u0026) \n(.\u0026\u0026) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(\u0026\u0026.)","title":"Applicative.(\u0026\u0026.)","content":"Applicative.(\u0026\u0026.) \n(\u0026\u0026.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u0026\u0026.)","title":"Applicative.(.\u0026\u0026.)","content":"Applicative.(.\u0026\u0026.) \n(.\u0026\u0026.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003C=)","title":"Applicative.(.\u003C=)","content":"Applicative.(.\u003C=) \n(.\u003C=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(\u003C=.)","title":"Applicative.(\u003C=.)","content":"Applicative.(\u003C=.) \n(\u003C=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003C=.)","title":"Applicative.(.\u003C=.)","content":"Applicative.(.\u003C=.) \n(.\u003C=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003E=)","title":"Applicative.(.\u003E=)","content":"Applicative.(.\u003E=) \n(.\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(\u003E=.)","title":"Applicative.(\u003E=.)","content":"Applicative.(\u003E=.) \n(\u003E=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-applicative.html#(.\u003E=.)","title":"Applicative.(.\u003E=.)","content":"Applicative.(.\u003E=.) \n(.\u003E=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html","title":"Generic","content":"Generic \n\n Generic numbers, functions and operators.\n By opening this module some common operators become restricted, like (\u002B) to \u0027T-\u003E\u0027T-\u003E\u0027T\n  \nGeneric.NumericLiteralG \nNumericLiteralG \nGeneric.fromIntegral \nfromIntegral \nGeneric.(\u002B) \n(\u002B) \nGeneric.(-) \n(-) \nGeneric.(*) \n(*) \nGeneric.(/) \n(/) \nGeneric.div \ndiv \nGeneric.divE \ndivE \nGeneric.rem \nrem \nGeneric.remE \nremE \nGeneric.divRemE \ndivRemE \nGeneric.gcd \ngcd"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#fromIntegral","title":"Generic.fromIntegral","content":"Generic.fromIntegral \nfromIntegral \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#(\u002B)","title":"Generic.(\u002B)","content":"Generic.(\u002B) \n(\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#(-)","title":"Generic.(-)","content":"Generic.(-) \n(-) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#(*)","title":"Generic.(*)","content":"Generic.(*) \n(*) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#(/)","title":"Generic.(/)","content":"Generic.(/) \n(/) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#div","title":"Generic.div","content":"Generic.div \ndiv \n\n Integer division. Same as (/) for Integral types.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#divE","title":"Generic.divE","content":"Generic.divE \ndivE \n\n Euclidean integer division, following the mathematical convention where the mod is always positive.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#rem","title":"Generic.rem","content":"Generic.rem \nrem \n\n Remainder of Integer division. Same as (%).\n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#remE","title":"Generic.remE","content":"Generic.remE \nremE \n\n Euclidean remainder of integer division, following the mathematical convention where the mod is always positive.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#divRemE","title":"Generic.divRemE","content":"Generic.divRemE \ndivRemE \n\n Euclidean division-remainder, following the mathematical convention where the mod is always positive.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic.html#gcd","title":"Generic.gcd","content":"Generic.gcd \ngcd \n\n Greatest Common Divisor.\n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic-numericliteralg.html","title":"NumericLiteralG","content":"NumericLiteralG \n \nNumericLiteralG.FromZero \nFromZero \nNumericLiteralG.FromOne \nFromOne \nNumericLiteralG.FromInt32 \nFromInt32 \nNumericLiteralG.FromInt64 \nFromInt64 \nNumericLiteralG.FromString \nFromString"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic-numericliteralg.html#FromZero","title":"NumericLiteralG.FromZero","content":"NumericLiteralG.FromZero \nFromZero \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic-numericliteralg.html#FromOne","title":"NumericLiteralG.FromOne","content":"NumericLiteralG.FromOne \nFromOne \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic-numericliteralg.html#FromInt32","title":"NumericLiteralG.FromInt32","content":"NumericLiteralG.FromInt32 \nFromInt32 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic-numericliteralg.html#FromInt64","title":"NumericLiteralG.FromInt64","content":"NumericLiteralG.FromInt64 \nFromInt64 \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-generic-numericliteralg.html#FromString","title":"NumericLiteralG.FromString","content":"NumericLiteralG.FromString \nFromString \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html","title":"ZipApplicative","content":"ZipApplicative \nMath Operators ready to use over (non sequential) Applicative Functors. \nZipApplicative.(~-.) \n(~-.) \nZipApplicative.(.\u002B) \n(.\u002B) \nZipApplicative.(\u002B.) \n(\u002B.) \nZipApplicative.(.\u002B.) \n(.\u002B.) \nZipApplicative.(.-) \n(.-) \nZipApplicative.(-.) \n(-.) \nZipApplicative.(.-.) \n(.-.) \nZipApplicative.( .* ) \n( .* ) \nZipApplicative.( *. ) \n( *. ) \nZipApplicative.(.*.) \n(.*.) \nZipApplicative.(.%) \n(.%) \nZipApplicative.(%.) \n(%.) \nZipApplicative.(.%.) \n(.%.) \nZipApplicative.(./) \n(./) \nZipApplicative.(/.) \n(/.) \nZipApplicative.(./.) \n(./.) \nZipApplicative.(.=) \n(.=) \nZipApplicative.(=.) \n(=.) \nZipApplicative.(.=.) \n(.=.) \nZipApplicative.(.\u003E) \n(.\u003E) \nZipApplicative.(\u003E.) \n(\u003E.) \nZipApplicative.(.\u003E.) \n(.\u003E.) \nZipApplicative.(.\u003C) \n(.\u003C) \nZipApplicative.(\u003C.) \n(\u003C.) \nZipApplicative.(.\u003C.) \n(.\u003C.) \nZipApplicative.(.||) \n(.||) \nZipApplicative.(||.) \n(||.) \nZipApplicative.(.||.) \n(.||.) \nZipApplicative.(.\u0026\u0026) \n(.\u0026\u0026) \nZipApplicative.(\u0026\u0026.) \n(\u0026\u0026.) \nZipApplicative.(.\u0026\u0026.) \n(.\u0026\u0026.) \nZipApplicative.(.\u003C=) \n(.\u003C=) \nZipApplicative.(\u003C=.) \n(\u003C=.) \nZipApplicative.(.\u003C=.) \n(.\u003C=.) \nZipApplicative.(.\u003E=) \n(.\u003E=) \nZipApplicative.(\u003E=.) \n(\u003E=.) \nZipApplicative.(.\u003E=.) \n(.\u003E=.)"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(~-.)","title":"ZipApplicative.(~-.)","content":"ZipApplicative.(~-.) \n(~-.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u002B)","title":"ZipApplicative.(.\u002B)","content":"ZipApplicative.(.\u002B) \n(.\u002B) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(\u002B.)","title":"ZipApplicative.(\u002B.)","content":"ZipApplicative.(\u002B.) \n(\u002B.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u002B.)","title":"ZipApplicative.(.\u002B.)","content":"ZipApplicative.(.\u002B.) \n(.\u002B.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.-)","title":"ZipApplicative.(.-)","content":"ZipApplicative.(.-) \n(.-) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(-.)","title":"ZipApplicative.(-.)","content":"ZipApplicative.(-.) \n(-.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.-.)","title":"ZipApplicative.(.-.)","content":"ZipApplicative.(.-.) \n(.-.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#( .* )","title":"ZipApplicative.( .* )","content":"ZipApplicative.( .* ) \n( .* ) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#( *. )","title":"ZipApplicative.( *. )","content":"ZipApplicative.( *. ) \n( *. ) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.*.)","title":"ZipApplicative.(.*.)","content":"ZipApplicative.(.*.) \n(.*.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.%)","title":"ZipApplicative.(.%)","content":"ZipApplicative.(.%) \n(.%) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(%.)","title":"ZipApplicative.(%.)","content":"ZipApplicative.(%.) \n(%.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.%.)","title":"ZipApplicative.(.%.)","content":"ZipApplicative.(.%.) \n(.%.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(./)","title":"ZipApplicative.(./)","content":"ZipApplicative.(./) \n(./) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(/.)","title":"ZipApplicative.(/.)","content":"ZipApplicative.(/.) \n(/.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(./.)","title":"ZipApplicative.(./.)","content":"ZipApplicative.(./.) \n(./.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.=)","title":"ZipApplicative.(.=)","content":"ZipApplicative.(.=) \n(.=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(=.)","title":"ZipApplicative.(=.)","content":"ZipApplicative.(=.) \n(=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.=.)","title":"ZipApplicative.(.=.)","content":"ZipApplicative.(.=.) \n(.=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003E)","title":"ZipApplicative.(.\u003E)","content":"ZipApplicative.(.\u003E) \n(.\u003E) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(\u003E.)","title":"ZipApplicative.(\u003E.)","content":"ZipApplicative.(\u003E.) \n(\u003E.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003E.)","title":"ZipApplicative.(.\u003E.)","content":"ZipApplicative.(.\u003E.) \n(.\u003E.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003C)","title":"ZipApplicative.(.\u003C)","content":"ZipApplicative.(.\u003C) \n(.\u003C) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(\u003C.)","title":"ZipApplicative.(\u003C.)","content":"ZipApplicative.(\u003C.) \n(\u003C.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003C.)","title":"ZipApplicative.(.\u003C.)","content":"ZipApplicative.(.\u003C.) \n(.\u003C.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.||)","title":"ZipApplicative.(.||)","content":"ZipApplicative.(.||) \n(.||) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(||.)","title":"ZipApplicative.(||.)","content":"ZipApplicative.(||.) \n(||.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.||.)","title":"ZipApplicative.(.||.)","content":"ZipApplicative.(.||.) \n(.||.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u0026\u0026)","title":"ZipApplicative.(.\u0026\u0026)","content":"ZipApplicative.(.\u0026\u0026) \n(.\u0026\u0026) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(\u0026\u0026.)","title":"ZipApplicative.(\u0026\u0026.)","content":"ZipApplicative.(\u0026\u0026.) \n(\u0026\u0026.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u0026\u0026.)","title":"ZipApplicative.(.\u0026\u0026.)","content":"ZipApplicative.(.\u0026\u0026.) \n(.\u0026\u0026.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003C=)","title":"ZipApplicative.(.\u003C=)","content":"ZipApplicative.(.\u003C=) \n(.\u003C=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(\u003C=.)","title":"ZipApplicative.(\u003C=.)","content":"ZipApplicative.(\u003C=.) \n(\u003C=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003C=.)","title":"ZipApplicative.(.\u003C=.)","content":"ZipApplicative.(.\u003C=.) \n(.\u003C=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003E=)","title":"ZipApplicative.(.\u003E=)","content":"ZipApplicative.(.\u003E=) \n(.\u003E=) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(\u003E=.)","title":"ZipApplicative.(\u003E=.)","content":"ZipApplicative.(\u003E=.) \n(\u003E=.) \n"},{"uri":"/FSharpPlus/reference/fsharpplus-math-zipapplicative.html#(.\u003E=.)","title":"ZipApplicative.(.\u003E=.)","content":"ZipApplicative.(.\u003E=.) \n(.\u003E=.) \n"},{"uri":"/FSharpPlus/type-any.html","title":"Any\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nAny\n===\n\nThis is a wrapper type for booleans, with a specific set of monoidal operations.\nThe contained bools would become true only if one of (any) operands are true.\n\nRelated Types\n------------\n\n - [All](type-all.html): Similar wrapper, but using the \u0027all\u0027 criteria.\n\n\nAbstractions\n------------\n\n -  [Semigroup](abstraction-semigroup.html)\n -  [Monoid](abstraction-monoid.html)\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet res1 = Any true \u002B\u002B zero \u002B\u002B Any false\n// val res1 : Any = Any true\n\nlet even x = x % 2 = 0\n\nlet res2 = [2;4;6;7;8] |\u003E map (even \u003E\u003E Any) |\u003E sum\n// val res2 : Any = Any true"},{"uri":"/FSharpPlus/type-nonempty.html","title":"NonEmptyList\u003C\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nNonEmptyList\u003C\u0027T\u003E\n================\n\nA type-safe list that contains at least one element.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n(**\n### Constructing NonEmptyList\n*)\n// you can construct a NonEmptyList by using ofSeq\nlet list123\u0027 = NonEmptyList.create 1 [ 2; 3 ]\n// or more idiomatically\nlet list123 = nelist { 1 ; 2; 3 } // will work in F# version 4.7\n\nlet listOne = NonEmptyList.singleton 1\n// cons\nlet list2 = NonEmptyList.cons 100 list123\n// append two NonEmptyLists\nlet list3 = plus list2 (NonEmptyList.singleton 200)\n// this can be written as (since list2 is a NonEmptyList):\nlet list3\u0027 = plus list2 (result 200)\n// in order to get back to a regular list you can then use toList:\nlet list4 = toList list3\u0027\n\n(**\n### Operations on NonEmptyList\n*)\n\nlet lengthOfList3 = length list3\n\nlet headOf3 = list3.Head\nlet headOf3\u0027 = head list3\n\nlet tailOf3 = list3.Tail"},{"uri":"/FSharpPlus/abstraction-semigroup.html","title":"Semigroup\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\nSemigroup\n=========\nIn mathematics, a semigroup is an algebraic structure consisting of a set together with an associative binary operation. A semigroup generalizes a monoid in that there might not exist an identity element. It also (originally) generalized a group (a monoid with all inverses) to a type where every element did not have to have an inverse, thus the name semigroup.\n___\nMinimal complete definition\n---------------------------\n * \u0060\u0060(\u002B)\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060(\u002B\u002B)\u0060\u0060\n*)\n(**\n    static member (\u002B) (x: \u0027Semigroup, y: \u0027Semigroup) : \u0027Semigroup\n*)\n(**\nRules\n-----\n*)\n(**\n    (x \u002B y) \u002B z = x \u002B (y \u002B z)\n*)\n(**\nRelated Abstractions\n--------------------\n - [Monoid](abstraction-monoid.html): A monoid is a Semigroup with an additional \u0060\u0060zero\u0060\u0060 operation\n \n - Alt/MonadPlus: Applicatives/Monads that are also Semigroups/Monoids\n\nConcrete implementations\n------------------------\nFrom .Net/F#\n \n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060string\u0060\u0060\n -  \u0060\u0060StringBuilder\u0060\u0060\n -  \u0060\u0060unit\u0060\u0060\n -  \u0060\u0060Set\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Map\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060TimeSpan\u0060\u0060 \n -  \u0060\u0060Tuple\u003C*\u003E\u0060\u0060\n -  \u0060\u0060ValueTuple\u003C*\u003E ( * up to 7 elements)\u0060\u0060\n -  \u0060\u0060\u0027T1* ... *\u0027Tn\u0060\u0060\n -  \u0060\u0060Task\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027T -\u003E \u0027Semigroup\u0060\u0060\n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Expr\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Dictionary\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060IDictionary\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060IReadOnlyDictionary\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IEnumerator\u003C\u0027T\u003E\u0060\u0060\n \nFrom F#\u002B\n \n -  [\u0060\u0060NonEmptyList\u003C\u0027S\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060NonEmptySet\u003C\u0027T\u003E\u0060\u0060](type-nonempty-set.html)\n -  [\u0060\u0060NonEmptyMap\u003C\u0027Key, \u0027T\u003E\u0060\u0060](type-nonempty-map.html)\n -  [\u0060\u0060ZipList\u003C\u0027S\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060Dual\u003C\u0027T\u003E\u0060\u0060](type-dual.html)\n -  [\u0060\u0060Endo\u003C\u0027T\u003E\u0060\u0060](type-endo.html)\n -  [\u0060\u0060All\u0060\u0060](type-all.html)\n -  [\u0060\u0060Any\u0060\u0060](type-any.html)\n -  [\u0060\u0060Const\u003C\u0027C, \u0027T\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060First\u003C\u0027T\u003E\u0060\u0060](type-first.html)\n -  [\u0060\u0060Last\u003C\u0027T\u003E\u0060\u0060](type-last.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n -  [\u0060\u0060Vector\u003C\u0027T, \u0027Dimension\u003E\u0060\u0060](type-vector.html)\n -  [\u0060\u0060Matrix\u003C\u0027T, \u0027Rows, \u0027Columns\u003E\u0060\u0060](type-matrix.html)\n \n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n*)"},{"uri":"/FSharpPlus/type-nonempty-map.html","title":"NonEmptyMap\u003C\u0027Key, \u0027Value\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nNonEmptyMap\u003C\u0027Key, \u0027Value\u003E\n================\n\nA type-safe map that contains at least one element.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n(**\n### Constructing NonEmptyMap\n*)\n// you can construct a NonEmptyMap by using NonEmptyMap.Create\nlet map1 = NonEmptyMap.Create((\u0022a\u0022, 1), (\u0022b\u0022, 2))\n\nlet map2 = NonEmptyMap.singleton \u0022c\u0022 3\n\n// in order to get back to a regular map you can then use NonEmptyMap.toMap:\nlet map1\u0027 = NonEmptyMap.toMap map1\n\n\n(**\n### Operations on NonEmptyMap\n*)\n\nlet map3 = map1 |\u003E NonEmptyMap.add \u0022d\u0022 4\n\nlet map4 = NonEmptyMap.union map2 map3\n\nmap4 |\u003E NonEmptyMap.tryFind \u0022c\u0022 |\u003E printfn \u0022%A\u0022\n\n"},{"uri":"/FSharpPlus/abstraction-misc.html","title":"Other abstractions\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\nOther abstractions\n==================\n\nHere are some other abstractions, not present in the diagram.\n\n(see the examples)\n\n Examples\n--------\n*)\n\n\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen System\nopen FSharpPlus\nopen FSharpPlus.Data\n\n\n// Indexable\n\nlet namesWithNdx = mapi (fun k v -\u003E \u0022(\u0022 \u002B string k \u002B \u0022)\u0022 \u002B v ) (Map.ofSeq [\u0027f\u0027,\u0022Fred\u0022;\u0027p\u0027,\u0022Paul\u0022])\nlet namesAction = iteri (printfn \u0022(%A)%s\u0022) (Map.ofSeq [\u0027f\u0027,\u0022Fred\u0022;\u0027p\u0027,\u0022Paul\u0022])\nlet res119 = foldi (fun s i t -\u003E t * s - i) 10 [3;4]\nlet res113 = foldi (fun s i t -\u003E t * s - i) 2 [|3;4;5|]\nlet resSomeId20 = traversei (fun k t -\u003E Some (10 \u002B t)) (Tuple 10)\n\n\n// ZipFunctor\n\nlet (x, y) = zip (async { return 1 }) (async { return \u00272\u0027 }) |\u003E Async.RunSynchronously\n\n\n// Collection\n\nlet a = skip 3 [1..10]\nlet b = chunkBy fst [1, \u0022a\u0022; 1, \u0022b\u0022; 2, \u0022c\u0022; 1, \u0022d\u0022]\n\n\n// Reducibles\n\nlet c = nelist {1; 2; 3}\nlet d = reduce (\u002B) c\n\nlet resultList = nelist {Error \u00221\u0022; Error \u00222\u0022; Ok 3; Ok 4; Error \u00225\u0022}\nlet firstOk = choice resultList\n\n\n// Invariant Functor\ntype StringConverter\u003C\u0027t\u003E = StringConverter of (string -\u003E \u0027t) * (\u0027t -\u003E string) with\n    static member Invmap (StringConverter (f, g), f\u0027,g\u0027) = StringConverter (f\u0027 \u003C\u003C f, g \u003C\u003C g\u0027)\n\nlet ofString (StringConverter (f, _)) = f\nlet toString (StringConverter (_, f)) = f\n\nlet floatConv = StringConverter (float\u003Cstring\u003E, string\u003Cfloat\u003E)\n\nlet floatParsed  = ofString floatConv \u00221.8\u0022\nlet floatEncoded = toString floatConv 1.5\n\nlet intConv = invmap int\u003Cfloat\u003E float\u003Cint\u003E floatConv\n\nlet oneParsed  = ofString intConv \u00221\u0022\nlet tenEncoded = toString intConv 10"},{"uri":"/FSharpPlus/type-state.html","title":"State\u003C\u0027S,\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nState\u003C\u0027S,\u0027T\u003E\n============\n\nThe intention when using the State monad is to keep state in a purely functional manner without violating referential transparency of functions.\n\nRelated Types\n------------\n\n - [Reader](type-reader.html): Similar but read-only.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\nopen FSharpPlus.Data\n(**\nFrom [Haskell Wiki on State monad](https://wiki.haskell.org/State_Monad)\n*)\n\nlet rec playGame =\n    function\n    | []-\u003E monad {\n            let! (_, score) = State.get\n            return score\n        }\n    | x::xs-\u003E monad {\n            let! (on, score) = State.get\n            match x with\n            | \u0027a\u0027 when on -\u003E do! State.put (on, score \u002B 1)\n            | \u0027b\u0027 when on -\u003E do! State.put (on, score - 1)\n            | \u0027c\u0027         -\u003E do! State.put (not on, score)\n            | _           -\u003E do! State.put (on, score)\n            return! playGame xs\n        }\n\nlet startState = (false, 0)\nlet moves = toList \u0022abcaaacbbcabbab\u0022\nState.eval (playGame moves) startState\nlet (score, finalState) = State.run (playGame moves) startState"},{"uri":"/FSharpPlus/type-cont.html","title":"Cont\u003C\u0027R,\u0027U\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nCont\u003C\u0027R,\u0027U\u003E\n===========\n\nThe \u0060Cont\u0060 computation type represents computations which can be interrupted and resumed.\n\nSome of these examples are adapted from [fabriceleal/Continuations on github](https://github.com/fabriceleal/Continuations/blob/master/Continuations/Program.fs).\n\nYou can read up on the style on [Markh Needhams blog post](http://www.markhneedham.com/blog/2009/06/22/f-continuation-passing-style/) or \nby reading [Real World Functional Programming by Tomas Petricek with Jon Skeet](https://livebook.manning.com/book/real-world-functional-programming/chapter-10/156) on the subject.\n\nExamples\n--------\n\nIn order to get an idea about this style, let us contrast some of the examples and how they look in when using F#\u002B or without help.  \n\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet assertEqual expected actual = \n    if expected \u003C\u003E actual then\n        failwithf \u0022%A != %A\u0022 expected actual\n\n(**\n### Example g k\n\n*)\n\nlet g n = n \u002B 1\nlet f n = g(n \u002B 1) \u002B 1\n\nmodule \u0060\u0060EXAMPLE g k\u0060\u0060 =\n    let g_k n k = k(n \u002B 1)\n    let f_k n k = g_k(n \u002B 1) (fun x -\u003E k(x \u002B 1))\n    f_k 1 (fun x -\u003E assertEqual (f 1) x)\n    f_k 2 (fun x -\u003E assertEqual (f 2) x)\n\n\nmodule \u0060\u0060EXAMPLE g k in FSharpPlus\u0060\u0060 =\n    let g_k n : Cont\u003Cint,int\u003E = monad { return (n \u002B 1) }\n    let f_k n = monad {\n      let! x= g_k(n \u002B 1) \n      return x\u002B1\n    }\n    let n = 2\n    let res = Cont.run (f_k n) id\n    assertEqual (f n) res\n\n\n(**\n### Example Max\n\n*)\n\n// Max, regular-style\nlet max x y =\n    if x \u003E y then x else y\n\nmodule \u0060\u0060EXAMPLE max\u0060\u0060 =\n\n    // Max, CPS-style\n    let max_k x y k =\n        if x \u003E y then k x else k y\n    // More CPS Styl-ish\n    max_k 1 2 (fun x -\u003E assertEqual (max 1 2) x)\n\nmodule \u0060\u0060EXAMPLE max in FSharpPlus\u0060\u0060 =\n    let max_k x y = monad {\n        return if x \u003E y then x else y }\n    let x = Cont.run (max_k 1 2) id\n    assertEqual (max 1 2) x\n\n(**\n### Example factorial\n\n*)\n\n\n// regular factorial\nlet rec factorial n =\n    if n = 0 then\n        1\n    else\n        n * factorial (n-1)\n\nmodule \u0060\u0060EXAMPLE factorial\u0060\u0060 =\n    let rec factorial_k n k =\n        if n = 0 then\n            k 1\n        else\n            factorial_k (n-1) (fun x -\u003E k(x * n))\n\n    let fact_n = 5\n    factorial_k fact_n (fun x -\u003E assertEqual (factorial fact_n) x)\n\nmodule \u0060\u0060EXAMPLE factorial in FSharpPlus\u0060\u0060 =\n    let rec factorial_k n = monad {\n        if n = 0 then\n            return 1\n        else\n            let! x=factorial_k (n-1)\n            return x * n\n      }\n    let fact_n = 5\n    let x = Cont.run (factorial_k fact_n) id\n    assertEqual (factorial fact_n) x\n\n(**\n### Example sum\n\n*)\n\n// sum\nlet rec sum x =\n    if x = 1 then\n        1\n    else\n        sum(x - 1) \u002B x\n\nmodule \u0060\u0060EXAMPLE sum\u0060\u0060 =\n\n    let rec sum_k x k =\n        if x = 1 then\n            k 1\n        else\n            sum_k(x - 1) (fun y -\u003E k(x \u002B y))\n\n    let sum_n = 5\n    sum_k sum_n (fun t -\u003E  assertEqual (sum sum_n) t)\nmodule \u0060\u0060EXAMPLE sum in FSharpPlus\u0060\u0060 =\n\n    let rec sum_k x = monad {\n        if x = 1 then\n            return 1\n        else\n            let! y=sum_k(x - 1)\n            return x \u002B y\n      }\n\n    let sum_n = 5\n    let t = Cont.run (sum_k sum_n) id\n    assertEqual (sum sum_n) t\n\n(**\n### Example Fibonacci number\n\n*)\n\n// fibo\nlet rec fibo n =\n    if n = 0 then\n        1\n    else if n = 1 then\n        1\n        else\n            fibo (n - 1) \u002B fibo (n - 2)\n\nmodule \u0060\u0060EXAMPLE fibo\u0060\u0060 =\n    let rec fibo_k n k =\n        if n = 0 then\n            k 1\n        else if n = 1 then \n            k 1\n            else\n                let k_new1 = (fun x1 -\u003E \n                    let k_new2 = (fun x2 -\u003E k(x1 \u002B x2))\n                    fibo_k (n - 2) k_new2\n                )\n                fibo_k (n - 1) k_new1\n\n    let fibo_n = 9\n    fibo_k fibo_n (fun x -\u003E assertEqual (fibo fibo_n) x)\nmodule \u0060\u0060EXAMPLE fibo in FSharpPlus\u0060\u0060 =\n    let rec fibo_k n =\n      monad {\n        if n = 0 then\n            return 1\n        else if n = 1 then \n            return 1\n            else\n                let! x1 = fibo_k (n - 1)\n                let! x2 = fibo_k (n - 2)\n                return x1\u002Bx2\n      }\n    let fibo_n = 9\n    let x = Cont.run (fibo_k fibo_n) id\n    assertEqual (fibo fibo_n) x\n\n(**\n### Example nth\n\n*)\n\n\n// nth\nlet rec nth n (ls : \u0027a list) =\n    if ls.IsEmpty then\n        None\n    else if n = 0 then\n        Some(ls.Head)\n    else\n        nth (n - 1) ls.Tail\n\nmodule \u0060\u0060EXAMPLE nth\u0060\u0060 =\n\n    let rec nth_k n (ls : \u0027a list) k =\n        if ls.IsEmpty then\n            k(None)\n        else if n = 0 then\n            k(Some(ls.Head))\n        else\n            nth_k (n - 1) ls.Tail k\n    let ls, i1, i2 = [1;2;3;4;5;6], 3, 15\n\n    // becomes:\n    nth_k i1 ls (fun x-\u003EassertEqual (nth i1 ls) x)\n\n    nth_k i2 ls (fun x-\u003EassertEqual (nth i2 ls) x)\n\n\n#nowarn \u00220064\u0022\nmodule \u0060\u0060EXAMPLE nth in FSharpPlus\u0060\u0060 =\n\n    let rec nth_k n (ls : \u0027a list) = monad {\n        if ls.IsEmpty then\n            return (None)\n        else if n = 0 then\n            return (Some(ls.Head))\n        else\n            let! r=nth_k (n - 1) ls.Tail\n            return r\n      }\n    let ls, i1, i2 = [1;2;3;4;5;6], 3, 15\n\n    // becomes:\n    let x = Cont.run (nth_k i1 ls) id\n    assertEqual (nth i1 ls) x\n\n    let x2 = Cont.run (nth_k i2 ls) id\n    assertEqual (nth i2 ls) x2\n\n(**\n### Example count nodes in a tree\n\n*)\n\ntype Tree =\n    | Node of Tree * Tree\n    | Leaf\n// node_count\nlet rec node_count = function\n                    | Node(lt, rt) -\u003E 1 \u002B node_count(lt)  \u002B node_count(rt)\n                    | Leaf -\u003E 0\n\nmodule \u0060\u0060EXAMPLE count_nodes\u0060\u0060 =\n    let rec node_count_k tree k = match tree with\n                                    | Node(ltree, rtree) -\u003E\n                                        let new_k1 = (fun ltree_count -\u003E \n                                            let new_k2 = (fun rtree_count -\u003E \n                                                k(1 \u002B ltree_count \u002B rtree_count)\n                                            )\n                                            node_count_k rtree new_k2\n                                        )\n                                        node_count_k ltree new_k1\n                                    | Leaf -\u003E k 0\n\n    let t = Node(Node(Leaf, Leaf), Node(Leaf, Node(Leaf, Node(Leaf, Leaf))))\n    node_count_k t (fun count -\u003E assertEqual (node_count t)  count)\n\nmodule \u0060\u0060EXAMPLE count_nodes in FSharpPlus\u0060\u0060 =\n    let rec node_count_k tree = \n                                monad {\n                                    match tree with\n                                    | Node(lt, rt) -\u003E \n                                        let! x_lt=node_count_k(lt)\n                                        let! x_rt=node_count_k(rt)\n                                        return 1 \u002B x_lt \u002B x_rt\n                                    | Leaf -\u003E return 0\n                                }\n    let t = Node(Node(Leaf, Leaf), Node(Leaf, Node(Leaf, Node(Leaf, Leaf))))\n    let count = Cont.run (node_count_k t) id\n    assertEqual (node_count t)  count"},{"uri":"/FSharpPlus/type-parallelarray.html","title":"ParallelArray\u003C\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nParallelArray\u003C\u0027T\u003E\n=================\n\nThis type is basically a wrapper over Arrays, which:\n\n - Have a ZipList like applicative implementation.\n - Have parallel processing semantics by default.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet arr1 = [| 1..100000|]\nlet arr2 = [|10..100000|]\n\nlet arr1_plus_arr2  = (\u002B) \u003C!\u003E parray arr1 \u003C*\u003E parray arr2\n\nopen FSharpPlus.Math.Applicative\n\nlet arr1_plus_arr2\u0027 = parray arr1 .\u002B. parray arr2\nlet arrCombined     = 10 *. parray arr1 .\u002B. parray arr2 .- 5\nlet asMonoid        = Infinite \u0022Hello \u0022 \u003C/plus/\u003E parray [|\u0022City\u0022; \u0022World\u0022; \u0022Sun\u0022|]"},{"uri":"/FSharpPlus/type-listt.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/abstraction-comonad.html","title":"Comonad\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nComonad\n=======\n\nComonads are the categorical dual of monads.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060extract s\u0060\u0060\n\n * \u0060\u0060extend g s\u0060\u0060 / \u0060\u0060(=\u003E\u003E) s g\u0060\u0060 \n\n*)\n(**\n    static member Extract (s: \u0027Comonad\u003C\u0027T\u003E) : \u0027T\n    static member (=\u003E\u003E)   (s: \u0027Comonad\u003C\u0027T\u003E, f: \u0027Comonad\u003C\u0027T\u003E -\u003E \u0027U) : \u0027Comonad\u003C\u0027U\u003E\n*)\n(**\n\nOther operations\n----------------\n\n * \u0060\u0060duplicate x\u0060\u0060\n*)\n(**\n    static member Duplicate (x : \u0027Comonad\u003C\u0027T\u003E) : \u0027Comonad\u003C\u0027Comonad\u003C\u0027T\u003E\u003E\n*)\n(**\n\n\n\nRules\n-----\n*)\n(**\n    extend extract       = id\n    extract \u003C\u003C extend f  = f\n    extend f \u003C\u003C extend g = extend (f \u003C\u003C extend g)\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Monad](abstraction-monad.html): Comonads are the categorical dual of monads.\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060    \n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060     \n -  \u0060\u0060Id\u003C\u0027T\u003E\u0060\u0060       \n -  \u0060\u0060(\u0027W * \u0027T)\u0060\u0060\n -  \u0060\u0060struct (\u0027W * \u0027T)\u0060\u0060\n -  \u0060\u0060\u0027Monoid -\u003E \u0027T\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n \n \nFrom F#\u002B\n\n -  [\u0060\u0060Reader\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-reader.html)\n -  [\u0060\u0060Writer\u003C\u0027Monoid,\u0027T\u003E\u0060\u0060](type-writer.html)\n\n \n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\n\nExamples\n--------\n\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n// A non-empty list\nlet lst   = {Head = 1; Tail = [2;3;4;5]}\n\n// Get the head\nlet elem1 = extract   lst\n\n// Get ALL tails\nlet tails = duplicate lst\n\n// This should return the original list\nlet lst\u0027  = extend extract lst\n\n\n\nlet ct1 = duplicate [1;2;3;4] // val it : List\u003CList\u003Cint\u003E\u003E = [[1; 2; 3; 4]; [2; 3; 4]; [3; 4]; [4]]\nlet ct2 = duplicate (\u0022a\u0022, 10) // val it : string * (string * int) = (\u0022a\u0022, (\u0022a\u0022, 10))\nlet ct3 = duplicate (fun (x:string) -\u003E System.Int32.Parse x)\nlet r80100 = ct3 \u002280\u0022 \u0022100\u0022\n\nlet ct1\u0027 = extend id [1;2;3;4]\nlet ct2\u0027 = extend id (\u0022a\u0022, 10)\nlet ct3\u0027 = extend id (fun (x:string) -\u003E System.Int32.Parse x)\n\nlet ct1\u0027\u0027 = (=\u003E\u003E) [1;2;3;4] id\nlet ct2\u0027\u0027 = (=\u003E\u003E) (\u0022a\u0022, 10) id\nlet ct3\u0027\u0027 = (=\u003E\u003E) (fun (x:string) -\u003E System.Int32.Parse x) id"},{"uri":"/FSharpPlus/abstraction-bitraversable.html","title":"Bitraversable\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nBitraversable\n=============\n\nBitraversable identifies bifunctorial data structures whose elements can be traversed in order, performing Applicative actions at each element, and collecting a result structure with the same shape.\n\nAs opposed to Traversable data structures, which have one variety of element on which an action can be performed, Bitraversable data structures have two such varieties of elements.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n * \u0060\u0060bitraverse f g x\u0060\u0060 | \u0060\u0060bisequence x\u0060\u0060 and \u0060\u0060bimap f g x\u0060\u0060\n*)\n(**\n    static member Bitraverse (t: \u0027Bitraversable\u003C\u0027T1,\u0027U1\u003E, f: \u0027T1-\u003E\u0027Functor\u003C\u0027T2\u003E, g: \u0027U1-\u003E\u0027Functor\u003C\u0027U2\u003E) : \u0027Functor\u003C\u0027Bitraversable\u003C\u0027T2,\u0027U2\u003E\u003E\n    static member Bisequence (t: \u0027Bitraversable\u003C\u0027Functor\u003C\u0027T\u003E,\u0027Functor\u003C\u0027U\u003E\u003E) : \u0027Functor\u003C\u0027Bitraversable\u003C\u0027T,\u0027U\u003E\u003E\n*)\n(**\n\n\n\nRules\n-----\n*)\n(**\n    t \u003C\u003C bitraverse f g = bitraverse (t \u003C\u003C f) (t \u003C\u003C g)\n    bitraverse Identity Identity = Identity\n    bitraverse (Compose \u003C\u003C map g1 \u003C\u003C f1) = Compose \u003C\u003C fmap (bitraverse g1 g21) \u003C\u003C bitraverse f1 f2\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Functor](abstraction-functor.html): A bitraversable is generic on the Bitraversable type parameter and the (Applicative) Functor inner type parameter.\n - [Applicative](abstraction-applicative.html): An applicative is a functor whose \u0060\u0060map\u0060\u0060 operation can be splitted in \u0060\u0060return\u0060\u0060 and \u0060\u0060(\u003C*\u003E)\u0060\u0060 operations. \n - [Bifoldable](abstraction-bifoldable.html) : All bitraversables are bifoldables.\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n\n-  \u0060\u0060\u0027T * \u0027U\u0060\u0060\n-  \u0060\u0060struct (\u0027T * \u0027U)\u0060\u0060\n-  \u0060\u0060Result\u003C\u0027T, \u0027U\u003E\u0060\u0060\n-  \u0060\u0060Choice\u003C\u0027T, \u0027U\u003E\u0060\u0060\n\n\nFrom F#\u002B\n\n -  [\u0060\u0060Const\u003C\u0027C, \u0027T\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060Validation\u003C\u0027Error, \u0027T\u003E\u0060\u0060](type-validation.html)\n\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\n\n\nlet asyncSquareRoot x =\n    if x \u003C 0 then \n        Error   (async { printfn \u0022Calc error message\u0022; return \u0022Negative Value\u0022}) \n        else Ok (async { printfn \u0022Calc sqrt of %A\u0022 x ; return sqrt x})\n\nlet res42 = asyncSquareRoot 1764 |\u003E bisequence |\u003E Async.RunSynchronously"},{"uri":"/FSharpPlus/lens.html","title":"Lens\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nLens\n====\n\nLens is an abstraction over function that allow to read and update parts of immutable data.\n\nThe abstraction name comes from the analogy of focusing on a specific part of the data structure.\n\nAnother analogy could be with pointers, but in this case data is treated as immutable which means that instead of modifying it returns a new copy.\n\nIn this [quick tour](tutorial.html#Lens) you can find some basic examples of operating with Lenses.\n\nTo allow lensing over your record types, lens (as functions) have to be written by hand for each field.\n\nAs a convention, all lens identifiers will start with an underscore \u0060_\u0060.\n\nHere\u0027s an example usage of lenses with business objects:\n\n\n*)\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen System\nopen FSharpPlus\n// In order to use the Lens module of F#\u002B we import the following:\nopen FSharpPlus.Lens\n\n// From Mauricio Scheffer: https://gist.github.com/mausch/4260932\ntype Person = \n    { Name: string\n      DateOfBirth: DateTime }\n\nmodule Person =\n    let inline _name f p =\n        f p.Name \u003C\u0026\u003E fun x -\u003E { p with Name = x }\n\ntype Page =\n    { Contents: string }\n\nmodule Page =\n    let inline _contents f p =\n        f p.Contents \u003C\u0026\u003E fun x -\u003E {p with Contents = x}\n\ntype Book = \n    { Title: string\n      Author: Person \n      Pages: Page list }\n\nmodule Book =\n    let inline _author f b =\n        f b.Author \u003C\u0026\u003E fun a -\u003E { b with Author = a }\n\n    let inline _authorName b = _author \u003C\u003C Person._name \u003C| b\n\n    let inline _pages f b =\n        f b.Pages \u003C\u0026\u003E fun p -\u003E { b with Pages = p }\n\n    let inline _pageNumber i b =\n        _pages \u003C\u003C List._item i \u003C\u003C _Some \u003C| b\n\nlet rayuela =\n    { Book.Title = \u0022Rayuela\u0022\n      Author = { Person.Name = \u0022Julio Cort\u00E1zar\u0022\n                 DateOfBirth = DateTime(1914, 8, 26) } \n      Pages = [\n        { Contents = \u0022Once upon a time\u0022 }\n        { Contents = \u0022The End\u0022} ] }\n    \n// read book author name:\nlet authorName1 = view Book._authorName rayuela\n//  you can also write the read operation as:\nlet authorName2 = rayuela ^. Book._authorName\n\n// write value through a lens\nlet book1 = setl Book._authorName \u0022William Shakespear\u0022 rayuela\n// update value\nlet book2 = over Book._authorName String.toUpper rayuela\n\n(**\n\nNote: \n\nThe operator \u0060\u003C\u0026\u003E\u0060 is not available in F#\u002B v1.0 but since it\u0027s a flipped map, you can use \u0060\u003C/flip map/\u003E\u0060 instead.\n\nHowever it\u0027s recommended to upgrade F#\u002B since you\u0027ll get better compile times with \u0060\u003C\u0026\u003E\u0060.\n\nPrism\n=====\n\nAlso called a Partial Lens, they focus in parts of the data that could be there or not.\n\nSee the following example using the built-in \u0060_Some\u0060 prism.\n\n*)\n\ntype Team   = { Name: string; Victories: int }\nlet inline _name      f t = f t.Name      \u003C\u0026\u003E fun n -\u003E { t with Name      = n }\nlet inline _victories f t = f t.Victories \u003C\u0026\u003E fun v -\u003E { t with Victories = v }\n\ntype Player = { Team: Team; Score: int }\nlet inline _team  f p = f p.Team  \u003C\u0026\u003E fun t -\u003E { p with Team  = t }\nlet inline _score f p = f p.Score \u003C\u0026\u003E fun s -\u003E { p with Score = s }\n\ntype Result = { Winner: Player option; Started: bool}\nlet inline _winner   f r = f r.Winner  \u003C\u0026\u003E fun w -\u003E { r with Winner  = w }\nlet inline _started  f r = f r.Started \u003C\u0026\u003E fun s -\u003E { r with Started = s }\n\ntype Match\u003C\u0027t\u003E  = { Players: \u0027t; Finished: bool }\n// For polymorphic updates to be possible, we can\u0027t use \u0060with\u0060 expression on generic field lens.\nlet inline _players  f m = f m.Players  \u003C\u0026\u003E fun p -\u003E { Finished = m.Finished; Players  = p }\nlet inline _finished f m = f m.Finished \u003C\u0026\u003E fun f -\u003E { m with Finished = f }\n\n// Lens composed with Prism -\u003E Prism\nlet inline _winnerTeam x = (_players \u003C\u003C _winner \u003C\u003C _Some \u003C\u003C _team) x\n\n// initial state\nlet match0 =\n    { Players = \n            { Team = { Name = \u0022The A Team\u0022; Victories = 0 }; Score = 0 },\n            { Team = { Name = \u0022The B Team\u0022; Victories = 0 }; Score = 0 }\n      Finished = false }\n\n\n// Team 1 scores\nlet match1 = over (_players \u003C\u003C _1 \u003C\u003C _score) ((\u002B) 1) match0\n\n// Team 2 scores\nlet match2 = over (_players \u003C\u003C _2 \u003C\u003C _score) ((\u002B) 1) match1\n\n// Produce Match\u003CResult\u003E from Match\u003CPlayer * Player\u003E \n// This is possible with these Lenses since they support polymorphic updates.\nlet matchResult0 = setl _players { Winner = None; Started = true } match2\n\n// See if there is a winner by using a prism\nlet _noWinner = preview _winnerTeam matchResult0\n\n// Team 1 scores\nlet match3 = over (_players \u003C\u003C _1 \u003C\u003C _score) ((\u002B) 1) match2\n\n// End of the match\nlet match4 = setl _finished true match3\nlet match5 = over (_players \u003C\u003C _1 \u003C\u003C _team \u003C\u003C _victories) ((\u002B) 1) match4\nlet matchResult1 = over _players (fun (x, _) -\u003E { Winner = Some x; Started = true }) match5\n\n// And the winner is ...\nlet winner = preview _winnerTeam matchResult1\n\n\n\n\n\n\n\n(**\nTraversal\n=========\n\n*)\n\n\n\nlet t1 = [|\u0022Something\u0022; \u0022\u0022; \u0022Something Else\u0022; \u0022\u0022|] |\u003E setl (_all \u0022\u0022) (\u0022Nothing\u0022)\n// val t1 : string [] = [|\u0022Something\u0022; \u0022Nothing\u0022; \u0022Something Else\u0022; \u0022Nothing\u0022|]\n\n// we can preview it\nlet t2 = [|\u0022Something\u0022; \u0022Nothing\u0022; \u0022Something Else\u0022; \u0022Nothing\u0022|] |\u003E preview (_all \u0022Something\u0022)\n// val t2 : string option = Some \u0022Something\u0022\n\n// view all elements in a list\nlet t3 = [|\u0022Something\u0022; \u0022Nothing\u0022; \u0022Something Else\u0022; \u0022Nothing\u0022|] |\u003E toListOf (_all \u0022Something\u0022)\n// val t3 : string list = [\u0022Something\u0022]\n\n// also view it, since string is a monoid\nlet t4 = [|\u0022Something\u0022; \u0022Nothing\u0022; \u0022Something Else\u0022; \u0022Nothing\u0022|] |\u003E view  (_all \u0022Something\u0022)\n// val t4 : string = \u0022Something\u0022\n\n// Lens composed with a Traversal -\u003E Traversal\nlet t5 = [((), \u0022Something\u0022); ((),\u0022\u0022); ((), \u0022Something Else\u0022); ((),\u0022\u0022)] |\u003E preview  (_all ((),\u0022Something\u0022) \u003C\u003C _2)\n// val t5 : Option\u003Cstring\u003E = Some \u0022Something\u0022\n\n\n\n\n(**\nFold\n====\n\n*)\nopen FSharpPlus.Lens\nopen FSharpPlus // This module contain other functions relevant for the examples (length, traverse)\nopen FSharpPlus.Data // Mult\n\nlet f1 = over both length (\u0022hello\u0022,\u0022world\u0022)\n// val f1 : int * int = (5, 5)\n\nlet f2 = (\u0022hello\u0022,\u0022world\u0022)^.both\n// val f2 : string = \u0022helloworld\u0022\n\nlet f3 = anyOf both ((=)\u0027x\u0027) (\u0027x\u0027,\u0027y\u0027)\n// val f3 : bool = true\n\nlet f4 = (1,2)^..both\n// val f4 : int list = [1; 2]\n\nlet f5 = over items length [\u0022hello\u0022;\u0022world\u0022]\n// val f5 : int list = [5; 5]\n\nlet f6 = [\u0022hello\u0022;\u0022world\u0022]^.items\n// val f6 : string = \u0022helloworld\u0022\n\nlet f7 = anyOf items ((=)\u0027x\u0027) [\u0027x\u0027;\u0027y\u0027]\n// val f7 : bool = true\n\nlet f8 = [1;2]^..items\n// val f8 : int list = [1; 2]\n\nlet f9 = foldMapOf (traverse \u003C\u003C both \u003C\u003C _Some) Mult [(Some 21, Some 21)]\n// val f9 : Mult\u003Cint\u003E = Mult 441\n\nlet f10 = foldOf (traverse \u003C\u003C both \u003C\u003C _Some) [(Some 21, Some 21)]\n// val f10 : int = 42\n\nlet f11 = allOf both (fun x-\u003E x \u003E= 3) (4,5)\n// val f11 : bool = true\n\n(**\nIso\n===\n\n*)\n\n\nlet toOption (isSome, v) = if isSome then Some v else None\nlet fromOption = function Some (x:\u0027t) -\u003E (true, x) | None -\u003E (false, Unchecked.defaultof\u003C\u0027t\u003E)\nlet inline isoTupleOption x = x |\u003E iso toOption fromOption\n\n\nlet i1 = view isoTupleOption (System.Int32.TryParse \u002242\u0022)\n// val i1 : int option = Some 42\n\nlet i2 = view (from\u0027 isoTupleOption) (Some 42)\n// val i2 : bool * int = (true, 42)\n\n// Iso composed with a Lens -\u003E Lens\nlet i3 = view (_1 \u003C\u003C isoTupleOption) (System.Int32.TryParse \u002242\u0022, ())\n// val i3 : int option = Some 42\n\n\n(**\nMaximum and minimum\n===================\n\n*)\n\nlet fv3 = maximumOf (traverse \u003C\u003C both \u003C\u003C _Some) [(Some 1, Some 2);(Some 3,Some 4)]\n// val fv3 : int option = Some 4\n\nlet fv4 = minimumOf (traverse \u003C\u003C both \u003C\u003C _Some) [(Some 1, Some 2);(Some 3,Some 4)]\n// val fv4 : int option = Some 1\n\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking Lenses](https://dev.to/choc13/grokking-lenses-2jgp).\n   It contains examples using F#\u002B and an explanation from scratch.\n\n\n*)"},{"uri":"/FSharpPlus/index.html","title":"FSharpPlus\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nFSharpPlus\n======================\nF#\u002B is a base library that aims to take F# to the next level of functional\nprogramming. \n\n*What if we imagine F# as more than it is?*\n\nF#\u002B builds upon FSharp, using generic programming techniques to help\nyou avoid boiler plate code.  However, by naming conventions and signatures\nit can be seen to \u0027enhance\u0027 rather than \u0027replace\u0027 existing patterns as much\nas possible.\n\nThe additions can be summarised as:\n\n * [Extensions](extensions.html) to core types, such as [\u0060String.toLower\u0060](reference/fsharpplus-string.html)\n\n * [Generic Functions and Operators](generic-doc.html) like \u0060map\u0060, which can be extended to support other types\n\n * Generic and customizable [Computation Expressions](computation-expressions.html),\n   like \u0060monad\u0060\n\n * A generic [Math Module](numerics.html)\n\n * [Abstractions](abstractions.html) that capture common FP patterns, such as\n   the standard monads Cont, Reader, Writer, State and their Monad Transformers\n\n * Some new types that work well with the abstractions, such as NonEmptyList,\n   DList and Validation\n\n * A polymorphic [Lenses/Optics](tutorial.html#Lens) to easily read and update\n   parts of immutable data\n\n * Generic methods that help you with [parsing](parsing.html)\n\nNote, however, that F#\u002B does not go into solving a specific thing for a specific\ntechnology, such as JSON parsing.\n\nSome functions are available as [extension methods](extension-methods.html)\nso are callable from C#. Note that this is not complete, or currently considered high priority.\n\nGetting started is easy since you can start with enjoying some of the extensions\nand generic functions, but you will find other parts of F#\u002B unfold before you\nand become useful the deeper in you get.\n\nExample 1\n---------\n\nThis example demonstrates using an extension function defined in this library.\n\n*)\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\n\nlet x = String.replace \u0022old\u0022 \u0022new\u0022 \u0022Good old days\u0022\n// val x : string = \u0022Good new days\u0022\n\n(**\n\nExample 2\n---------\n\nThis example demonstrates using a generic function defined in this library.\n\n*)\n\nmap string [|2;3;4;5|]\n// val it : string [] = [|\u00222\u0022; \u00223\u0022; \u00224\u0022; \u00225\u0022|]\n\nmap ((\u002B) 9) (Some 3)\n// val it : int option = Some 12\n\nopen FSharpPlus.Data\n\nmap string (NonEmptyList.create 2 [3;4;5])\n// val it : NonEmptyList\u003Cstring\u003E = {Head = \u00222\u0022; Tail = [\u00223\u0022; \u00224\u0022; \u00225\u0022];}\n\n(**\n\nFor a more hands on run through F#\u002B we recommend following the tutorial:\n\n * [Tutorial](tutorial.html) contains a further explanation of this library.\n\n\nReference Documentation\n-----------------------\n\n * [Types](types.html) contains detailed information about all the types provided in this library.\n\n * [API Reference](reference/index.html) contains automatically generated documentation for all types, modules\n   and functions in the library. This includes additional brief samples on using most of the\n   functions.\n\nSamples\n-----------------------\n\nThis documentation is automatically generated from \u0060*.fsx\u0060 files in [the content folder][content]. \nIt can be useful to clone a local copy to review.\n\nThe [API reference](reference/index.html) is automatically generated from\nMarkdown comments in the library implementation.\n \nAlso of note is the [Sample folder][samples]\nwhich contains sample scripts showing how to use F#\u002B in your code.\n\nContributing and copyright\n--------------------------\n\nThe project is hosted on [GitHub][gh] where you can [report issues][issues], fork \nthe project and submit pull requests.\n\nIf you\u0027re adding a new public API, please also consider adding [documentation][content].\nYou might also want to read the [library design notes][design] to understand how it works.\n\nThe library is available under Apache License, Version 2.0, which allows modification and \nredistribution for both commercial and non-commercial purposes. For more information see the \n[License file][license] in the GitHub repository. \n\n  [content]: https://github.com/fsprojects/FSharpPlus/tree/master/docsrc/content\n  [samples]: https://github.com/fsprojects/FSharpPlus/tree/master/src/FSharpPlus.Docs/Samples\n  [gh]: https://github.com/fsprojects/FSharpPlus\n  [issues]: https://github.com/fsprojects/FSharpPlus/issues\n  [readme]: https://github.com/fsprojects/FSharpPlus/blob/master/README.md\n  [license]: https://github.com/fsprojects/FSharpPlus/blob/master/LICENSE.txt\n  [design]: https://github.com/fsprojects/FSharpPlus/blob/master/DESIGN_GUIDELINES.md\n*)"},{"uri":"/FSharpPlus/abstraction-category.html","title":"Category\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\nCategory\n========\n\nA category has an id and a composition operation.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060catId\u0060\u0060\n\n * \u0060\u0060catComp f g\u0060\u0060 / \u0060\u0060(\u003C\u003C\u003C)\u0060\u0060 f g\n\n*)\n(**\n    static member get_Id() : \u0027Category\u003C\u0027T, \u0027T\u003E\n    static member (\u003C\u003C\u003C) (f: \u0027Category\u003C\u0027U, \u0027V\u003E, g: \u0027Category\u003C\u0027T, \u0027U\u003E) : \u0027Category\u003C\u0027T, \u0027V\u003E\n*)\n(**\n\n\n\nOther operations\n----------------\n\n * \u0060\u0060(\u003E\u003E\u003E)\u0060\u0060\n*)\n(**\n    static member (\u003E\u003E\u003E) (g: \u0027Category\u003C\u0027T, \u0027U\u003E, f: \u0027Category\u003C\u0027U, \u0027V\u003E) : \u0027Category\u003C\u0027T, \u0027V\u003E\n*)\n(**\n\n\n\nRules\n-----\n*)\n(**\n    catId \u003C\u003C\u003C f = f \u003C\u003C\u003C catId = f\n*)\n(**\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060\u0027T -\u003E \u0027U\u0060\u0060\n -  \u0060\u0060Func\u003C\u0027T, \u0027U\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060Kleisli\u003C\u0027T, \u0027Monad\u003C\u0027U\u003E\u003E\u0060\u0060](type-kleisli.html)\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n*)"},{"uri":"/FSharpPlus/type-optiont.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-choicet.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-writert.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/abstraction-monoid.html","title":"Monoid\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nMonoid\n======\nTypes with an associative binary operation that has an identity.\n___\nMinimal complete definition\n---------------------------\n * \u0060zero\u0060\u0060\n * \u0060\u0060(\u002B) x y\u0060\u0060/\u0060\u0060(\u002B\u002B) x y\u0060\u0060\n*)\n(**\n    static member get_Zero () :\u0027Monoid\n    static member (\u002B) (x:\u0027Monoid, y:\u0027Monoid) :\u0027Monoid\n*)\n(**\nOther operations\n----------------\n * \u0060\u0060Seq.sum\u0060\u0060\n*)\n(**\n    static member Sum (x:Seq\u003C\u0027Monoid\u003E) :\u0027Monoid\n*)\n(**\nRules\n-----\n*)\n(**\n\tzero \u002B x = x\n    x \u002B zero = x\n    (x \u002B y) \u002B z = x \u002B (y \u002B z)\n    Seq.sum = Seq.fold (\u002B) zero\n    sum = fold (\u002B) zero (generic to all foldables)\n*)\n(**\nRelated Abstractions\n--------------------\n - [Semigroup](abstraction-semigroup.html): A monoid is a Semigroup with an additional \u0060\u0060zero\u0060\u0060 operation\n \n - [Alternative / MonadPlus](abstraction-alternative.html): Applicatives/Monads that are also Monoids. Though their monoidal definition could be different.\n\n\nConcrete implementations\n------------------------\nFrom .Net/F#\n \n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060string\u0060\u0060\n -  \u0060\u0060StringBuilder\u0060\u0060\n -  \u0060\u0060unit\u0060\u0060\n -  \u0060\u0060Set\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Map\u003C\u0027T,\u0027Monoid\u003E\u0060\u0060\n -  \u0060\u0060TimeSpan\u0060\u0060 \n -  \u0060\u0060Tuple\u003C\u0027Monoid1* ... *\u0027MonoidN\u003E\u0060\u0060\n -  \u0060\u0060\u0027Monoid1* ... *\u0027MonoidN\u0060\u0060\n -  \u0060\u0060Task\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027T-\u003E\u0027Monoid\u0060\u0060\n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Expr\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Dictionary\u003C\u0027T,\u0027Monoid\u003E\u0060\u0060\n -  \u0060\u0060IDictionary\u003C\u0027T,\u0027Monoid\u003E\u0060\u0060\n -  \u0060\u0060IReadOnlyDictionary\u003C\u0027T,\u0027Monoid\u003E\u0060\u0060\n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IEnumerator\u003C\u0027T\u003E\u0060\u0060\n \nFrom F#\u002B\n \n -  [\u0060\u0060ZipList\u003C\u0027T\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060Dual\u003C\u0027T\u003E\u0060\u0060](type-dual.html)\n -  [\u0060\u0060Endo\u003C\u0027T\u003E\u0060\u0060](type-endo.html)\n -  [\u0060\u0060All\u0060\u0060](type-all.html)\n -  [\u0060\u0060Any\u0060\u0060](type-any.html)\n -  [\u0060\u0060Const\u003C\u0027T,\u0027U\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060First\u003C\u0027T\u003E\u0060\u0060](type-first.html)\n -  [\u0060\u0060Last\u003C\u0027T\u003E\u0060\u0060](type-last.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n -  [\u0060\u0060Vector\u003C\u0027T,\u0027Dimension\u003E\u0060\u0060](type-vector.html)\n -  [\u0060\u0060Matrix\u003C\u0027T,\u0027Rows,\u0027Columns\u003E\u0060\u0060](type-matrix.html)\n\n \n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Math.Generic\nopen FSharpPlus.Data\n\n\n/// A monoid that represents results of comparisons\ntype Ordering = LT|EQ|GT with\n    static member        Zero = EQ\n    static member        (\u002B) (x:Ordering, y) = \n        match x, y with\n        | LT, _ -\u003E LT\n        | EQ, a -\u003E a\n        | GT, _ -\u003E GT\n\nlet inline compare\u0027 x y =\n    match compare x y with\n    | a when a \u003E 0 -\u003E GT\n    | a when a \u003C 0 -\u003E LT\n    | _            -\u003E EQ\n\nlet resGreater = compare\u0027 7 6\n\n/// A monoid of all numbers from 0 to 4\ntype Mod5 = Mod5 of uint32 with\n    static member inline get_Zero() = Mod5 0u\n    static member inline (\u002B) (Mod5 x, Mod5 y) = Mod5 ( (x \u002B y) % 5u)\nlet Mod5 x = Mod5 (x % 5u)\n\n\n// Results of Monoid operations\nlet emptyLst:list\u003Cint\u003E = zero\nlet zeroUint:Mod5   = zero\nlet res1 = zero \u002B\u002B Mod5 11u\nlet res2  = sum \u003C| map Mod5 [4u; 2u; 1u]\nlet res3  = sum [zero; Mod5 2G; Mod5 6G]\nlet res8n4 = [zero; [8;4]]\nlet res15 = Mult 15 \u002B\u002B zero\nlet resTrue = sum [zero; Any true]\nlet resFalse = sum (map All [true;false])\nlet resHi = zero \u002B\u002B \u0022Hi\u0022\nlet resGT = zero \u002B\u002B  GT\nlet resLT = sum [zero; LT ; EQ ;GT]\nlet res9823 = sum (map Dual [zero;\u00223\u0022;\u00222\u0022;\u00228\u0022;\u00229\u0022])\nlet resBA = Dual \u0022A\u0022 \u002B\u002B Dual \u0022B\u0022 \nlet resEl00:list\u003Cint\u003E*float = zero\nlet resS3P20     = (1G, Mult 5.0) \u002B\u002B  (2, Mult 4G)\nlet res230       = (zero,zero) \u002B\u002B ([2],[3.0])\nlet res243       = ([2;4],[3]) \u002B\u002B zero\nlet res23        = zero \u002B\u002B ([2],\u00223\u0022)\nlet resLtDualGt  =  (LT,Dual GT) \u002B\u002B zero\nlet res230hiSum2 = (zero, zero, 2) \u002B\u002B ([2], ([3.0], \u0022hi\u0022), zero)\nlet res230hiS4P3 = (zero, zero   ) \u002B\u002B ([2], ([3.0], \u0022hi\u0022, 4, Mult (6 % 2)))\nlet tuple5 :string*(Any*string)*(All*All*All)*int*string = zero"},{"uri":"/FSharpPlus/type-readert.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-first.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/extension-methods.html","title":"Extension Methods\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\nopen FSharpPlus\n\n(**\nExtension Methods\n=================\n\n*)\n\n(**\n\nSome methods are also exposed as extensions. This makes possible some uses from C#\n\nHere are some examples:\n\n*)\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus.Extensions\n\nlet opt  = Option.Sequence [Some 1; Some 2]\nlet asn = Async.Sequence [| async {return 1}; async {return 2} |]"},{"uri":"/FSharpPlus/abstraction-bifoldable.html","title":"Bifoldable\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\nBifoldable\n=======\n\nIntuitively a bifoldable is a type with 2 arguments, each of them being foldable.\n\n___\n\nA bifoldable (short for binary foldable) or foldable of two variables is a container of up to two elements whose components can be folded to a single value.\n\nUnlike bimap which preserves the container type, bifoldable will extract and fold the value.\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060bifoldMap f g x\u0060\u0060\n*)\n(**\n    static member BifoldMap (x:\u0027Bifoldable\u003C\u0027T,\u0027V\u003E, f:\u0027T-\u003E\u0027U, g:\u0027V-\u003E\u0027U) :\u0027U\n*)\n(**\n\n* \u0060\u0060bifold f g z x\u0060\u0060\n*)\n(**\n    static member Bifold (x:\u0027Bifoldable\u003C\u0027T,\u0027V\u003E, f:\u0027T-\u003E\u0027Monoid, g:\u0027V-\u003E\u0027Monoid, z: \u0027Monoid) :\u0027Monoid\n*)\n(**\n\n* \u0060\u0060bifoldBack f g x z\u0060\u0060\n*)\n(**\n    static member BifoldBack (x:\u0027Bifoldable\u003C\u0027T,\u0027V\u003E, f:\u0027T-\u003E\u0027Monoid, g:\u0027V-\u003E\u0027Monoid, z: \u0027Monoid) :\u0027Monoid\n*)\n(**\n\n\nOther operations\n----------------\n\n * \u0060\u0060bisum x\u0060\u0060\n*)\n(**\n    static member Bisum (x:Bifunctor\u003C\u0027T,\u0027T\u003E) :\u0027T\n*)\n\n(**\n\n\n\n\nRules\n-----\n*)\n(**\n    bisum x = bifoldMap id id x\n    bifoldMap f g x = bifoldBack (f \u003E\u003E (\u002B\u002B)) (g \u003E\u003E (\u002B\u002B)) x zero\n    bifoldBack f g x z = Endo.run (bifoldMap (f \u003E\u003E Endo) (g \u003E\u003E Endo) x) z\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Foldable](abstraction-foldable.html): All bifoldable contain up to two elements that are foldable to a single common type.\n - [Monoid](abstraction-monoid.html): For containers where the two elements are not disjoint, the same relation that foldable has to monoid applies.\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060\u0027T * \u0027U\u0060\u0060\n -  \u0060\u0060struct (\u0027T * \u0027U)\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060Choice\u003C\u0027T, \u0027U\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060Const\u003C\u0027C, \u0027T\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060Validation\u003C\u0027Error, \u0027T\u003E\u0060\u0060](type-validation.html)\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen FSharpPlus\nopen FSharpPlus.Control\n\nlet listMapSeqLength = List.map Seq.length\nlet listMapTimes2 = List.map ((*) 2)\n\nlet c1 : Choice\u003Cint list,string list\u003E = Choice1Of2 [1..2]\nlet c2 : Choice\u003Cint list,string list\u003E = Choice2Of2 [\u0022a\u0022;\u0022bbbb\u0022]\n\nbifoldBack (listMapSeqLength \u003E\u003E (\u002B\u002B)) (listMapTimes2 \u003E\u003E (\u002B\u002B)) c1 [0] // = [2;4;0]\nbifoldBack (listMapSeqLength \u003E\u003E (\u002B\u002B)) (listMapTimes2 \u003E\u003E (\u002B\u002B)) c2 [0] // = [1;4;0]\nbifoldMap listMapSeqLength listMapTimes2 c1 // = [2;4]\nbifoldMap listMapSeqLength listMapTimes2 c2 // = [1;4]\n\nlet t = (\u0022b\u0022,\u0022c\u0022)\nbifoldBack (\u002B\u002B) (\u002B\u002B) t \u0022a\u0022 // = \u0022bca\u0022\nbifold (\u002B\u002B) (\u002B\u002B) \u0022a\u0022 t // = \u0022abc\u0022\n\n// implementing on custom type:\ntype MyEither\u003C\u0027a,\u0027b\u003E = \n    | MyLeft of \u0027a \n    | MyRight of \u0027b\n    static member inline BifoldMap (x: MyEither\u003C_,_\u003E, f, g) =\n      match x with\n      | MyLeft a -\u003E f a\n      | MyRight a -\u003E g a\n\n    static member BifoldBack (x: MyEither\u003C_,_\u003E, f, g, z) =\n        match x with\n        | MyLeft a -\u003E f a z\n        | MyRight a -\u003E g a z\n\nbisum (MyEither.MyLeft \u0022a\u0022) // = \u0022a\u0022\nbisum (1,2) // = 3\n\n\nlet inline law1 x =\n  bisum x = bifoldMap id id x\n\nlaw1 (1,1) // = true\nlaw1 (Ok [1;2;3]) // = true\nlaw1 (Error [1;2;3]) // = true\nlaw1 (Choice1Of2 [1;2;3]) // = true\nlaw1 (Choice2Of2 [1;2;3]) // = true\nlaw1 (MyLeft [1;2;3]) // = true\nlaw1 (MyRight [1;2;3]) // = true\n\n\nlet inline law2 x f g =\n  bifoldMap f g x = bifoldBack (f \u003E\u003E (\u002B\u002B)) (g \u003E\u003E (\u002B\u002B)) x zero\n\nlaw2 (1,1) ((\u002B) 1) ((\u002B) 2) // = true\nlaw2 (Ok [1;2;3]) ((\u002B\u002B) [1]) ((\u002B\u002B) [2]) // = true\nlaw2 (\u0022a\u0022,\u0022b\u0022) ((\u002B) \u0022bbbb\u0022) ((\u002B) \u0022aaaa\u0022) // = true\n\nopen FSharpPlus.Data\nlet inline law3 x f g z =\n  bifoldBack f g x z = Endo.run (bifoldMap (f \u003E\u003E Endo) (g \u003E\u003E Endo) x) z\n\nlaw3 (1,1) (\u002B\u002B) (\u002B\u002B) 5 // = true\nlaw3 (\u0022a\u0022,\u0022b\u0022) (\u002B\u002B) (\u002B\u002B) \u0022abcd\u0022 // = true\nlaw3 (Ok [1;2;3]) (\u002B\u002B) (\u002B\u002B) [0;1;2;3;4] // = true"},{"uri":"/FSharpPlus/abstraction-monad.html","title":"Monad\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nMonad\n=====\n\nDefines the basic operations over a monad, a concept from a branch of mathematics known as category theory. From the perspective of an F# programmer, however, it is best to think of a monad as an abstract datatype of actions. F#\u002B generic computation expressions provide a convenient syntax for writing monadic expressions.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060return x\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060result x\u0060\u0060\n * \u0060\u0060(\u003E\u003E=) x f\u0060\u0060\n*)\n(**\n    static member Return (x: \u0027T) : \u0027Monad\u003C\u0027T\u003E\n    static member (\u003E\u003E=) (x: \u0027Monad\u003C\u0027T\u003E, f: \u0027T -\u003E \u0027Monad\u003C\u0027U\u003E) : \u0027Monad\u003C\u0027U\u003E\n*)\n(**\n\nNote: \u0060\u0060return\u0060\u0060 can\u0027t be used outside computation expressions, use \u0060\u0060result\u0060\u0060 instead.\n\nOther operations\n----------------\n\n * \u0060\u0060join\u0060\u0060\n*)\n(**\n    static member Join (x: \u0027Monad\u003C\u0027Monad\u003C\u0027T\u003E\u003E) : \u0027Monad\u003C\u0027T\u003E\n*)\n(**\n\n\n\nRules\n-----\n*)\n(**\n    return a \u003E\u003E= k = k a\n    m \u003E\u003E= return = m\n    m \u003E\u003E= (fun x -\u003E k x \u003E\u003E= h) = (m \u003E\u003E= k) \u003E\u003E= h\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Functor](abstraction-functor.html): Monads are automatically functors.\n \n - [Applicative](abstraction-applicative.html) : Monads are automatically applicatives.\n\n\nConcrete implementations\n------------------------\n\nFrom F#\n \n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T,\u0027U\u003E\u0060\u0060 \n -  \u0060\u0060Choice\u003C\u0027T,\u0027U\u003E\u0060\u0060\n -  \u0060\u0060\u0027Monoid * \u0027T\u0060\u0060\n -  \u0060\u0060struct (\u0027Monoid * \u0027T)\u0060\u0060\n -  \u0060\u0060Task\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027R-\u003E\u0027T\u0060\u0060\n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060Identity\u003C\u0027T\u003E\u0060\u0060](type-identity.html)\n -  [\u0060\u0060Cont\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-cont.html)\n -  [\u0060\u0060ContT\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-contt.html)\n -  [\u0060\u0060Reader\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-reader.html)\n -  [\u0060\u0060ReaderT\u003C\u0027R,\u0027Monad\u003C\u0027T\u003E\u003E\u0060\u0060](type-readert.html)\n -  [\u0060\u0060Writer\u003C\u0027Monoid,\u0027T\u003E\u0060\u0060](type-writer.html)\n -  [\u0060\u0060WriterT\u003C\u0027Monad\u003C\u0027T * \u0027Monoid\u003E\u003E\u0060\u0060](type-writert.html)\n -  [\u0060\u0060State\u003C\u0027S,\u0027T * \u0027S\u003E\u0060\u0060](type-state.html)\n -  [\u0060\u0060StateT\u003C\u0027S,\u0027Monad\u003C\u0027T * \u0027S\u003E\u003E\u0060\u0060](type-statet.html)\n -  [\u0060\u0060OptionT\u003C\u0027Monad\u003Coption\u003C\u0027T\u003E\u003E\u0060\u0060](type-optiont.html)\n -  [\u0060\u0060ValueOptionT\u003C\u0027Monad\u003Cvoption\u003C\u0027T\u003E\u003E\u0060\u0060](type-valueoptiont.html)\n -  [\u0060\u0060SeqT\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E\u0060\u0060](type-seqt.html)\n -  [\u0060\u0060ListT\u003C\u0027Monad\u003Clist\u003C\u0027T\u003E\u003E\u0060\u0060](type-listt.html)\n -  [\u0060\u0060ResultT\u003C\u0027Monad\u003CResult\u003C\u0027T,\u0027TError\u003E\u003E\u0060\u0060](type-resultt.html)\n -  [\u0060\u0060ChoiceT\u003C\u0027Monad\u003CChoice\u003C\u0027T,\u0027TError\u003E\u003E\u0060\u0060](type-choicet.html)\n -  [\u0060\u0060Free\u003C\u0027Functor\u003C\u0027T\u003E,\u0027T\u003E\u0060\u0060](type-free.html)\n -  [\u0060\u0060NonEmptyList\u003C\u0027T\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n \n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\n\nExamples\n--------\n\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n\n// Monads allow us to use our generic computation expressions\n\n// This will return the list [11;21;12;22] which is both lists combined in different ways with the (\u002B) operation\nlet lst11n21n12n22 =\n    monad {\n        let! x1 = [1;   2]\n        let! x2 = [10; 20]\n        return ((\u002B) x1 x2) }\n\n// This is the same example but with a non-empty list\nlet neLst11n21n12n22 = \n    monad {\n        let! x1 = { NonEmptyList.Head =  1; Tail =  [2] }\n        let! x2 = { NonEmptyList.Head = 10; Tail = [20] }\n        return ((\u002B) x1 x2)}\n\n// And now an example with options\nlet some14 =\n    monad {\n        let! x1 = Some 4\n        let! x2 = tryParse \u002210\u0022\n        return ((\u002B) x1 x2) }\n\n\n\n// MONAD TRANSFORMERS\n// ==================\n//\n// Monads do not compose directly, we need to use Monad Transformers\n\n(**\n\u0060\u0060\u0060f#\nlet fn : ResultT\u003CReader\u003Cint,Result\u003C_,string\u003E\u003E\u003E = \n    monad {\n       let! x1 = lift ask\n       let! x2 = \n           if x1 \u003E 0 then result 1\n           else ResultT (result (Error \u0022Negative value\u0022))\n       return x1 \u002B x2\n    }\n\nlet x = (fn |\u003E ResultT.run |\u003E Reader.run) 10\n// Result\u003Cint,string\u003E = Ok 11\nlet y = (fn |\u003E ResultT.run |\u003E Reader.run) -1\n// Result\u003Cint,string\u003E = Error \u0022Negative value\u0022\n\u0060\u0060\u0060\n*)\n\n\n// The following example comes from Haskell\n// async is used instead of IO\n\nopen System\n\n// First let\u0027s define some functions we\u0027ll use later\nlet getLine    = async { return Console.ReadLine () }\nlet putStrLn x = async { printfn \u0022%s\u0022 x }\nlet isValid s =\n    String.length s \u003E= 8\n        \u0026\u0026 String.exists Char.IsLetter s\n        \u0026\u0026 String.exists Char.IsNumber s\n        \u0026\u0026 String.exists Char.IsPunctuation s\n\nlet decodeError = function\n    | -1 -\u003E \u0022Password not valid\u0022\n    | _  -\u003E \u0022Unknown\u0022\n\n\n// Now the following functions compose the Error monad with the Async one.\n\nlet getValidPassword : ResultT\u003C_\u003E =\n    monad {\n        let! s = liftAsync getLine\n        if isValid s then return s\n        else return! throw -1}\n    \u003C/catch/\u003E\n        (fun s -\u003E throw (\u0022The error was: \u0022 \u002B decodeError s))\n\nlet askPassword = monad {\n    do! lift \u003C| putStrLn \u0022Insert your new password:\u0022\n    let! value = getValidPassword\n    //do! lift \u003C| putStrLn \u0022Storing in database...\u0022\n    return value}\n\n//try -\u003E Async.RunSynchronously (ResultT.run askPassword)\n\n\n// After getting used to monadic CEs it\u0027s natural\n// to feel the need to combine monads\n// (from https://stackoverflow.com/a/37900264 )\n\nmodule CombineWriterWithResult =\n    \n    let divide5By = function\n        | 0.0 -\u003E Error \u0022Divide by zero\u0022\n        | x   -\u003E Ok (5.0 / x)\n\n    let eitherConv logSuccessF logFailF f v =\n        ResultT \u003C|\n            match f v with\n            | Ok a -\u003E Writer(Ok a, [\u0022Success: \u0022 \u002B logSuccessF a])\n            | Error b -\u003E Writer(Error b, [\u0022ERROR: \u0022   \u002B logFailF b])\n\n    let ew = monad {\n        let! x = eitherConv (sprintf \u0022%f\u0022) (sprintf \u0022%s\u0022) divide5By 6.0\n        let! y = eitherConv (sprintf \u0022%f\u0022) (sprintf \u0022%s\u0022) divide5By 3.0\n        let! z = eitherConv (sprintf \u0022%f\u0022) (sprintf \u0022%s\u0022) divide5By 0.0\n        return (x, y, z) }\n\n    let (_, log) = ew |\u003E ResultT.run |\u003E Writer.run\n\n\n// You can also stack monad transformers.\n\n// A monad transformer and a monad is itself a monad, so you can pass that into another monad transformer.\n// For example, below we are stacking them like:\n// type Example = ReaderT\u003CDateTime, ResultT\u003CWriter\u003Cstring list, Result\u003Cstring * string * string, string\u003E\u003E\u003E\u003E)\n\n// Catch and throw is generic over all monad transformers in F#\u002B so catch works in this example\n// because there is a Result in the stack. We use it here to consolidate Result\u0027s \u0027TError.\n\nmodule CombineReaderWithWriterWithResult =\n\n    let divide5By : float -\u003E Result\u003Cfloat, string\u003E = function\n        | 0.0 -\u003E Error \u0022Divide by zero\u0022\n        | x   -\u003E Ok (5.0 / x)\n\n    let otherDivide5By : float -\u003E Result\u003Cfloat, unit\u003E  = function\n        | 0.0 -\u003E Error ()\n        | x   -\u003E Ok (5.0 / x)\n\n    let eitherConv f v =\n        ReaderT \u003C| fun (now : System.DateTime) -\u003E\n        ResultT \u003C|\n            match f v with\n            | Ok a    -\u003E Writer(Ok a,    [sprintf \u0022Success at %s: %A\u0022 (now.ToString \u0022o\u0022) a])\n            | Error b -\u003E Writer(Error b, [sprintf \u0022ERROR at %s: %A\u0022   (now.ToString \u0022o\u0022) b])\n\n    let divide = monad {\n        let! w = eitherConv divide5By       6.0\n        let! x = eitherConv divide5By       3.0\n        let! y = eitherConv divide5By       0.0\n        let! z = eitherConv otherDivide5By  0.0 \u003C/catch/\u003E (throw \u003C\u003C (fun _ -\u003E \u0022Unknown error\u0022))\n\n        return (w, x, y, z) }\n\n    let run expr = ReaderT.run expr \u003E\u003E ResultT.run \u003E\u003E Writer.run\n\n    let (_, log) = run divide DateTime.UtcNow\n\n\n// Many popular F# libraries are in fact an instantiation of a specific monad combination.\n// The following example demonstrate how to code a mini-Suave lib in a few lines\n\nmodule Suave =\n    // setup something that reminds us of what Suave can work with\n    // this is an overly simplified model of Suave in order to show how OptionT can be used \n    // in conjunction with generic Kleisli composition (fish) operator\n    type WebPart\u003C\u0027a\u003E = \u0027a -\u003E OptionT\u003CAsync\u003C\u0027a option\u003E\u003E\n    let inline succeed x = async.Return (Some x)\n\n    module Http =\n        type HttpResponse = { status: int; content: string }\n        type HttpRequest  = { url: Uri; \u0060\u0060method\u0060\u0060: string }\n        type HttpContext  = { request: HttpRequest; response: HttpResponse }\n\n    module Successful =\n        open Http\n        let private withStatusCode statusCode s =\n            OptionT \u003C\u003C fun ctx -\u003E { ctx with response = { ctx.response with status = statusCode; content = s }} |\u003E succeed\n        let OK s = withStatusCode 200 s\n        let BAD_REQUEST s = withStatusCode 400 s\n\n    module Filters =\n        open Http\n        let \u0060\u0060method\u0060\u0060 (m: string) =\n            OptionT \u003C\u003C fun (x: HttpContext) -\u003E async.Return (if (m = x.request.\u0060\u0060method\u0060\u0060) then Some x else None)\n        let GET  (x : HttpContext) = \u0060\u0060method\u0060\u0060 \u0022GET\u0022 x\n        let POST (x : HttpContext) = \u0060\u0060method\u0060\u0060 \u0022POST\u0022 x\n  \n        let path s =\n            OptionT \u003C\u003C fun (x: HttpContext) -\u003E async.Return (if (s = x.request.url.AbsolutePath) then Some x else None)\n\n    // Stub implementations: here you can plug Fleece or another similar Json library\n    let toJson o : string  = failwith \u0022Not implemented\u0022\n    let ofJson (s: string) = failwith \u0022Not implemented\u0022\n\n    module Request =\n        let tryGet _s (_r: Http.HttpRequest) = Ok \u0022FORM VALUE\u0022\n\n    let authenticated (f: Http.HttpContext -\u003E int -\u003E OptionT\u003CAsync\u003C\u0027a option\u003E\u003E) =\n        // we assume that authenticated executes f only if auth, otherwise returns 401\n        // we fake it as:\n        fun (ctx: Http.HttpContext) -\u003E f ctx -1\n\n    // Usage:\n    open Successful\n    open Filters\n    type Note = { id: int; text: string }\n    type NoteList = { notes: Note list; offset: int; chunk: int; total: int }\n    type IDb =\n        abstract member getUserNotes: int -\u003E Async\u003CNoteList\u003E\n        abstract member addUserNote: int -\u003E string -\u003E Async\u003CNote\u003E\n    type OverviewViewModel = { myNotes: Note list }\n    let app (db: IDb) =\n        let overview =\n            GET \u003E=\u003E (authenticated \u003C| fun ctx userId -\u003E\n                monad {\n                  let! res = lift (db.getUserNotes userId)\n                  let ovm = toJson { myNotes = res.notes }\n                  return! OK ovm ctx\n                })\n        let register =\n            POST \u003E=\u003E (authenticated \u003C| fun ctx userId -\u003E\n                monad {\n                  match ctx.request |\u003E Request.tryGet \u0022text\u0022 with \n                  | Ok text -\u003E\n                      let! newNote = lift (db.addUserNote userId text)\n                      let rvm = toJson newNote\n                      return! OK rvm ctx\n                  | Error msg -\u003E \n                      return! BAD_REQUEST msg ctx\n                })\n        choice [\n            path \u0022/\u0022 \u003E=\u003E (OK \u0022/\u0022)\n            path \u0022/note\u0022 \u003E=\u003E register\n            path \u0022/notes\u0022 \u003E=\u003E overview\n        ]\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog:\n\n   - [Grokking Monads](https://dev.to/choc13/grokking-monads-in-f-3j7f)\n   - [Grokking Monads Imperatively](https://dev.to/choc13/grokking-monads-imperatively-394a)\n   - [Grokking Monads Transformers](https://dev.to/choc13/grokking-monad-transformers-3l3)\n   \n   It contains examples using F#\u002B and an explanation from scratch.\n\n*)"},{"uri":"/FSharpPlus/computation-expressions.html","title":"Computations Expressions\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\nopen FSharpPlus\nopen FSharpPlus.Data\n\n(**\nComputations Expressions\n========================\n\nThis library allows to use some common computation expressions without writing any boiler plate code.\n\nFor applicatives there is single computation expression: \u0060\u0060applicative { .. }\u0060\u0060. Additionally \u0060\u0060applicative2 { .. }\u0060\u0060 and \u0060\u0060applicative3 { .. }\u0060\u0060 exists for composed (aka layered) applicatives.\n\nFor monadic code there is a single computation expression: \u0060\u0060monad { .. }\u0060\u0060 but it comes in 4 flavours:\n\n - Delayed or strict\n\n   Delayed computations require that the type implements a TryWith, TryFinally and optionally a Delay method.\n   F# comes with async and seq computation expressions, both are delayed.\n\n - It can have embedded side-effects or act as a monadplus\n\n   A monadplus can return (or yield) many times, so for example all expressions in a loop can be returned, whereas in the other model those expressions are of type unit, since a side effect is expected.\n\n   Async workflows is an example of a side-effect computation expression and seq expressions are an example of monadplus.\n\n   Side effect workflows don\u0027t have any additional requirement over the type (apart from the monad operations), but monadplus requires the additional [get_Empty and (\u003C|\u003E)](abstraction-alternative.html) methods.\n\n  The generic computation expression \u0060\u0060monad\u0060\u0060 is a side-effect one, but it can be turned into a monadplus by accessing the \u0060\u0060.plus\u0060\u0060 property. \n  Note that \u0060\u0060monad.fx\u0060\u0060 is an alias for \u0060\u0060monad\u0060\u0060: fx is used as an abbreviation for side-effects.\n\n  These computations are lazy by default, but they can be made strict by adding \u0060\u0060.strict\u0060\u0060 or using a \u0060\u0060\u0027\u0060\u0060, ie \u0060\u0060monad.plus\u0027\u0060\u0060.\n\nIn other words:\n\n - \u0060\u0060monad.fx\u0060\u0060 or simply \u0060\u0060monad\u0060\u0060: Lazy monadic builder. Use when you want to use side-effects instead of the additive behavior of monad plus.\n - \u0060\u0060monad.fx.strict\u0060\u0060 (or \u0060\u0060monad.fx\u0027\u0060\u0060 or simply \u0060\u0060monad.strict\u0060\u0060 or \u0060\u0060monad\u0027\u0060\u0060) is the strict version of \u0060\u0060monad\u0060\u0060.\n - \u0060\u0060monad.plus\u0060\u0060: Lazy additive monadic builder. Use when you expect one or more results.\n - \u0060\u0060monad.plus\u0027\u0060\u0060 is the strict version of \u0060\u0060monad.plus\u0060\u0060\n\nNote that a type is either lazy or strict, but it could act as fx or plus at the same time (see below some examples). This means that we need to pay attention when using a CE over a type, if the type is lazy but with use a strict monad, we\u0027ll get strict semantics which probably would make no sense, but if we do the opposite we might run into runtime errors, fortunately a compile-time warning (or error) will prevent us.\n\nA simple way to find out if a type is strict or lazy is to execute this in fsi: \u0060let _ : MyType\u003C\u0027t\u003E = monad { printfn \u0022I\u0027m strict\u0022 }\u0060\n\nFor layered monads (monad transformers) the general rule is: the monad is strict unless at least one of its constituent types is lazy, in that case the whole monad becomes lazy.\n\n*)\n\nlet _ : OptionT\u003Clist\u003Cunit option\u003E\u003E = monad { printfn \u0022I\u0027m strict\u0022 }\n// will print I\u0027m strict, because OptionT and list are strict\n\nlet _ : OptionT\u003Cseq\u003Cunit option\u003E\u003E = monad { printfn \u0022I\u0027m strict\u0022 }\n// won\u0027t print anything, because seq is lazy\n\n(**\n\n\nExamples\n========\n\nYou may run this script step-by-step.\n\n\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\n\nlet lazyValue = monad {\n    let! a = lazy (printfn \u0022I\u0027m lazy\u0022; 2)\n    let! b = lazy (printfn \u0022I\u0027m lazy too\u0022; 10)\n    return a \u002B b}\n\n// val lazyValue : System.Lazy\u003Cint\u003E = Value is not created.\n\nlet res12 = lazyValue.Value\n\n\nlet maybeWithSideFx = monad\u0027 { \n    let! a = Some 3\n    let b = ref 0\n    while !b \u003C 10 do \n        let! n = Some ()\n        incr b\n    if a = 3 then printfn \u0022got 3\u0022\n    else printfn \u0022got something else (will never print this)\u0022\n    return a }\n\n// val maybeWithSideFx : int option = Some 3\n\n\n\nlet lst = [None; None; Some 2; Some 4; Some 10; None]\n\nlet maybeManyTimes = monad.plus\u0027 {\n    let defaultValue = 42\n    let mutable i = 0\n    return! None\n    while i \u003C 5 do\n        printfn \u0022looping %i\u0022 i\n        i \u003C- i \u002B 1\n        return! lst.[i]\n    printfn \u0022halfway\u0022\n    return! None\n    printfn \u0022near the end\u0022\n    return defaultValue }\n\n// val maybeManyTimes : int option = Some 2\n\n\nlet (asnNumber: Async\u003C_\u003E) = monad.fx {\n    let mutable m = ResizeArray ()\n    try\n        for i = 1 to 10 do\n            m.Add i\n        return m.[-1]\n    with e -\u003E\n        return -3 }\n\n\nlet (lstNumber: list\u003C_\u003E) = monad.plus\u0027 {\n    try\n        for i = 1 to 10 do\n            return i\n    with e -\u003E\n        return -3 }\n\n\n(*\nFor more information about computation expressions you can read the paper : The F# Computation Expression Zoo\nhttp://tomasp.net/academic/papers/computation-zoo/computation-zoo.pdf\n*)"},{"uri":"/FSharpPlus/tutorial.html","title":"Introducing FSharpPlus\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nIntroducing FSharpPlus\n======================\n\n - Download binaries from [Nuget](https://www.nuget.org/packages/FSharpPlus/), use the latest CI version.\n\n - Open an F# script file or the F# interactive, reference the library and open the namespace\n\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\n(*** hide ***)\nmodule [\u003CAutoOpen\u003E] E1 =\n\n(**\nNow we\u0027ll start with a quick overview of the features presented in F#\u002B.\n\n### Generic functions \n\nThey are automatically available when opening the FSharpPlus namespace\n\nhere\u0027s an example with \u003Ccode\u003Emap\u003C/code\u003E ([fmap](https://wiki.haskell.org/Functor) for Haskellers, [Select](http://www.dotnetperls.com/select) for C-sharpers):\n\n*)\n\n  open FSharpPlus\n\n  map string [|2;3;4;5|]\n  // val it : string [] = [|\u00222\u0022; \u00223\u0022; \u00224\u0022; \u00225\u0022|]\n\n  map ((\u002B) 9) (Some 3)\n  // val it : int option = Some 12\n\n  open FSharpPlus.Data\n\n  map string (NonEmptyList.create 2 [3;4;5])\n  // val it : NonEmptyList\u003Cstring\u003E = {Head = \u00222\u0022; Tail = [\u00223\u0022; \u00224\u0022; \u00225\u0022];}\n\n(**\nThey\u0027re also available for your own types as long as they contain the appropriated method with the expected signature\n*)\n\n\n  type Tree\u003C\u0027t\u003E =\n      | Tree of \u0027t * Tree\u003C\u0027t\u003E * Tree\u003C\u0027t\u003E\n      | Leaf of \u0027t\n      static member Map (x:Tree\u003C\u0027a\u003E, f) = \n          let rec loop f = function\n              | Leaf x -\u003E Leaf (f x)\n              | Tree (x, t1, t2) -\u003E Tree (f x, loop f t1, loop f t2)\n          loop f x\n  \n  map ((*) 10) (Tree(6, Tree(2, Leaf 1, Leaf 3), Leaf 9))\n  // val it : Tree\u003Cint\u003E = Tree (60,Tree (20,Leaf 10,Leaf 30),Leaf 90)\n\n(**\nGeneric functions may be seen as an exotic thing in F# that only saves a few key strokes (\u003Ccode\u003Emap\u003C/code\u003E instead of \u003Ccode\u003EList.map\u003C/code\u003E or \u003Ccode\u003EArray.map\u003C/code\u003E) still they allow you to reach a higher abstraction level, using ad-hoc polymorphism.\n\nBut more interesting is the use of operators. You can\u0027t prefix them with the module they belong to, well you can but then it\u0027s no longer an operator. As an example many F# libraries define the bind operator \u003Ccode\u003E(\u003E\u003E=)\u003C/code\u003E but it\u0027s not generic so if you use two different types which are both monads you will need to prefix it e.g. \u003Ccode\u003EState.(\u003E\u003E=)\u003C/code\u003E and \u003Ccode\u003EReader.(\u003E\u003E=)\u003C/code\u003E which defeats the purpose of having an operator.\n\nHere you have a ready-to-use generic bind operator: \u0060\u0060\u003E\u003E=\u0060\u0060\n*)\n\n  let x = [\u0022hello\u0022;\u0022 \u0022;\u0022world\u0022] \u003E\u003E= (fun x -\u003E Seq.toList x)\n  // val x : char list = [\u0027h\u0027; \u0027e\u0027; \u0027l\u0027; \u0027l\u0027; \u0027o\u0027; \u0027 \u0027; \u0027w\u0027; \u0027o\u0027; \u0027r\u0027; \u0027l\u0027; \u0027d\u0027]\n\n\n  let tryParseInt : string -\u003E int option = tryParse\n  let tryDivide x n = if n = 0 then None else Some (x / n)\n\n  let y = Some \u002220\u0022 \u003E\u003E= tryParseInt \u003E\u003E= tryDivide 100\n  // val y : int option = Some 5\n\n(**\nYou have also the Kleisli composition (fish) operator:  \u0060\u0060\u003E=\u003E\u0060\u0060\n\nWhich is becoming popular in F# after the [Railway Oriented Programming](https://www.google.ch/#q=railway\u002Boriented\u002Bprogramming) tutorial series\n*)\n\n  let parseAndDivide100By = tryParseInt \u003E=\u003E tryDivide 100\n\n  let parsedAndDivide100By20 = parseAndDivide100By \u002220\u0022   // Some 5\n  let parsedAndDivide100By0\u0027 = parseAndDivide100By \u0022zero\u0022 // None\n  let parsedAndDivide100By0  = parseAndDivide100By \u00220\u0022    // None\n\n  let parseElement n = List.tryItem n \u003E=\u003E tryParseInt\n  let parsedElement  = parseElement 2 [\u00220\u0022; \u00221\u0022;\u00222\u0022]\n\n(**\nBut don\u0027t forget the above used operators are generic, so we can change the type of our functions and we get a different functionality for free:\n*)\n\n(*** hide ***)\nopen FSharpPlus\n\n(*** hide ***)\nmodule E2 =  \n\n  let tryParseInt x : Choice\u003Cint, string\u003E = \n      match tryParse x with \n      | Some x -\u003E Choice1Of2 x\n      | None   -\u003E Choice2Of2 (\u0022Failed to parse \u0022 \u002B x)\n        \n\n  let tryDivide x n = \n      if n = 0 then Choice2Of2 \u0022Can\u0027t divide by zero\u0022\n      else Choice1Of2 (x / n)\n\n(**\nThe test code remains unchanged, but we get a more interesting functionality\n*)\n\n  let parseAndDivide100By = tryParseInt \u003E=\u003E tryDivide 100\n\n  let parsedAndDivide100By20 = parseAndDivide100By \u002220\u0022   // Choice1Of2 5\n  let parsedAndDivide100By0\u0027 = parseAndDivide100By \u0022zero\u0022 // Choice2Of2 \u0022Failed to parse zero\u0022\n  let parsedAndDivide100By0  = parseAndDivide100By \u00220\u0022    // Choice2Of2 \u0022Can\u0027t divide by zero\u0022\n\n\n(**\n\nAlso when working with combinators, the generic applicative functor (space invaders) operator is very handy: \u0060\u0060\u003C*\u003E\u0060\u0060\n*)\n\n  let sumAllOptions = Some (\u002B) \u003C*\u003E Some 2 \u003C*\u003E Some 10     // val sumAllOptions : int option = Some 12\n\n  let sumAllElemets = [(\u002B)] \u003C*\u003E [10; 100] \u003C*\u003E [1; 2; 3]   // int list = [11; 12; 13; 101; 102; 103]\n\n(**\n\nFor more details and features, see [generic operators and functions](generic-doc.html)\n\nHere are all [generic operators and functions](reference\\fsharpplus-operators.html)\n\nAnd [here\u0027s a short explanation](applicative-functors.html) of Functor, Applicative and Monad abstractions with code samples.\n\n\n\n### Lens\n\n\n\nfrom https://github.com/ekmett/lens/wiki/Examples\n\n\nFirst, open F#\u002B Lens\n*)\n\n  open FSharpPlus.Lens\n\n(** Now, you can read from lenses (\u0060\u0060_2\u0060\u0060 is a lens for the second component of a tuple) *)\n\n  let r1 = (\u0022hello\u0022,\u0022world\u0022)^._2\n  // val it : string = \u0022world\u0022\n\n(** and you can write to lenses. *)\n  let r2 = setl _2 42 (\u0022hello\u0022,\u0022world\u0022)\n  // val it : string * int = (\u0022hello\u0022, 42)\n\n(**  Composing lenses for reading (or writing) goes in the order an imperative programmer would expect, and just uses \u0060\u0060(\u003C\u003C)\u0060\u0060. *)\n  let r3 = (\u0022hello\u0022,(\u0022world\u0022,\u0022!!!\u0022))^.(_2 \u003C\u003C _1)\n  // val it : string = \u0022world\u0022\n\n  let r4 = setl (_2 \u003C\u003C _1) 42 (\u0022hello\u0022,(\u0022world\u0022,\u0022!!!\u0022))\n  // val it : string * (int * string) = (\u0022hello\u0022, (42, \u0022!!!\u0022))\n\n(**  You can make a Getter out of a pure function with \u0060\u0060to\u0027\u0060\u0060. *)\n  let r5 = \u0022hello\u0022^.to\u0027 length\n  // val it : int = 5\n\n(**  You can easily compose a Getter with a Lens just using \u0060\u0060(\u003C\u003C)\u0060\u0060. No explicit coercion is necessary. *)\n  let r6 = (\u0022hello\u0022,(\u0022world\u0022,\u0022!!!\u0022))^. (_2 \u003C\u003C _2 \u003C\u003C to\u0027 length)\n  // val it : int = 3\n\n(**  As we saw above, you can write to lenses and these writes can change the type of the container. \u0060\u0060(.-\u003E)\u0060\u0060 is an infix alias for \u0060\u0060set\u0060\u0060. *)\n  let r7 = _1 .-\u003E \u0022hello\u0022 \u003C| ((),\u0022world\u0022)\n  // val it : string * string = (\u0022hello\u0022, \u0022world\u0022)\n\n(**  It can be used in conjunction with \u0060\u0060(|\u003E)\u0060\u0060 for familiar von Neumann style assignment syntax: *)\n  let r8 = ((), \u0022world\u0022) |\u003E _1 .-\u003E \u0022hello\u0022\n  // val it : string * string = (\u0022hello\u0022, \u0022world\u0022)\n\n(**  Conversely view, can be used as an prefix alias for \u0060\u0060(^.)\u0060\u0060. *)\n  let r9 = view _2 (10,20)\n  // val it : int = 20\n\n(**\n\nFor more details:\n\nHere\u0027s a full tour of [lens and all other optics](lens.html)\n\nHave a look at all [lens functions](reference\\fsharpplus-lens.html)\n*)"},{"uri":"/FSharpPlus/type-ziplist.html","title":"ZipList\u003C\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nZipList\u003C\u0027T\u003E\n===========\n\nThis is a wrapper over seq\u003C\u0027T\u003E which changes its applicative semantic to point-wise processing.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet seq1 = seq { 1..100000}\nlet seq2 = seq {10..100000}\n\nlet seq1_plus_seq2  = (\u002B) \u003C!\u003E ZipList seq1 \u003C*\u003E ZipList seq2\n\nopen FSharpPlus.Math.Applicative\n\nlet seq1_plus_seq2\u0027 = ZipList seq1 .\u002B. ZipList seq2\nlet arrCombined     = 10 *. ZipList seq1 .\u002B. ZipList seq2 .- 5\nlet asMonoid        = result \u0022Hello \u0022 \u003C/plus/\u003E ZipList [\u0022City\u0022; \u0022World\u0022; \u0022Sun\u0022]\n\n// try ZipList.run {the results}"},{"uri":"/FSharpPlus/type-dual.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-vector.html","title":"Vector\u003C\u0027NumType,\u0027Dimension\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n#r @\u0022../../src/FSharpPlus.TypeLevel/bin/Release/netstandard2.0/FSharpPlus.TypeLevel.dll\u0022\n\n(**\nVector\u003C\u0027NumType,\u0027Dimension\u003E\n===========================\n\nThis is a fixed size vector of a (typically) numeric type.\n\nRelated Tyes\n------------\n\n - [Matrix](type-matrix.html): Similar but for matrices\n \n\n\n\nAbstractions\n------------\n\n -  [Semigroup](abstraction-semigroup.html)\n -  [Monoid](abstraction-monoid.html)\n -  [Functor](abstraction-functor.html)\n -  [ZipFunctor](abstraction-misc.html)\n -  [Applicative](abstraction-applicative.html)\n -  [Foldable](abstraction-foldable.html)\n -  [Reducible](abstraction-misc.html)\n\n\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n#r @\u0022nuget: FSharpPlus.TypeLevel\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\nopen FSharpPlus.Data\n\n\nlet vector3d_1 = vector (1, 2, 3)\nlet vector3d_2 = vector (10, 20, 30)\n\n\n// Add two vectors\n\nlet vector3d_sum = vector3d_1 \u002B vector3d_2\n\n\n// Add a scalar\n\nlet vector3d_3 = vector (1, 2, 3) \u002B result 5\n\n\n// Another way\n\nopen FSharpPlus.Math.Generic\n\nlet vector3d_4 = vector (1, 2, 3) \u002B 5G"},{"uri":"/FSharpPlus/type-free.html","title":"Free\u003C\u0027Functor\u003C\u0027T\u003E, \u0027T\u0026gt;\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nFree\u003C\u0027Functor\u003C\u0027T\u003E, \u0027T\u003E\n======================\n\nThis type is an implementation of the [Free Monad](https://www.google.com/search?q=free\u002Bmonad) which is generic to any [Functor](abstraction-functor.html).\n\nThe Free Monad is used typically to describe a pure program at high level and separately write different interpreters for it.\n\nRelated Types\n-------------\n\n - [Coproduct](type-coproduct.html): A [Functor](abstraction-functor.html) used in conjunction with the Free Monad to combine different instruction sets.\n\n\n\n\nExamples\n--------\n\nFree monad-interpreter in F# from [Mark Seemann\u0027s blog](https://blog.ploeh.dk/2017/07/17/a-pure-command-line-wizard) but encoded with Free.\n\n*)\n\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen System\nopen FSharpPlus\nopen FSharpPlus.Data\n\n\ntype CommandLineInstruction\u003C\u0027t\u003E =\n    | ReadLine  of (string -\u003E \u0027t)\n    | WriteLine of  string  * \u0027t\nwith static member Map (x, f) =\n        match x with\n        | ReadLine   g     -\u003E ReadLine  (f \u003C\u003C g)\n        | WriteLine (s, g) -\u003E WriteLine (s, f g)\n\nlet readLine    = Free.liftF (ReadLine id)\nlet writeLine s = Free.liftF (WriteLine (s, ()))\n\n\nlet rec interpretCommandLine = Free.run \u003E\u003E function\n    | Pure x -\u003E x\n    | Roll (ReadLine      next)  -\u003E Console.ReadLine () |\u003E next |\u003E interpretCommandLine\n    | Roll (WriteLine (s, next)) -\u003E\n        Console.WriteLine s\n        next |\u003E interpretCommandLine\n\nlet rec readQuantity = monad {\n    do! writeLine \u0022Please enter number of diners:\u0022\n    let! l = readLine\n    match tryParse l with\n    | Some dinerCount -\u003E return dinerCount\n    | None -\u003E\n        do! writeLine \u0022Not an integer.\u0022\n        return! readQuantity }\n\nlet rec readDate = monad {\n    do! writeLine \u0022Please enter your desired date:\u0022\n    let! l = readLine\n    match DateTimeOffset.TryParse l with\n    | true, dt -\u003E return dt\n    | _ -\u003E\n        do! writeLine \u0022Not a date.\u0022\n        return! readDate }\n\nlet readName = monad {\n    do! writeLine \u0022Please enter your name:\u0022\n    return! readLine }\n \nlet readEmail = monad {\n    do! writeLine \u0022Please enter your email address:\u0022\n    return! readLine }\n\n\ntype Reservation = {\n    Date : DateTimeOffset\n    Name : string\n    Email : string\n    Quantity : int }\n    with static member Create (Quantity, Date, Name, Email) = { Date = Date; Name = Name; Email = Email; Quantity = Quantity }\n\nlet readReservationRequest =\n    curryN Reservation.Create\n    \u003C!\u003E readQuantity\n    \u003C*\u003E readDate\n    \u003C*\u003E readName\n    \u003C*\u003E readEmail\n\n\n\nlet mainFunc () =\n    readReservationRequest\n    \u003E\u003E= (writeLine \u003C\u003C (sprintf \u0022%A\u0022))\n    |\u003E interpretCommandLine\n    0\n\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking Free Monads](https://dev.to/choc13/grokking-free-monads-9jd) and [Interpreting Free Monads](https://dev.to/choc13/interpreting-free-monads-3l3e).\n   It contains examples using F#\u002B and an explanation from scratch.\n\n - Mark Seemann\u0027s blog has an [article series](https://blog.ploeh.dk/2017/06/27/pure-times/) which ends \n   up describing Free Monads although he doesn\u0027t use F#\u002B and therefore either repeats boilerplate code or switches to Haskell.\n   Anyways some code from those series (like the above fragment) can be found in [our test suite for Free](https://github.com/fsprojects/FSharpPlus/blob/master/tests/FSharpPlus.Tests/Free.fs) simplified using Free and Coproduct types.\n\n - Scott Wlaschin\u0027s [13 ways of looking at a turtle](https://fsharpforfunandprofit.com/posts/13-ways-of-looking-at-a-turtle) is also a series which ends up defining a Free Monad, without using F#\u002B but with boilerplate code instead.\n\n*)"},{"uri":"/FSharpPlus/parsing.html","title":"Parsing\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\nopen System\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\nopen FSharpPlus\n(**\n# Parsing\n\nF#\u002B provides several helper methods in order to simplify building parsers and parsing like tasks. \n*)\n\n(**\n## Parse\n\nParse allows you to use \u0060parse\u0060 generic method for standard types and types that implement a static Parse method with the correct signature.\n\n\n### Minimal definition\n\n*)\n\n(**\n\u0060\u0060\u0060f#\nstatic member Parse (x:\u0027r) :\u0027T\n\u0060\u0060\u0060\nor\n\n\u0060\u0060\u0060f#\nstatic member Parse (x:\u0027r, c:CultureInfo) :\u0027T\n\u0060\u0060\u0060\n\n*)\n\n(**\n## TryParse\n\nTryParse allows you to use \u0060tryParse\u0060 generic method for standard types and types that implement a static TryParse method with the correct signature.\n\n### Minimal definition\n\nIn order to use \u0060tryParse\u0060 together with a type the type needs to implement a TryParse like static method.\n\n*)\n\n(**\nYou can use F# style TryParse:\n\u0060\u0060\u0060f#\nstatic member TryParse(value:\u0027r) : \u0027T option\n\u0060\u0060\u0060\nor C# style TryParse:\n\u0060\u0060\u0060f#\nstatic member TryParse (x:\u0027r, [\u003COut\u003E] result: \u0027T byref) :bool\n\u0060\u0060\u0060\nexpressed in C# that would be:\n\u0060\u0060\u0060c#\npublic static bool TryParse (string x, out T result) \n\u0060\u0060\u0060\n\nA neat thing when you have types that implement the above definition is that it\u0027s simple to define active patterns:\n*)\n\nlet (|Port|_|) : _-\u003E UInt16 option = tryParse\nlet (|IPAddress|_|) :_-\u003ESystem.Net.IPAddress option = tryParse\n\n(**\n## sscanf, trySscanf and friends\n\nIn F# you have some nice utility functions for creating printf style string writer function. In F#\u002B we find the inverse: sscanf and trySscanf.\n\nFor instance if you want to parse based on known format of a url:\n*)\n\nlet route1 x = trySscanf \u0022/api/resource/%d\u0022 x\nlet parsed : int option = route1 \u0022/api/resource/1\u0022"},{"uri":"/FSharpPlus/type-endo.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-reader.html","title":"Reader\u003C\u0027R,\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nReader\u003C\u0027R,\u0027T\u003E\n=============\n\nThe Reader monad is good for computations which read values from a shared environment.\n\nRelated Types\n------------\n\n - [State](type-state.html): Similar, but it allows you to modify the environment.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\n(**\nOne usage of the Reader monad is an alternative to dependency injection or currying\nin order to pass around dependencies. The below code comes from [F# Online - Josef Star\u00FDchfojt\u016F - FSharpPlus - Advanced FP concepts in F#](https://www.youtube.com/watch?v=pxJCHJgG8ws). You can find the presenter on github as [@starychfojtu](https://github.com/starychfojtu).\n\nWhy would you want to do this style?\n\n- When you want to pass around a single environment instead of using dependency injection.\n\nWhy wouldn\u0027t you want to use this style?\n\n- The downside of this style is that it supposes that your environment is relatively immutable. If you have different lifetimes for different implementation classes dependency injection frameworks can be easier to use.\n\nNote:\n\n- The # in \u0060\u0060(env : #IUserRepository)\u0060\u0060 is a [flexible type annotation](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/flexible-types).\n*)\nopen System\nopen FSharpPlus\nopen FSharpPlus.Data\n\ntype IUserRepository =\n    abstract GetUser : email : string -\u003E string\n\ntype IShoppingListRepository =\n    abstract AddToCart : shoppingList : string list -\u003E string\n\nlet getUser email =\n    Reader(fun (env : #IUserRepository) -\u003E env.GetUser email)\n\nlet addToShoppingList shoppingListItems =\n    Reader(fun (env : #IShoppingListRepository) -\u003E env.AddToCart shoppingListItems)\n\nlet addShoppingListM email = monad {\n    let! user = getUser email\n    // \n    let shoppingListItems = [\u0022Apple\u0022; \u0022Pear\u0022;]\n    return! addToShoppingList shoppingListItems\n}\n\ntype MockDataEnv() = // This is how an environment could be constructed\n    interface IUserRepository with\n        member this.GetUser email =\n                \u0022Sandeep\u0022\n    interface IShoppingListRepository with\n            member this.AddToCart shoppingListItems =\n                sprintf \u0022Added the following items %A to the cart\u0022 shoppingListItems\n\nReader.run (addShoppingListM \u0022sandeep@test.com\u0022)  (MockDataEnv())\n\n(**\nSample from [The Reader monad on Haskell Wiki](https://wiki.haskell.org/All_About_Monads#The_Reader_monad)\n*)\nopen System\nopen FSharpPlus\nopen FSharpPlus.Data\n\n/// This the abstract syntax representation of a template\ntype Template =\n    /// Text\n    | T of string\n    /// Variable\n    | V of Template\n    /// Quote\n    | Q of Template\n    /// Include\n    | I of Template*(Definition list)\n    /// Compound\n    | C of Template list\nand Definition = | D of Template*Template\n\n/// Our environment consists of an association list of named templates and\n/// an association list of named variable values.\ntype Environment = {templates: Map\u003Cstring,Template\u003E\n                    variables: Map\u003Cstring,string\u003E}\n\n/// lookup a variable from the environment\nlet lookupVar (name:string) (env:Environment) : string option = tryItem name env.variables\n\n/// lookup a template from the environment\nlet lookupTemplate (name:string) (env:Environment) : Template option = tryItem name env.templates\n\n/// add a list of resolved definitions to the environment\nlet addDefs (defs:(string*string) list) env = { env with variables = plus (Map.ofList defs) env.variables}\n\n/// resolve a template into a string\nlet rec resolve : Template -\u003E Reader\u003CEnvironment,string\u003E  = function \n                       | T s -\u003E result s\n                       | V t -\u003E monad {\n                                   let! varName = resolve t\n                                   let! env = ask\n                                   let varValue = lookupVar varName env\n                                   return option id \u0022\u0022 varValue }\n                        | Q t -\u003E monad {\n                                   let! tmplName = resolve t\n                                   let! env = ask\n                                   let body = lookupTemplate tmplName env\n                                   return option string \u0022\u0022 body }\n                        | I (t,ds) -\u003E monad {\n                                    let! tmplName = resolve t\n                                    let! env = ask\n                                    let body = lookupTemplate tmplName env\n                                    match body with\n                                    | Some t\u0027 -\u003E\n                                                let! defs = List.traverse resolveDef ds\n                                                return! local (addDefs defs) (resolve t\u0027)\n                                    | None -\u003E return \u0022\u0022\n                                    }\n                        | C ts   -\u003E monad {\n                                      let! resolved = List.traverse resolve ts\n                                      return String.Concat\u003Cstring\u003E resolved\n                                    }\nand\n   /// resolve a Definition and produce a (name,value) pair\n   resolveDef: Definition -\u003E Reader\u003CEnvironment,string*string\u003E = \n                                      function \n                                      | D (t,d) -\u003E monad {\n                                        let! name = resolve t\n                                        let! value = resolve d\n                                        return (name,value) }\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking the Reader Monad](https://dev.to/choc13/grokking-the-reader-monad-4f45).\n   It contains examples using F#\u002B and an explanation from scratch.\n\n*)"},{"uri":"/FSharpPlus/generic-doc.html","title":"Generic operators and functions\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\nopen FSharpPlus\n\n(**\nGeneric operators and functions\n===============================\n\nAfter reviewing [extension functions](extensions.html) it\u0027s natural to want to\nuse generic functions that can work across different types.\n\nF#\u002B implements generic functions that efficiently call out to specific\nimplementations. This handles existing .Net and F# types, and you can use them\non your own and third-party types by implementing expected method names\nand signatures.\n\nRead about the specific operators:\n\n * Docs on [Operators - Common Combinators](operators-common.html)\n * Other docs exist for each [abstraction](abstractions.html)\n * API Doc for [Generic functions and operators](reference/fsharpplus-operators.html)\n\nThey\u0027re particularly useful in that the specific function called will\ndepend on the input arguments and return type. However, this means you\nsometimes need to explicitly specify the type if this information is\nnot available (actually it\u0027s a good debug technique to temporarily add\nthe types explicitly when the compiler tells you that the types are wrong).\n\nFor example:\n*)\n\n// Convert the number 42 to bytes... \n// ... here the type is known (42 is an int, the return value is byte[])\nlet a = 42 |\u003E toBytes;;  \n//val a : byte [] = [|42uy; 0uy; 0uy; 0uy|]\n\n// However, this can\u0027t compile since the return type is not inferrable\n// let b = [|42uy; 0uy; 0uy; 0uy|] |\u003E ofBytes;;  \n\n// The error will be something like:\n// \n//  let b = [|42uy; 0uy; 0uy; 0uy|] |\u003E ofBytes;;\n//  -----------------------------------^^^^^^^\n//\n// error FS0071: Type constraint mismatch when applying the default type \u0027obj\u0027\n// for a type inference variable. No overloads match for method \u0027OfBytes\u0027.\n// The available overloads are shown below. Consider adding further type constraints\n\n// [followed by many possible implementations...]\n\n// So, in this case, we have to give the return type:\nlet b :int = [|42uy; 0uy; 0uy; 0uy|] |\u003E ofBytes;;\n// val b : int = 42\n\n// ...or, the more usual case, you use in context where type can be inferred,\n// like this example:\n1 \u002B ([|42uy; 0uy; 0uy; 0uy|] |\u003E ofBytes);;\n//val it : int = 43\n\n(**\nHow do generic functions work?\n==============================\n\nF# does not support overloaded functions, but it does support overloaded\nmethods on types (classes) - including static methods. F#\u002B takes\nadvantage of this by definining generic functions that call out to\nan internal class (referred to as an \u0022Invokable\u0022) where various overloaded \nstatic methods are defined.\n\nAn Invokable is written such that the most specific, and hence, optimised\noverload is resolved for existing .Net and F# types, and that a more general\nimplementation is used otherwise.\n\nWhat does this all mean?\n\nIt means care is taken to use the most optimised implementation, and you can\nimplement your own instances of generic functions if you implement the required\nmethods.\n\nExamples\n========\n\nHere are some examples of the generic \u0060\u0060map\u0060\u0060 operation over existing .NET and F# types:\n\n*)\n\n\nmap string [|2;3;4;5|]\n// val it : string [] = [|\u00222\u0022; \u00223\u0022; \u00224\u0022; \u00225\u0022|]\n\nmap ((\u002B) 9) (Some 3)\n// val it : int option = Some 12\n\nlet res12 = map ((\u002B) 9) (async {return 3})\n// val it : Async\u003Cint\u003E = Microsoft.FSharp.Control.FSharpAsync\u00601[System.Int32]\nextract res12\n// val it : int = 12\n\n(**\nHere are some examples with types defined in this library:\n*)\n\nopen FSharpPlus.Data\n\nmap string (NonEmptyList.create 2 [3;4;5])\n// val it : NonEmptyList\u003Cstring\u003E = {Head = \u00222\u0022; Tail = [\u00223\u0022; \u00224\u0022; \u00225\u0022];}\n\nlet stateFul42 = map string (State (fun x -\u003E (42, x)))\nState.run stateFul42 \u0022state\u0022\n// val stateFul42 : State\u003Cstring,string\u003E = State \u003Cfun:map@12-9\u003E\n// val it : string * string = (\u002242\u0022, \u0022state\u0022)\n\n(**\nNow let\u0027s define our own type with its own map definition\n*)\n\ntype Tree\u003C\u0027t\u003E =\n    | Tree of \u0027t * Tree\u003C\u0027t\u003E * Tree\u003C\u0027t\u003E\n    | Leaf of \u0027t\n    static member Map (x:Tree\u003C\u0027a\u003E, f) = \n        let rec loop f = function\n            | Leaf x -\u003E Leaf (f x)\n            | Tree (x, t1, t2) -\u003E Tree (f x, loop f t1, loop f t2)\n        loop f x\n\nmap ((*) 10) (Tree(6, Tree(2, Leaf 1, Leaf 3), Leaf 9))\n// val it : Tree\u003Cint\u003E = Tree (60,Tree (20,Leaf 10,Leaf 30),Leaf 90)\n\n(**\n\nFor a type defined in an external library it will work when it contains a static member matching the expected name and signature.\n\nHere\u0027s an example of the generic function \u0060\u0060fromBigInt\u0060\u0060 targeting a type defined in the MathNet library\n*)\n#r \u0022../../packages/docs/MathNet.Numerics/lib/net40/MathNet.Numerics.dll\u0022\n#r \u0022../../packages/docs/MathNet.Numerics.FSharp/lib/net45/MathNet.Numerics.FSharp.dll\u0022\n\nlet x : MathNet.Numerics.BigRational = fromBigInt 10I"},{"uri":"/FSharpPlus/abstraction-zipapplicative.html","title":"ZipApplicative\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nZipApplicative\n==============\nA functor with application, providing operations to embed pure expressions (\u0060\u0060pur\u0060\u0060), run computations pointwise and/or paralell and combine their results (\u0060\u0060\u003C.\u003E\u0060\u0060).\n___\nMinimal complete definition\n---------------------------\n * \u0060\u0060pur x\u0060\u0060 \u0026nbsp; . \u0026nbsp; \u0060\u0060result x\u0060\u0060\n * \u0060\u0060(\u003C.\u003E) f x\u0060\u0060\n*)\n(**\n    static member Pure (x: \u0027T) : \u0027ZipApplicative\u003C\u0027T\u003E\n    static member (\u003C.\u003E) (f: \u0027ZipApplicative\u003C\u0027T -\u003E \u0027U\u003E, x: \u0027ZipApplicative\u003C\u0027T\u003E) : \u0027ZipApplicative\u003C\u0027U\u003E\n*)\n(**\n\n\nOther operations\n----------------\n\n* \u0060\u0060zip\u0060\u0060\n*)\n(**\n   static member Zip (x1: \u0027ZipApplicative\u003C\u0027T1\u003E, x2: \u0027ZipApplicative\u003C\u0027T2\u003E) : \u0027ZipApplicative\u003C\u0027T1 * \u0027T2\u003E\n*)\n(**\n* \u0060\u0060map2\u0060\u0060\n*)\n(**\n   static member Map2 (f: \u0027T1 -\u003E \u0027T2 -\u003E \u0027T, x1: \u0027ZipApplicative\u003C\u0027T1\u003E, x2: \u0027ZipApplicative\u003C\u0027T2\u003E) : \u0027ZipApplicative\u003C\u0027T\u003E\n*)\n\n(**\n* \u0060\u0060map3\u0060\u0060\n*)\n(**\n   static member Map3 (f: \u0027T1 -\u003E \u0027T2 -\u003E \u0027T3 -\u003E \u0027T, x1: \u0027ZipApplicative\u003C\u0027T1\u003E, x2: \u0027ZipApplicative\u003C\u0027T2\u003E, x3: \u0027ZipApplicative\u003C\u0027T3\u003E) : \u0027ZipApplicative\u003C\u0027T\u003E\n*)\n\n(**\n\n\nRules\n-----\n*)\n(**\n    pur id \u003C.\u003E v = v\n    pur (\u003C\u003C) \u003C.\u003E u \u003C.\u003E v \u003C.\u003E w = u \u003C.\u003E (v \u003C.\u003E w)\n    pur f \u003C*\u003E pur x = pur (f x)\n    u \u003C*\u003E pur y = pur ((|\u003E) y) \u003C.\u003E u\n*)\n(**\nRelated Abstractions\n--------------------\n - [Functor](abstraction-functor.html): A zipApplicative is a functor whose \u0060\u0060map\u0060\u0060 operation can be splitted in \u0060\u0060pur\u0060\u0060 and \u0060\u0060(\u003C.\u003E)\u0060\u0060 operations,\n \n - [ZipApplicative](abstraction-applicative.html) : ZipApplicatives are applicatives which usually don\u0027t form a [Monad](abstraction-monad.html).\n\nConcrete implementations\n------------------------\nFrom F#\n \n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060   *\n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060  *\n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060     *\n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060Choice\u003C\u0027T, \u0027U\u003E\u0060\u0060\n -  \u0060\u0060KeyValuePair\u003C\u0027Key, \u0027T\u003E\u0060\u0060  *\n -  \u0060\u0060\u0027Monoid * \u0027T\u0060\u0060            *\n -  \u0060\u0060ValueTuple\u003C\u0027Monoid, \u0027T\u003E\u0060\u0060 *\n -  \u0060\u0060Task\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027R -\u003E \u0027T\u0060\u0060        *\n -  \u0060\u0060Expr\u003C\u0027T\u003E\u0060\u0060        *\n \n \nFrom F#\u002B\n\n -  [\u0060\u0060NonEmptySeq\u003C\u0027T\u003E\u0060\u0060]\n -  [\u0060\u0060NonEmptyList\u003C\u0027T\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060Compose\u003C\u0027ZipApplicative1\u003C\u0027ZipApplicative2\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-compose.html)\n\n (*) The operation is the same as that for the normal applicative\n \n\nOnly for \u003C*\u003E operation:\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Map\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060Dictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060IDictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060IReadOnlyDictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\n\n\n// pointwise operations\n\nlet arr1 = (\u002B) \u003C!\u003E [|1;2;3|] \u003C*\u003E [|10;20;30|]\nlet arr2 = (\u002B) \u003C!\u003E [|1;2;3|] \u003C.\u003E [|10;20;30|]\n\n// val arr1: int array = [|11; 21; 31; 12; 22; 32; 13; 23; 33|]\n// val arr2: int array = [|11; 22; 33|]\n\n\n// Validations\n\nlet validated = applicative2\u0027 {\n    let! x = async { return Ok 1 }\n    and! y = async { return Ok 2 }\n    and! z = async { return Error [\u0022Error\u0022] }\n    return x \u002B y \u002B z\n}\n\nvalidated |\u003E Async.RunSynchronously\n// val it: Result\u003Cint,string list\u003E = Error [\u0022Error\u0022]"},{"uri":"/FSharpPlus/type-identity.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/abstraction-applicative.html","title":"Applicative\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nApplicative\n===========\nA functor with application, providing operations to embed pure expressions (\u0060\u0060return\u0060\u0060), and sequence computations and combine their results (\u0060\u0060\u003C*\u003E\u0060\u0060).\n___\nMinimal complete definition\n---------------------------\n * \u0060\u0060return x\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060result x\u0060\u0060\n * \u0060\u0060(\u003C*\u003E) f x\u0060\u0060\n*)\n(**\n    static member Return (x: \u0027T) : \u0027Applicative\u003C\u0027T\u003E\n    static member (\u003C*\u003E) (f: \u0027Applicative\u003C\u0027T -\u003E \u0027U\u003E, x: \u0027Applicative\u003C\u0027T\u003E) : \u0027Applicative\u003C\u0027U\u003E\n*)\n(**\nNote: \u0060\u0060return\u0060\u0060 can\u0027t be used outside computation expressions, use \u0060\u0060result\u0060\u0060 instead.\n\n\nOther operations\n----------------\n\n* \u0060\u0060lift2\u0060\u0060\n*)\n(**\n   static member Lift2 (f: \u0027T1 -\u003E \u0027T2 -\u003E \u0027T, x1: \u0027Applicative\u003C\u0027T1\u003E, x2: \u0027Applicative\u003C\u0027T2\u003E) : \u0027Applicative\u003C\u0027T\u003E\n*)\n(**\n\n\nRules\n-----\n*)\n(**\n    result id \u003C*\u003E v = v\n    result (\u003C\u003C) \u003C*\u003E u \u003C*\u003E v \u003C*\u003E w = u \u003C*\u003E (v \u003C*\u003E w)\n    result f \u003C*\u003E result x = result (f x)\n    u \u003C*\u003E result y = result ((|\u003E) y) \u003C*\u003E u\n*)\n(**\nRelated Abstractions\n--------------------\n - [Functor](abstraction-functor.html): An applicative is a functor whose \u0060\u0060map\u0060\u0060 operation can be splitted in \u0060\u0060return\u0060\u0060 and \u0060\u0060(\u003C*\u003E)\u0060\u0060 operations,\n \n - [Monad](abstraction-monad.html) : Monads are functors with an additional \u0060\u0060Join\u0060\u0060 operation,\nConcrete implementations\n------------------------\nFrom F#\n \n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027T [,]\u0060\u0060\n -  \u0060\u0060\u0027T [,,]\u0060\u0060\n -  \u0060\u0060\u0027T [,,,]\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060IObservable\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T,\u0027U\u003E\u0060\u0060 \n -  \u0060\u0060Choice\u003C\u0027T,\u0027U\u003E\u0060\u0060\n -  \u0060\u0060KeyValuePair\u003C\u0027Key,\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027Monoid * \u0027T\u0060\u0060\n -  \u0060\u0060ValueTuple\u003C\u0027Monoid, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060Task\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027R-\u003E\u0027T\u0060\u0060\n -  \u0060\u0060Expr\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n \nFrom F#\u002B\n\n -  [\u0060\u0060Identity\u003C\u0027T\u003E\u0060\u0060](type-identity.html)\n -  [\u0060\u0060Cont\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-cont.html)\n -  [\u0060\u0060ContT\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-contt.html)\n -  [\u0060\u0060Reader\u003C\u0027R,\u0027T\u003E\u0060\u0060](type-reader.html)\n -  [\u0060\u0060ReaderT\u003C\u0027R,\u0027Monad\u003C\u0027T\u003E\u003E\u0060\u0060](type-readert.html)\n -  [\u0060\u0060Writer\u003C\u0027Monoid,\u0027T\u003E\u0060\u0060](type-writer.html)\n -  [\u0060\u0060WriterT\u003C\u0027Monad\u003C\u0027T * \u0027Monoid\u003E\u003E\u0060\u0060](type-writert.html)\n -  [\u0060\u0060State\u003C\u0027S,\u0027T * \u0027S\u003E\u0060\u0060](type-state.html)\n -  [\u0060\u0060StateT\u003C\u0027S,\u0027Monad\u003C\u0027T * \u0027S\u003E\u003E\u0060\u0060](type-statet.html)\n -  [\u0060\u0060OptionT\u003C\u0027Monad\u003Coption\u003C\u0027T\u003E\u003E\u0060\u0060](type-optiont.html)\n -  [\u0060\u0060ValueOptionT\u003C\u0027Monad\u003Cvoption\u003C\u0027T\u003E\u003E\u0060\u0060](type-valueoptiont.html)\n -  [\u0060\u0060SeqT\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E\u0060\u0060](type-seqt.html)\n -  [\u0060\u0060ListT\u003C\u0027Monad\u003Clist\u003C\u0027T\u003E\u003E\u0060\u0060](type-listt.html)\n -  [\u0060\u0060ResultT\u003C\u0027Monad\u003CResult\u003C\u0027T,\u0027TError\u003E\u003E\u0060\u0060](type-resultt.html)\n -  [\u0060\u0060ChoiceT\u003C\u0027Monad\u003CChoice\u003C\u0027T,\u0027TError\u003E\u003E\u0060\u0060](type-choicet.html)\n -  [\u0060\u0060Free\u003C\u0027Functor\u003C\u0027T\u003E,\u0027T\u003E\u0060\u0060](type-free.html)\n -  [\u0060\u0060NonEmptyList\u003C\u0027T\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060Validation\u003C\u0027Error,\u0027T\u003E\u0060\u0060](type-validation.html)\n -  [\u0060\u0060ZipList\u003C\u0027T\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060ParallelArray\u003C\u0027T\u003E\u0060\u0060](type-parallelarray.html)\n -  [\u0060\u0060Const\u003C\u0027C,\u0027T\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060Compose\u003C\u0027Applicative1\u003C\u0027Applicative2\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-compose.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n -  [\u0060\u0060Vector\u003C\u0027T,\u0027Dimension\u003E\u0060\u0060](type-vector.html)\n -  [\u0060\u0060Matrix\u003C\u0027T,\u0027Rows,\u0027Columns\u003E\u0060\u0060](type-matrix.html)\n \nRestricted:\n -  \u0060\u0060string\u0060\u0060\n -  \u0060\u0060StringBuilder\u0060\u0060\n -  \u0060\u0060Set\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IEnumerator\u003C\u0027T\u003E\u0060\u0060\n\nOnly for \u003C*\u003E operation:\n -  \u0060\u0060Map\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060Dictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060IDictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060IReadOnlyDictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n// Apply \u002B4 to a list\nlet lst5n6  = map ((\u002B) 4) [ 1; 2 ]\n\n// Apply \u002B4 to an array\nlet arr5n6  = map ((\u002B) 4) [|1; 2|]\n\n// I could have written this\nlet arr5n6\u0027 = (\u002B) \u003C!\u003E [|4|] \u003C*\u003E [|1; 2|]\n\n// Add two options\nlet opt120  = (\u002B) \u003C!\u003E Some 20 \u003C*\u003E tryParse \u0022100\u0022\n\n\n// Applicatives need Return (result)\n\n// Test return\nlet resSome22 : option\u003C_\u003E = result 22\nlet resSing22 : list\u003C_\u003E   = result 22\nlet resLazy22 : Lazy\u003C_\u003E   = result 22\nlet (quot5 : Microsoft.FSharp.Quotations.Expr\u003Cint\u003E) = result 5\n\n// Example\ntype Person = { Name: string; Age: int } with static member create n a = { Name = n; Age = a }\n\nlet person1 = Person.create \u003C!\u003E tryHead [\u0022gus\u0022] \u003C*\u003E tryParse \u002242\u0022\nlet person2 = Person.create \u003C!\u003E tryHead [\u0022gus\u0022] \u003C*\u003E tryParse \u0022fourty two\u0022\nlet person3 = Person.create \u003C!\u003E tryHead [\u0022gus\u0022] \u003C*\u003E (tryHead [\u002242\u0022] \u003E\u003E= tryParse)\n\n\n// Other ways to write applicative expressions\n\n\n// Function lift2 helps in many cases\n\nlet person1\u0027 = (tryHead [\u0022gus\u0022], tryParse \u002242\u0022)               ||\u003E lift2 Person.create \nlet person2\u0027 = (tryHead [\u0022gus\u0022], tryParse \u0022fourty two\u0022)       ||\u003E lift2 Person.create \nlet person3\u0027 = (tryHead [\u0022gus\u0022], tryHead [\u002242\u0022] \u003E\u003E= tryParse) ||\u003E lift2 Person.create \n\n\n// Using Idiom brackets from http://www.haskell.org/haskellwiki/Idiom_brackets\n\nlet res3n4   = iI ((\u002B) 2) [1;2] Ii\nlet res3n4\u0027  = iI (\u002B) (result 2) [1;2] Ii\nlet res18n24 = iI (\u002B) (ZipList(seq [8;4])) (ZipList(seq [10;20])) Ii\n\nlet tryDiv x y = if y = 0 then None else Some (x \u003C/div/\u003E y)\nlet resSome3   = join (iI tryDiv (Some 6) (Some 2) Ii)\nlet resSome3\u0027  =       iI tryDiv (Some 6) (Some 2) Ji\n\nlet tryDivBy y = if y = 0 then None else Some (fun x -\u003E x \u003C/div/\u003E y)\nlet resSome2  = join (result tryDivBy  \u003C*\u003E Some 4) \u003C*\u003E Some 8\nlet resSome2\u0027 = join (   iI tryDivBy (Some 4) Ii) \u003C*\u003E Some 8\n\nlet resSome2\u0027\u0027 = iI tryDivBy (Some 4) J (Some 8) Ii\nlet resNone    = iI tryDivBy (Some 0) J (Some 8) Ii\nlet res16n17   = iI (\u002B) (iI (\u002B) (result 4) [2; 3] Ii) [10] Ii\n\nlet opt121  = iI (\u002B) (Some 21) (tryParse \u0022100\u0022) Ii\nlet opt122  = iI tryDiv (tryParse \u0022488\u0022) (trySqrt 16) Ji\n\n\n// Using applicative math operators\n\nopen FSharpPlus.Math.Applicative\n\nlet opt121\u0027  = Some 21 .\u002B. tryParse \u0022100\u0022\nlet optTrue  = 30 \u003E. tryParse \u002229\u0022\nlet optFalse = tryParse \u002230\u0022 .\u003C 29\nlet m1m2m3 = -.[1; 2; 3]\n\n\n// Using applicative computation expression\n\nlet getName s = tryHead s\nlet getAge  s = tryParse s\n\nlet person4 = applicative {\n    let! name = getName [\u0022gus\u0022]\n    and! age  = getAge \u002242\u0022\n    return { Name = name; Age = age } }\n\n\n(**\n\nComposing applicatives\n----------------------\n\nUnlike monads, applicatives are always composable.\n\nThe date type [\u0060\u0060Compose\u003C\u0027Applicative1\u003C\u0027Applicative2\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-compose.html) can be used to compose any 2 applicatives:\n*)\n\nlet res4 = (\u002B) \u003C!\u003E Compose [Some 3] \u003C*\u003E Compose [Some 1]\n\nlet getNameAsync s = async { return tryHead s }\nlet getAgeAsync  s = async { return tryParse s }\n\nlet person5 = Person.create \u003C!\u003E Compose (getNameAsync [\u0022gus\u0022]) \u003C*\u003E Compose (getAgeAsync \u002242\u0022)\n\n(**\n\nThe computation expressions applicative2 and applicative3 can also be used to compose applicatives:\n*)\n\nlet person6 = applicative2 {\n    let! name = printfn \u0022aa\u0022; getNameAsync [\u0022gus\u0022]\n    and! age  = getAgeAsync \u002242\u0022\n    return { Name = name; Age = age } }\n\n\n\n\n// A Monad is automatically an Applicative\n\ntype MyList\u003C\u0027s\u003E = MyList of \u0027s seq with\n    static member Return (x: \u0027a) = MyList (Seq.singleton x)\n    static member (\u003E\u003E=)  (MyList x: MyList\u003C\u0027T\u003E, f) = MyList (Seq.collect (f \u003E\u003E (fun (MyList x) -\u003E x)) x)\n\nlet mappedMyList : MyList\u003C_\u003E = (MyList [(\u002B) 1; (\u002B) 2; (\u002B) 3]) \u003C*\u003E (MyList [1; 2; 3])\n\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking Applicatives](https://dev.to/choc13/grokking-applicatives-44o1).\n   It contains examples using F#\u002B and an explanation from scratch.\n\n*)"},{"uri":"/FSharpPlus/type-matrix.html","title":"Matrix\u003C\u0027NumType,\u0027Rows,\u0027Cols\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n#r @\u0022../../src/FSharpPlus.TypeLevel/bin/Release/netstandard2.0/FSharpPlus.TypeLevel.dll\u0022\n\n(**\nMatrix\u003C\u0027NumType,\u0027Rows,\u0027Cols\u003E\n========================================\n\nThis is a fixed size matrix of a (typically) numeric type.\n\nRelated Tyes\n------------\n\n - [Vector](type-vector.html): Similar but for vectors\n \n\n\n\nAbstractions\n------------\n\n -  [Semigroup](abstraction-semigroup.html)\n -  [Monoid](abstraction-monoid.html)\n -  [Functor](abstraction-functor.html)\n -  [Applicative](abstraction-applicative.html)\n\n\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n#r @\u0022nuget: FSharpPlus.TypeLevel\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet matrix3x4_1 =\n    matrix (\n      (1, 0, 0, 0),\n      (0, 1, 0, 0),\n      (0, 0, 0, 0)\n    )\n\nlet matrix3x4_2 =\n    matrix (\n      (10, 0, 100, 0),\n      (30, 1, 100, 0),\n      (60, 0, 100, 0)\n    )\n\n\n// Add two matrices\n\nlet matrix3x4_sum = matrix3x4_1 \u002B matrix3x4_2\n\n\n// Add a scalar\n\nlet matrix3x4_3 = matrix3x4_1 \u002B result 5\n\n\n// Another way\n\nopen FSharpPlus.Math.Generic\n\nlet vector3d_4 = matrix3x4_1 \u002B 5G"},{"uri":"/FSharpPlus/type-mult.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-const.html","title":"Const\u003C\u0027T,\u0027U\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nConst\u003C\u0027T,\u0027U\u003E\n============\n\nThe Const functor, defined as Const\u0026lt;\u0026#39;T, \u0026#39;U\u0026gt; where \u0026#39;U is a phantom type. Useful for: Lens getters Its applicative instance plays a fundamental role in Lens.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Lens\nopen FSharpPlus.Data\n// note for instance the definition of view (from the Lens part of F#\u002B):\nlet view (optic: (\u0027a -\u003E Const\u003C_,\u0027b\u003E) -\u003E _ -\u003E Const\u003C_,\u0027t\u003E) (source: \u0027s) : \u0027a = Const.run (optic Const source)"},{"uri":"/FSharpPlus/types.html","title":"Types\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n(**\n\nTypes\n=====\n\nClick on the type name for a full description:\n\n \n * [All](type-all.html)\n * [Any](type-any.html)\n * [ChoiceT](type-choicet.html)\n * [Compose](type-compose.html)\n * [Const](type-const.html)\n * [Cont](type-cont.html)\n * [ContT](type-contt.html)\n * [Coproduct](type-coproduct.html)\n * [DList](type-dlist.html)\n * [Dual](type-dual.html)\n * [Endo](type-endo.html)\n * [First](type-first.html)\n * [Free](type-free.html)\n * [Identity](type-identity.html)\n * [Kleisli](type-kleisli.html)\n * [Last](type-last.html)\n * [ListT](type-listt.html)\n * [Mult](type-mult.html)\n * [NonEmptyList](type-nonempty.html)\n * [OptionT](type-optiont.html)\n * [ParallelArray](type-parallelarray.html)\n * [Reader](type-reader.html)\n * [ReaderT](type-readert.html)\n * [ResultT](type-resultt.html)\n * [SeqT](type-seqt.html)\n * [State](type-state.html)\n * [StateT](type-statet.html)\n * [Validation](type-validation.html)\n * [Writer](type-writer.html)\n * [WriterT](type-writert.html)\n * [ZipList](type-ziplist.html)\n*)"},{"uri":"/FSharpPlus/type-nonempty-set.html","title":"NonEmptySet\u003C\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nNonEmptySet\u003C\u0027T\u003E\n================\n\nA type-safe set that contains at least one element.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n(**\n### Constructing NonEmptySet\n*)\n// you can construct a NonEmptySet by using NonEmptySet.Create\nlet set123 = NonEmptySet.Create(1, 2, 3)\n\nlet set4 = NonEmptySet.singleton 4\nlet set4\u0027 : NonEmptySet\u003Cint\u003E = result 4\n\n// union two NonEmptySets\nlet set1234 = NonEmptySet.union set123 set4\n\n// in order to get back to a regular set you can then use NonEmptySet.toSet:\nlet set1234\u0027 = NonEmptySet.toSet set1234\n\n\n(**\n### Operations on NonEmptySet\n*)\n\nlet set12345 = set1234 |\u003E NonEmptySet.add 5\n\nlet set12345\u0027 = NonEmptySet.unionMany (NonEmptyList.create set123 [set4; result 5])\n\nprintfn \u0022%b\u0022 (NonEmptySet.isSubset set1234 set12345)\n\n"},{"uri":"/FSharpPlus/type-statet.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-resultt.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/operators-common.html","title":"Operators - Common Combinators\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\nopen FSharpPlus\n\n(**\n# Operators - Common Combinators\n\nThese generic functions and operators are used commonly and are not part\nof any other abstraction.\n\nYou can find these in the API docs: [Operators.fs](reference/operators.html)\n\n## flip\n\nCreates a new function with first two arguments flipped.\n\n\n## konst\n\nCreate a function that always returns the given argument.\nThis is known as a \u0027constant\u0027 function.\n\nThis is commonly useful where a function is required as a parameter\nfor flexibility, but isn\u0027t required in a specific instance.\n\nexample:\n*)\nlet a = [1;2;3] |\u003E filter (konst true);; \n// val a : int list = [1; 2; 3]\n\n(**\n## curry, uncurry, curryN, uncurryN\n\nCurrying is the process of taking a function expecting a tuple, and returning a\nfunction with the same number of arguments as the tuple size.\n\nUncurrying is the reverse process.\n\nThere is \u0060curry\u0060 and \u0060uncurry\u0060 that work on two arguments each, while \u0060curryN\u0060\nand \u0060uncurryN\u0060 work on any number.\n\nexample:\n*)\nlet addThreeNums (x, y, z) = x \u002B y \u002B z;;\n// val addThreeNums : x:int * y:int * z:int -\u003E int\n\nlet b = curryN addThreeNums 1 2 3;;\n// val it : int = 6\n\n(**\n## Functions as operators - \u003C/ /\u003E\n\nA pair of operators \u0060\u003C/\u0060 and \u0060/\u003E\u0060 are defined to allow any function to be used as\nan operator. It will flip the args of your function so that it makes sense when\nthe first argument is coming from the left-hand-side.\n\nexample:\n*)\nlet biggerThan a b = a \u003E b;;\n// val biggerThan : a:\u0027a -\u003E b:\u0027a -\u003E bool when \u0027a : comparison\n\nlet c = 10 \u003C/biggerThan/\u003E 3;;\n// val c : bool = true\n\n(**\n## tap\n\nTap executes a side-effect function, then returns the original input value.\nConsider this as \u0027tapping into\u0027 a chain of functions.\n\nexample:\n*)\n// a pipeline of functions, with a tap in the middle\nlet names = [\u0022John\u0022; \u0022Smith\u0022]\nnames |\u003E map String.toUpper |\u003E tap (printfn \u0022%A\u0022) |\u003E map String.toLower;;\n\n// prints this:\n// [\u0022JOHN\u0022; \u0022SMITH\u0022]\n\n// but returns this:\n// val it : string list = [\u0022john\u0022; \u0022smith\u0022]\n\n(**\n## either\n\nExtracts the value inside a Result from either side - whether Ok or Error.\n\nIt takes a pair of functions:\n\n * fOk - a function applied to the source if it contains an Ok value\n * fError - a function applied to the source if it contains an Error value\n\n...and the source:\n\n * source - the source value containing an Ok or Error\n\n*)\nlet myResult = Ok \u0022I am ok!\u0022;;\n// val myResult : Result\u003Cstring,\u0027a\u003E\n\nlet myOther = Error -1;;\n// val myOther : Result\u003C\u0027a,int\u003E\n\nlet d = either id id myResult;;\n// val d : string = \u0022I am ok!\u0022\n\nlet e = either id id myOther;;\n// val e : int = -1\n\n(**\nDon\u0027t confuse the \u0060either\u0060 function with \u0060result\u0060 which lifts a value into a\nFunctor, just like \u0060return\u0060 when in a computation expression.\n\n\n## option\n\nTakes a function, a default value and a option value. If the option value is None, the function returns the default value.\nOtherwise, it applies the function to the value inside Some and returns the result.\n*)\nlet inline option f n = function Some x -\u003E f x | None -\u003E n\n\n(**\n\n## tuple2, tuple3, ...tuple8\n\nFunctions that generate a tuple. The number indicates the number of arguments\nthat are defined, and the corresponding size of tuple.\n\n*)\nlet inline tuple2 a b             = a,b\nlet inline tuple3 a b c           = a,b,c\nlet inline tuple4 a b c d         = a,b,c,d\nlet inline tuple5 a b c d e       = a,b,c,d,e\nlet inline tuple6 a b c d e f     = a,b,c,d,e,f\nlet inline tuple7 a b c d e f g   = a,b,c,d,e,f,g\nlet inline tuple8 a b c d e f g h = a,b,c,d,e,f,g,h\n\n\n(**\n## Explicit\n\nExplicit allows you to use \u0060explicit\u0060 generic method for standard types and types that implement the static explicit type cast signature.\n\n### Minimal definition\n\nIn order to use the \u0060explicit\u0060 generic method together with a type it needs to implement the following:\n*)\n\n(**\n\u0060\u0060\u0060f#\nstatic member op_Explicit (x:\u0027r) :\u0027T\n\u0060\u0060\u0060\nor in C#\n\u0060\u0060\u0060c#\npublic static explicit operator T(R s)\n\u0060\u0060\u0060\n\nThis is useful when dealing with C# libraries that make heavy use of explicit conversions.\n*)\n\n(**\n## Implicit\n\nImplicit allows you to use \u0060implicit\u0060 generic method for standard types and types that implement the static implicit type cast signature.\n\n### Minimal definition\n\nIn order to use the \u0060implicit\u0060 generic method together with a type it needs to implement the following:\n*)\n\n(**\n\u0060\u0060\u0060f#\nstatic member op_Implicit (x:\u0027r) :\u0027T\n\u0060\u0060\u0060\nor in C#\n\u0060\u0060\u0060c#\npublic static implicit operator T(R s)\n\u0060\u0060\u0060\n\nThis is useful when dealing with C# libraries that make heavy use of implicit conversions.\n*)"},{"uri":"/FSharpPlus/type-kleisli.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/abstraction-profunctor.html","title":"Profunctor\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nProfunctor\n==========\n\nA bifunctor that is a contravariant in the first argument and covariant in the second.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060dimap f g x\u0060\u0060\n*)\n(**\n    static member Dimap (x: \u0027Profunctor\u003C\u0027T, \u0027V\u003E, f: \u0027U -\u003E \u0027T, g: \u0027V -\u003E \u0027W) : \u0027Profunctor\u003C\u0027U, \u0027W\u003E\n*)\n(**\n\n\nOther operations\n----------------\n\n * \u0060\u0060lmap f x\u0060\u0060\n*)\n(**\n    static member Contramap (x: \u0027Profunctor\u003C\u0027T, \u0027V\u003E, f: \u0027U -\u003E \u0027T) : \u0027Profunctor\u003C\u0027U, \u0027V\u003E\n*)\n(**\n\n * \u0060\u0060rmap g x\u0060\u0060\n*)\n(**\n    static member Map (x: \u0027Profunctor\u003C\u0027T,\u0027V\u003E, f: \u0027V -\u003E \u0027W) : \u0027Profunctor\u003C\u0027T, \u0027W\u003E\n*)\n(**\n\n\n\n\nRules\n-----\n*)\n(**\n    dimap id id = id\n    dimap (h\u0027 \u003C\u003C h) (f \u003C\u003C f\u0027) = dimap h f \u003C\u003C dimap h\u0027 f\u0027\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Functor](abstraction-functor.html): All profunctors are also functors over the second parameter.\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060(\u0027T -\u003E \u0027U)\u0060\u0060\n -  \u0060\u0060Func\u003C\u0027T,\u0027U\u003E\u0060\u0060\n\nFrom F#\u002B\n\n -  [\u0060\u0060Kleisli\u003C\u0027T, \u0027Monad\u003C\u0027U\u003E\u003E\u0060\u0060](type-kleisli.html)\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen System\nopen FSharpPlus\nopen FSharpPlus.Data\nopen FSharpPlus.Math.Generic\n\nmodule Predicate = let run (p: Predicate\u003C_\u003E) x = p.Invoke (x)\n\nlet isEven       = Predicate (fun x -\u003E x % 2 = 0)\n\nlet resStrFalse  = dimap int string (Predicate.run isEven) 99.0\n\n\nlet lx x = Char.GetNumericValue x \u002B 100.\nlet rx x = string (x \u002B 100)\nlet kl = Kleisli (fun (y:float) -\u003E [int y; int y * 2 ; int y * 3])\n\nlet resl = lmap lx kl\nlet r105n210n315 = Kleisli.run resl \u00275\u0027\nlet resr = rmap rx kl\nlet r105n110n115 = Kleisli.run resr 5.0\nlet resd = dimap lx rx kl\nlet r205n310n415 = Kleisli.run resd \u00275\u0027"},{"uri":"/FSharpPlus/type-all.html","title":"All\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nAll\n===\n\nThis is a wrapper type for booleans, with a specific set of monoidal operations.\nThe contained bools would become true only if both (all) operands are true.\n\nRelated Types\n------------\n\n - [Any](type-any.html): Similar wrapper, but using the \u0027any\u0027 criteria.\n\n\nAbstractions\n------------\n\n -  [Semigroup](abstraction-semigroup.html)\n -  [Monoid](abstraction-monoid.html)\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet res1 = All true \u002B\u002B zero \u002B\u002B All false\n// val res1 : All = All false\n\nlet even x = x % 2 = 0\n\nlet res2 = [2;4;6;7;8] |\u003E map (even \u003E\u003E All) |\u003E sum\n// val res2 : All = All false"},{"uri":"/FSharpPlus/type-valueoptiont.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-last.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/type-coproduct.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/abstractions.html","title":"Abstractions\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\n\nAbstractions\n============\n\nThe following diagram illustrates some common FP abstractions that can be represented with this library and the relationships between them.\n\nClick on the abstraction name for a full description:\n\n\u003Cobject style=\u0022width: 100%\u0022 data=\u0022//www.plantuml.com/plantuml/svg/{plantUMLDiag}\u0022 type=\u0022image/svg\u002Bxml\u0022\u003E\u003C/object\u003E\n \n\nSome more abstractions [here](abstraction-misc.html).\n\n*)"},{"uri":"/FSharpPlus/type-contt.html","title":"TO-DO Add some docs here !\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nTO-DO Add some docs here !\n=========================\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus"},{"uri":"/FSharpPlus/applicative-functors.html","title":"Functors and Applicatives\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nFunctors and Applicatives\n=========================\n\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\n\n(**\n\nYou may run this script step-by-step\nThe order of execution has to be respected since there are redefinitions of functions and operators\n\n\nFunctors\n========\n\nThe intuitive definition is that a Functor is something you can map over.\n\nSo they all have a \u0060\u0060map\u0060\u0060 operation which is their minimal definition.\n\nMost containers are functors\n*)\n\nlet r01 = List.map   (fun x -\u003E string (x \u002B 10)) [ 1;2;3 ]\nlet r02 = Array.map  (fun x -\u003E string (x \u002B 10)) [|1;2;3|]\nlet r03 = Option.map (fun x -\u003E string (x \u002B 10)) (Some 5)\n\n(**\nYou can think of the Option functor as a particular case of a List that can be either empty or with just 1 element.\n\nWe could have used the generic function \u0060\u0060map\u0060\u0060 from this library which works on any functor.\n\n*)\n\nlet r01\u0027 = map (fun x -\u003E string (x \u002B 10)) [ 1;2;3 ]\nlet r02\u0027 = map (fun x -\u003E string (x \u002B 10)) [|1;2;3|]\nlet r03\u0027 = map (fun x -\u003E string (x \u002B 10)) (Some 5)\n\n(** Now let\u0027s define a simple type and make it a functor by adding a \u0060\u0060Map\u0060\u0060 static method *)\n\ntype Id\u003C\u0027t\u003E = Id of \u0027t with\n    static member Map (Id x, f) = Id (f x)\n\nlet r04 = map (fun x -\u003E string (x \u002B 10)) (Id 5)\n\n(**\nMost computations are also functors\n\nHere\u0027s an example with Async functions\n*)\n\nlet async5 = async.Return 5\nlet r05  = map (fun x -\u003E string (x \u002B 10)) async5\nlet r05\u0027 = Async.RunSynchronously r05\n\n\n(** But even plain functions are functors *)\n\nlet r06  = map (fun x -\u003E string (x \u002B 10)) ((\u002B) 2)\nlet r06\u0027 = r06 3\n\n(**\nFor functions \u0060\u0060map\u0060\u0060 is equivalent to \u0060\u0060(\u003C\u003C)\u0060\u0060 this means that mapping over a function is the same as composing the functions with the mapper\n\nA List functor can be thought of as a function which takes an integer index to return a value: \u0060\u0060f: Naturals -\u003E \u0027t\u0060\u0060\nSo, you can think of \u0060\u0060map\u0060\u0060 on a List functor as composing a function:\n\n**)\nlet listFunc = function 0 -\u003E 1 | 1 -\u003E 2 | 2 -\u003E 3 // [1;2;3]\nlet r01\u0027\u0027 = map (fun x -\u003E string (x \u002B 10)) listFunc\n\n(**\nWhat about tuples?\n**)\n\nmodule TupleFst = let map f (a,b) = (f a, b)\nmodule TupleSnd = let map f (a,b) = (a, f b)\n\nlet r07 = TupleFst.map (fun x -\u003E string (x \u002B 10)) (5, \u0022something else\u0022)\nlet r08 = TupleSnd.map (fun x -\u003E string (x \u002B 10)) (\u0022something else\u0022, 5)\n\n(**\nSo there is more than one way to define a functor with tuples.\nThe same applies to the Discriminated Union of 2 types.\n*)\n\n// DUs\nmodule ChoiceFst = let map f = function Choice1Of2 x -\u003E Choice1Of2 (f x) | Choice2Of2 x -\u003E Choice2Of2 x\nmodule ChoiceSnd = let map f = function Choice2Of2 x -\u003E Choice2Of2 (f x) | Choice1Of2 x -\u003E Choice1Of2 x\n\nlet choiceValue1:Choice\u003Cint,string\u003E = Choice1Of2 5\nlet choiceValue2:Choice\u003Cint,string\u003E = Choice2Of2 \u0022Can\u0027t divide by zero.\u0022\n\nlet r09  = ChoiceFst.map (fun x -\u003E string (x \u002B 10)) choiceValue1\nlet r09\u0027 = ChoiceFst.map (fun x -\u003E string (x \u002B 10)) choiceValue2\n\nlet r10  = ChoiceSnd.map (fun x -\u003E \u0022The error was: \u0022 \u002B x) choiceValue1\nlet r10\u0027 = ChoiceSnd.map (fun x -\u003E \u0022The error was: \u0022 \u002B x) choiceValue2\n\n\n(** Tree as a functor *)\n\ntype Tree\u003C\u0027a\u003E =\n    | Tree of \u0027a * Tree\u003C\u0027a\u003E * Tree\u003C\u0027a\u003E\n    | Leaf of \u0027a\n\nmodule Tree = let rec map f = function \n                | Leaf x        -\u003E Leaf (f x) \n                | Tree(x,t1,t2) -\u003E Tree(f x, map f t1, map f t2)\n\nlet myTree = Tree(6, Tree(2, Leaf 1, Leaf 3), Leaf 9)\n\nlet r11 = Tree.map (fun x -\u003E string (x \u002B 10)) myTree\n\n(**\nQ: is String a Functor?\n*)\n\nlet r12 = String.map (fun c -\u003E System.Char.ToUpper(c)) \u0022Hello world\u0022\n\n(**\nA: Kind of, but we can\u0027t change the wrapped type. We\u0027re stick to (\u0027a-\u003E\u0027a) -\u003E C\u003C\u0027a\u003E -\u003E C\u003C\u0027a\u003E \n   if we assume \u0027a = char and C\u003C\u0027a\u003E = String\n\n\nFinally there are some laws:\n\n - \u0060\u0060map id = id\u0060\u0060\n - \u0060\u0060map (f \u003E\u003E g) = map f \u003E\u003E map g\u0060\u0060\n\n\n\nLimitations:\n\nWe can define \u0060\u0060map2\u0060\u0060 then \u0060\u0060map3\u0060\u0060  then ..  \u0060\u0060mapN\u0060\u0060 ?\n\n*)\n\ntype Option\u003C\u0027T\u003E with\n    static member map2 f x y = \n        match x, y with\n        | Some x, Some y -\u003E Some (f x y)\n        | _              -\u003E None\n\n    static member map3 f x y z = \n        match x, y, z with\n        | Some x, Some y, Some z -\u003E Some (f x y z)\n        | _                      -\u003E None\n\nlet r13 = Option.map2 (\u002B) (Some 2) (Some 3)\n\nlet r14 = List.map2 (\u002B) [1;2;3] [10;11;12]\n\nlet add3 a b c = a \u002B b \u002B c\n\nlet r15 = Option.map3 add3 (Some 2) (Some 2) (Some 1)\n\n(**\n\nQuestion: Is it possible to generalize to mapN?\n\n\nApplicative Functors\n====================\n\nWhat if we split \u0060\u0060map\u0060\u0060 in 2 steps?\n\n*)\n\n// map (\u0027a -\u003E \u0027b) -\u003E C\u003C\u0027a\u003E -\u003E C\u003C\u0027b\u003E\n//     \\--------/    \\---/    \\---/\n//         (a)        (b)      (c)\n//\n// 1)    (\u0027a -\u003E \u0027b)        -\u003E  C\u003C\u0027a -\u003E \u0027b\u003E\n//       \\--------/            \\---------/\n//           (a)                      \n//               \n// 2)  C\u003C\u0027a -\u003E \u0027b\u003E -\u003E C\u003C\u0027a\u003E  -\u003E   C\u003C\u0027b\u003E\n//     \\---------/    \\---/       \\---/\n//                     (b)         (c)\n//\n//\n// step1   (\u0027a -\u003E \u0027b)        -\u003E  \u0022C\u003C\u0027a -\u003E \u0027b\u003E\u0022      Put the function into a context C\n// step2 \u0022C\u003C\u0027a -\u003E \u0027b\u003E\u0022 C\u003C\u0027a\u003E -\u003E   C\u003C\u0027b\u003E             Apply the function in a context C to a value in a context C\n\n(** Here\u0027s an example with Options *)\n\nlet step1 f = Some f\nlet step2 a b = \n    match a, b with\n    | Some f, Some x -\u003E Some (f x)\n    | _              -\u003E None\n\nlet r16 = step1 (fun x -\u003E string (x \u002B 10))\nlet r17 = step2 r16 (Some 5)\n\n    \n(** So now instead of writing: *)\n\nlet r18  = Option.map (fun x -\u003E string (x \u002B 10)) (Some 5)\n\n(** we write *)\n\nlet r18\u0027 = step2 (step1 (fun x -\u003E string (x \u002B 10))) (Some 5)\n\n    \n(** and instead of \u0060\u0060map2\u0060\u0060 like this: *)\nlet r19   = Option.map2 (\u002B) (Some 2) (Some 3)\n\n(** we write *)\nlet r19i  = step2 (step1 (\u002B)) (Some 2)\n(** .. and finally *)\nlet r19\u0027 = step2 r19i (Some 3)\n(** by applying \u0060\u0060step2\u0060\u0060 again. We can apply \u0060\u0060step2\u0060\u0060 again if the result is still a function in a container, just like partial application.\n\n\nlets give names to \u0060\u0060step1\u0060\u0060 and \u0060\u0060step2\u0060\u0060: \u0060\u0060pure\u0060\u0060 and \u0060\u0060\u003C*\u003E\u0060\u0060 *)\n\nmodule OptionAsApplicative =\n    let pure\u0027 x = Some x\n    let (\u003C*\u003E) a b = \n        match a, b with\n        | Some f, Some x -\u003E Some (f x)\n        | _              -\u003E None\n\nopen OptionAsApplicative\n\nlet r18\u0027\u0027  = Option.map (fun x -\u003E string (x \u002B 10)) (Some 5)\n\nlet r18\u0027\u0027\u0027 = Some (fun x -\u003E string (x \u002B 10)) \u003C*\u003E Some 5\n// analog to:\nlet r18\u0027\u0027\u0027\u0027 =     (fun x -\u003E string (x \u002B 10))          5\n\n\n(** Now with \u0060\u0060map3\u0060\u0060 (and further with mapN) *)\n\nlet r20 = Option.map3 add3 (Some 2) (Some 2) (Some 1)\n\nlet r20\u0027  = Some add3 \u003C*\u003E Some 2 \u003C*\u003E Some 2 \u003C*\u003E Some 1\n// analog to:\nlet r20\u0027\u0027  =     add3          2          2          1\n\n\n(** but even without \u0060\u0060add3\u0060\u0060 we can write \u0060\u00601 \u002B 2 \u002B 2\u0060\u0060 which is \u0060\u00601 \u002B (2 \u002B 2)\u0060\u0060 and the same as: *)\n\nlet r20\u0027\u0027\u0027  = (\u002B) 1 ((\u002B) 2 2)\n\n(** with options becomes: *)\nlet r20\u0027\u0027\u0027\u0027 = Some (\u002B) \u003C*\u003E Some 1 \u003C*\u003E (Some (\u002B) \u003C*\u003E Some 2 \u003C*\u003E Some 2)\n(** constrast it with *)\nlet r20\u0027\u0027\u0027\u0027\u0027  =    (\u002B)          1     (     (\u002B)          2          2)\n\n(** we know \u0060\u0060apply\u0060\u0060 is \u0060\u0060(\u003C|)\u0060\u0060 in F# *)\n\nlet r21     =      (\u002B) \u003C|       1 \u003C|  (     (\u002B) \u003C|       2 \u003C|       2)\nlet r21\u0027    = Some (\u002B) \u003C*\u003E Some 1 \u003C*\u003E (Some (\u002B) \u003C*\u003E Some 2 \u003C*\u003E Some 2)\n\n(**\nSo at this point the name \u0022Applicative Functor\u0022 should make sense\n    \nQ: Isn\u0027t it easier to do just \u0060\u0060Some ( (\u002B) 1 ((\u002B) 2 2) )\u0060\u0060 ?\n   We get the same result in the end.\nA: Yes, in this particular case it\u0027s the same but what if instead of \u0060\u0060Some 1\u0060\u0060 we have \u0060\u0060None\u0060\u0060\n*)\n\nlet r22   = Some (\u002B) \u003C*\u003E None \u003C*\u003E (Some (\u002B) \u003C*\u003E Some 2 \u003C*\u003E Some 2)\n\n(**   \nThat\u0027s because we\u0027re applying functions inside a context.\n\nIt looks the same as applying outside but in fact some effects occurs behind the scenes.\n\nTo have a better idea let\u0027s move out of Option:\n*)\n\n[\u003CAutoOpen\u003E]\nmodule Async =\n    let pure\u0027 x = async.Return x\n    let (\u003C*\u003E) f x = async.Bind(f, fun x1 -\u003E async.Bind(x, fun x2 -\u003E pure\u0027(x1 x2)))\n\n    \nlet r23   = async {return (\u002B)} \u003C*\u003E async {return 2} \u003C*\u003E async {return 3}\n\nlet r23\u0027  = pure\u0027 (\u002B) \u003C*\u003E pure\u0027 2 \u003C*\u003E pure\u0027 3\n\n(** try \u0060\u0060Async.RunSynchronously r23\u0027\u0060\u0060 *)\n\nlet getLine = async { \n        let x = System.Console.ReadLine() \n        return  System.Int32.Parse x\n    }\n\nlet r24  = pure\u0027 (\u002B) \u003C*\u003E getLine \u003C*\u003E getLine\n\n(** try \u0060\u0060Async.RunSynchronously r24\u0060\u0060 *)\n\n\nmodule ListAsApplicative =\n    let pure\u0027 x = [x]        \n    let (\u003C*\u003E)  f x = List.collect (fun x1 -\u003E List.collect (fun x2 -\u003E [x1 x2]) x) f\n\n    (* here are two other possible implementations of (\u003C*\u003E) for List\n    let (\u003C*\u003E) f x = f |\u003E List.map (fun f -\u003E x |\u003E List.map (fun x -\u003E f x)) |\u003E List.concat\n    let (\u003C*\u003E) f x= \n        seq {\n                for f in f do\n                for x in x do\n                yield f x} |\u003E Seq.toList *)\n\nopen ListAsApplicative\n\nlet r25 =  List.map (fun x -\u003E string (x \u002B 10)) [1;2;3]\n\nlet r25\u0027  =       [fun x -\u003E string (x \u002B 10)] \u003C*\u003E [1..3]\nlet r25\u0027\u0027 = pure\u0027 (fun x -\u003E string (x \u002B 10)) \u003C*\u003E [1..3]\n\n\nlet r26 = [string; fun x -\u003E string (x \u002B 10)] \u003C*\u003E [1;2;3]\n\n(** So, for lists \u0060\u0060map2\u0060\u0060 is equivalent to write: *)\n\nlet r27 = [(\u002B)] \u003C*\u003E [1;2] \u003C*\u003E [10;20;30]\n\nlet r28 = [(\u002B);(-)] \u003C*\u003E [1;2] \u003C*\u003E [10;20;30]\n\n\n    \nmodule SeqAsApplicative =\n    let pure\u0027 x = Seq.initInfinite (fun _ -\u003E x)\n    let (\u003C*\u003E) f x = Seq.zip f x |\u003E Seq.map (fun (f,x) -\u003E f x)\n\nopen SeqAsApplicative\n\n\nlet r29 =  Seq.map (fun x -\u003E string (x \u002B 10))    (seq [1;2;3])          |\u003E Seq.toList\nlet r29\u0027 =   pure\u0027 (fun x -\u003E string (x \u002B 10)) \u003C*\u003E seq [1;2;3]           |\u003E Seq.toList\n    \nlet r30 = seq [(\u002B);(-)] \u003C*\u003E seq [1;2] \u003C*\u003E seq [10;20;30]                |\u003E Seq.toList  // compare it with r28\n\n\n(** An exotic case where there is no \u0060\u0060pure\u0060\u0060. *)\n\nmodule MapAsApplicative = \n    let (\u003C*\u003E) (f:Map\u003C\u0027k,_\u003E) x =\n        Map (seq {\n            for KeyValue(k, vf) in f do\n                match Map.tryFind k x with\n                | Some vx -\u003E yield k, vf vx\n                | _       -\u003E () })\n\n\nopen MapAsApplicative\n\nlet r31 = Map [\u0027a\u0027,(\u002B);\u0027b\u0027,(-)] \u003C*\u003E Map [\u0027a\u0027,1;\u0027b\u0027,2] \u003C*\u003E Map [\u0027a\u0027,10;\u0027b\u0027,20;\u0027c\u0027,30] \n\nlet r32 = Map [\u0027c\u0027,(\u002B);\u0027b\u0027,(-)] \u003C*\u003E Map [\u0027a\u0027,1;\u0027b\u0027,2] \u003C*\u003E Map [\u0027a\u0027,10;\u0027b\u0027,20;\u0027c\u0027,30] \n\n(**\n\nMonads\n======\n\n*)\n\nopen OptionAsApplicative    \n    \nlet a = Some 3\nlet b = Some 2\nlet c = Some 1\n\nlet half x = x / 2        \n\nlet f a b c =\n    let x = a \u002B b\n    let y = half c\n    x \u002B y\n\nlet f\u0027 a b c =\n    let x = Some (\u002B)  \u003C*\u003E a \u003C*\u003E b\n    let y = Some half \u003C*\u003E c\n    Some (\u002B) \u003C*\u003E x \u003C*\u003E y\n    \nlet r33 = f\u0027 (Some 1) (Some 2) (Some 3)\n\nlet r33\u0027 = f\u0027 None (Some 2) (Some 3)\n    \n(** OK, but if I want to use a function like: *)\nlet exactHalf x =\n    if x % 2 = 0 then Some (x / 2)\n    else None\n\n(** It doesn\u0027t fit *)\n\n// let f\u0027\u0027 a b c =\n//     let x = Some (\u002B) \u003C*\u003E a \u003C*\u003E b\n//     let y = Some exactHalf \u003C*\u003E c   // y will be inferred as option\u003Coption\u003Cint\u003E\u003E\n//     Some (\u002B) \u003C*\u003E x \u003C*\u003E y           // so this will not compile\n\n\n(**\nThe problem is, we were working with ordinary functions.\nWhen we lift these function into C, we get functions wrapped in contexts.\nWith Applicatives we can use either a function in a context which is ready to use or an ordinary function, which we can lift easily with \u0060\u0060pure\u0060\u0060.\n\nBut \u0060\u0060exactHalf\u0060\u0060 is a different thing: its signature is \u0060\u0060int -\u003E Option\u003Cint\u003E\u0060\u0060.\nThis function goes from a pure value to a value in a context, so either:\n\n1) we use it directly but we first need to extract the argument from the context.\n\n2) we use it in an Applicative, we will get a value in a context in another context, so we will need to flatten both contexts.\n\nMonad provides solutions to both alternatives\n*)\n\n// bind : C\u003C\u0027a\u003E -\u003E (\u0027a-\u003EC\u003C\u0027b\u003E) -\u003E C\u003C\u0027b\u003E\n// join : C\u003CC\u003C\u0027a\u003E\u003E -\u003E C\u003C\u0027a\u003E\n\nmodule OptionAsMonad =\n    let join  x   = Option.bind id x\n    let (\u003E\u003E=) x f = Option.bind f x\n    // in monads pure\u0027 is called return, unit or result, but it\u0027s essentially the same function.\n    let return\u0027 x = Some x\n        \nopen OptionAsMonad        \n\n\n\nlet f\u0027\u0027 a b c =\n    let x = Some (\u002B) \u003C*\u003E a \u003C*\u003E b\n    let y = Some exactHalf \u003C*\u003E c |\u003E join\n    Some (\u002B) \u003C*\u003E x \u003C*\u003E y\n    \n\nlet f\u0027\u0027\u0027 a b c =\n    let x = Some (\u002B) \u003C*\u003E a \u003C*\u003E b\n    let y = c \u003E\u003E= exactHalf\n    Some (\u002B) \u003C*\u003E x \u003C*\u003E y\n\n(** All monads are automatically applicatives, remember \u0060\u0060\u003C*\u003E\u0060\u0060 for lists, it was:\n\n\u0060\u0060let (\u003C*\u003E)  f x = List.collect (fun x1 -\u003E List.collect (fun x2 -\u003E [x1 x2]) x) f\u0060\u0060 *)\n\n(** But \u0060\u0060List.collect\u0060\u0060 is in fact \u0060\u0060bind\u0060\u0060, and \u0060\u0060[x1 x2]\u0060\u0060 is \u0060\u0060pure (x1 x2)\u0060\u0060 *)\n\n// let (\u003C*\u003E) f x = f \u003E\u003E= (fun x1 -\u003E x \u003E\u003E= (fun x2 -\u003E pure\u0027 (x1 x2)))\n\n(**\n\nAnd this definition of \u0060\u0060\u003C*\u003E\u0060\u0060 applies to all monads.\n\nQ: but we said all applicatives are functors, so monads should be functors as well, right?\nA: Yes, they are, and this is the general definition of \u0060\u0060map\u0060\u0060 based on \u0060\u0060bind\u0060\u0060 and \u0060\u0060result\u0060\u0060 (aka return or pure)\n*)\n\nlet map f x = x \u003E\u003E= (pure\u0027 \u003C\u003C f)\n\n(**\n\nRecommended links\n\nSame explanation but with pictures\nhttp://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html\n\nHaskell typeclasses\nhttp://www.haskell.org/haskellwiki/Typeclassopedia *)"},{"uri":"/FSharpPlus/abstraction-alternative.html","title":"Alternative\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nAlternative\n===========\nApplicative Functors which also have a monoid structure.\n___\nMinimal complete definition\n---------------------------\n * \u0060\u0060return x\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060result x\u0060\u0060\n * \u0060\u0060(\u003C*\u003E) f x\u0060\u0060\n * \u0060\u0060empty\u0060\u0060\n * \u0060\u0060append x y\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060(\u003C|\u003E) x y\u0060\u0060\n*)\n(**\n    static member Return (x: \u0027T) : \u0027Alternative\u003C\u0027T\u003E\n    static member (\u003C*\u003E) (f: \u0027T -\u003E \u0027U, x: \u0027Alternative\u003C\u0027T\u003E) : \u0027Alternative\u003C\u0027U\u003E\n    static member get_Empty () : \u0027Alternative\n    static member (\u003C|\u003E) (x: \u0027Alternative\u003C\u0027T\u003E, y: \u0027Alternative\u003C\u0027T\u003E) : \u0027Alternative\u003C\u0027T\u003E\n*)\n(**\nNote: \u0060\u0060return\u0060\u0060 can\u0027t be used outside computation expressions, use \u0060\u0060result\u0060\u0060 instead.\nOther operations\n----------------\n * \u0060\u0060mfilter\u0060\u0060\n*)\n(**\n    static member MFilter (x: seq\u003C\u0027Alternative\u003E) : \u0027Alternative\n*)\n(**\n * \u0060\u0060choice\u0060\u0060\n*)\n(**\n    static member inline Choice (source: \u0027Foldable\u003C\u0027Alt\u003C\u0027T\u003E\u003E) : \u0027Alt\u003C\u0027T\u003E\n*)\n(**\nRules\n-----\n*)\n(**\n    empty \u003C|\u003E x = x\n    x \u003C|\u003E empty = x\n    (x \u003C|\u003E y) \u003C|\u003E z = x \u003C|\u003E (y \u003C|\u003E z)\n    f \u003C!\u003E (x \u003C|\u003E y) = (f \u003C!\u003E x) \u003C|\u003E (f \u003C!\u003E y)\n    (f \u003C|\u003E g) \u003C*\u003E x = (f \u003C*\u003E x) \u003C|\u003E (g \u003C*\u003E x)\n    empty \u003C*\u003E f = empty\n*)\n(**\nRelated Abstractions\n--------------------\n - [Monoid](abstraction-monoid.html): An Alternative is a Monoid that is also an Applicative Functor\n - [Applicative](abstraction-applicative.html): An Alternative is a Monoid that is also an Applicative Functor\n - MonadPlus: Alternatives that are also Monads\nConcrete implementations\n------------------------\nFrom .Net/F#\n \n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T, \u0027Monoid\u003E\u0060\u0060\n -  \u0060\u0060Choice\u003C\u0027T, \u0027Monoid\u003E\u0060\u0060\n -  \u0060\u0060\u0027T -\u003E \u0027Alternative\u0060\u0060\n\nFrom F#\u002B\n\n -  [\u0060\u0060ReaderT\u003C\u0027R, \u0027MonadPlus\u003C\u0027T\u003E\u003E\u0060\u0060](type-readert.html)\n -  [\u0060\u0060WriterT\u003C\u0027MonadPlus\u003C\u0027T * \u0027Monoid\u003E\u003E\u0060\u0060](type-writert.html)\n -  [\u0060\u0060StateT\u003C\u0027S,\u0027MonadPlus\u003C\u0027T * \u0027S\u003E\u003E\u0060\u0060](type-statet.html)\n -  [\u0060\u0060OptionT\u003C\u0027MonadPlus\u003Coption\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-optiont.html)\n -  [\u0060\u0060ValueOptionT\u003C\u0027MonadPlus\u003Cvoption\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-valueoptiont.html)\n -  [\u0060\u0060ResultT\u003C\u0027MonadPlus\u003CResult\u003C\u0027T,\u0027Monoid\u003E\u003E\u003E\u0060\u0060](type-resultt.html)\n -  [\u0060\u0060ChoiceT\u003C\u0027MonadPlus\u003CChoice\u003C\u0027T,\u0027Monoid\u003E\u003E\u003E\u0060\u0060](type-choicet.html)\n -  [\u0060\u0060Compose\u003C\u0027AlternativeF\u003C\u0027AlternativeG\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-compose.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n -  [\u0060\u0060ZipList\u003C\u0027S\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060NonEmptySeq\u003C\u0027T\u003E\u0060\u0060](type-nonemptyseq.html) \u0060\u0060*\u0060\u0060\n -  [\u0060\u0060Validation\u003C\u0027Error, \u0027T\u003E\u0060\u0060](type-validation.html) \u0060\u0060*\u0060\u0060\n\n\u0060\u0060*\u0060\u0060 Only \u0060\u0060\u003C|\u003E\u0060\u0060 operation\n\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\n\n// this gives [2; 3; 4; 5]\nlet x = [2;3] \u003C|\u003E [] \u003C|\u003E [4;5]\n\n// but I could have written\nlet y = [2;3] \u003C|\u003E empty \u003C|\u003E [4;5]\n\n// choice sample usage\nlet alternatives = [None; Some \u0022Result is OK\u0022; None ; Some \u0022Result is still OK\u0022]\nlet firstGood = choice alternatives //Some \u0022Result is OK\u0022\n\n// it did something like\nlet fstGood = None \u003C|\u003E Some \u0022Result is OK\u0022 \u003C|\u003E  None \u003C|\u003E Some \u0022Result is still OK\u0022\n\n// mfilter usage\nlet fstMatch = mfilter ((=) 5) [1;2;3;4]    // [] -\u003E no element found, it uses the empty value\n\n\n// MonadPlus\n\nlet getLine    = async { return System.Console.ReadLine() }\nlet putStrLn x = async { printfn \u0022%s\u0022 x}\n\nlet nameAndAddress = traverse (fun x -\u003E putStrLn x \u003E\u003E= fun _ -\u003E getLine) [\u0022name\u0022;\u0022address\u0022]\n\nlet a:list\u003Cint\u003E = empty\nlet res123      = empty \u003C|\u003E [1;2;3]\n\nlet inline mfilter p ma = monad.plus {\n  let! a = ma\n  if p a then return a else return! empty}\n\nlet mfilterRes2 = mfilter ((=)2) (Some 2)\n\n// sample code from http://en.wikibooks.org/wiki/Haskell/MonadPlus\nlet pythags = monad {\n  let! z = [1..50]\n  let! x = [1..z]\n  let! y = [x..z]\n  do! guard (x*x \u002B y*y = z*z)\n  return (x, y, z)}\n\n// same operation but using the monad.plus computation expression\nlet pythags\u0027 = monad.plus {\n  let! z = [1..50]\n  let! x = [1..z]\n  let! y = [x..z]\n  if (x*x \u002B y*y = z*z) then return (x, y, z) else ()}\n\nlet allCombinations = sequence [[\u0027a\u0027; \u0027b\u0027; \u0027c\u0027]; [\u00271\u0027; \u00272\u0027]]\n\n\n// An Alternative is automatically a Monoid and a Functor\n\ntype Maybe\u003C\u0027t\u003E =\n    | Just of \u0027t\n    | Nothing \n    with\n        static member Return (x:\u0027a)     = Just x\n        static member (\u003C*\u003E) (f, x) = \n            match (f, x) with \n            | Just f, Just x -\u003E Just (f x) \n            | _              -\u003E Nothing\n        static member inline get_Empty () = Nothing\n        static member inline (\u003C|\u003E) (x, y) = match x with Nothing -\u003E y | xs -\u003E xs\n\nlet r5 = Nothing \u002B\u002B Just 5 \u002B\u002B Just 6 \u002B\u002B zero\nlet r6 = map string (Just 6)\n\n\n// But not always the Monoidal behaviour is the same\n\nlet r3 = Some 2 \u002B\u002B Some 1   // addition         =\u003E Some 3\nlet r2 = Some 2 \u003C|\u003E Some 1  // first success    =\u003E Some 2"},{"uri":"/FSharpPlus/abstraction-foldable.html","title":"Foldable\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\nFoldable\n========\n\nData structures that can be folded to a summary value.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060toSeq x\u0060\u0060\n*)\n(**\n    static member ToSeq (x:\u0027Foldable\u003C\u0027T\u003E) :seq\u003C\u0027T\u003E\n*)\n(**\n\n\nOther operations\n----------------\n\n * \u0060\u0060foldMap\u0060\u0060\n*)\n(**\n    FoldMap (x:\u0027Foldable\u003C\u0027T\u003E, f:\u0027T-\u003E\u0027Monoid)\n*)\n(**\n\n\nRules\n-----\n*)\n(**\n    foldMap (f \u003E\u003E g) = foldMap f \u003E\u003E g\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Monoid](abstraction-monoid.html)\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027T []\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060ReadOnlyCollection\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060IReadOnlyCollection\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IReadOnlyList\u003C\u0027T\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060ZipList\u003C\u0027T\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060NonEmptyList\u003C\u0027S\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\nopen FSharpPlus\nopen FSharpPlus.Data\nopen FSharpPlus.Control\n\nlet res1_Gt   = foldMap (compare 2) [1;2;3]\nlet resHelloW = foldMap (fun x -\u003E Some (\u0022hello \u0022 \u002B x)) (Some \u0022world\u0022)\n\nmodule FoldableTree =\n    type Tree\u003C\u0027a\u003E =\n        | Empty \n        | Leaf of \u0027a \n        | Node of (Tree\u003C\u0027a\u003E) * \u0027a * (Tree\u003C\u0027a\u003E)\n\n        // add instance for Foldable class\n        static member inline FoldMap (t:Tree\u003C_\u003E, f) =\n            let rec loop x f =\n                match x with\n                | Empty          -\u003E zero\n                | Leaf  n        -\u003E f n\n                | Node (l, k, r) -\u003E loop l f \u002B\u002B f k \u002B\u002B loop r f\n            loop t f\n        static member inline FoldBack (x:Tree\u003C_\u003E, f, z) = FoldBack.FromFoldMap f z x\n        static member inline ToSeq    (x:Tree\u003C_\u003E) = Tree\u003C_\u003E.FoldBack (x, (fun x y -\u003E seq {yield x; yield! y}), Seq.empty)\n    \n    let myTree = Node (Node (Leaf 1, 6, Leaf 3), 2 , Leaf 9)\n    let resSum21      = foldMap id   myTree\n    let resProduct324 = foldMap Mult myTree\n    let res21         = foldBack   (\u002B) myTree 0\n    let res21\u0027        = fold       (\u002B) 0 myTree    // \u003C- Tree.Fold is not defined but it fallbacks to the default method (Tree.ToSeq)\n\nmodule FoldableTree2 =\n    type Tree\u003C\u0027a\u003E =\n        | Empty \n        | Leaf of \u0027a \n        | Node of (Tree\u003C\u0027a\u003E) * \u0027a * (Tree\u003C\u0027a\u003E)\n\n        // add instance for Foldable abstraction (ToSeq is the minimal definition).\n        static member ToSeq x =        \n            let rec loop t = seq {\n                match t with\n                | Empty        -\u003E ()\n                | Leaf n       -\u003E yield n\n                | Node (l,k,r) -\u003E yield k; yield! loop l; yield! loop r}\n            loop x\n       \n        static member inline FoldBack (x, f, z) = \n            let rec _foldMap x f =\n                match x with\n                | Empty        -\u003E getZero()\n                | Leaf n       -\u003E f n\n                | Node (l,k,r) -\u003E plus (_foldMap l f) (plus (f k) (_foldMap r f))\n            Endo.run (_foldMap x (Endo \u003C\u003C f )) z\n\n    \n    let tree = Node (Node (Leaf 1, 6, Leaf 3), 2 , Leaf 9)\n    let res21  = foldBack   (\u002B) tree 0\n\n    // Following operations work by falling back to Tree.ToSeq which is the default\n    let res21\u0027 = fold   (\u002B) 0   tree      \n    let resTr  = exists ((=) 3) tree\n    let resS3  = tryPick (fun x -\u003E if x = 3 then Some x else None) tree"},{"uri":"/FSharpPlus/abstraction-traversable.html","title":"Traversable\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nTraversable\n===========\n\nData structures that can be traversed from left to right, performing an action on each element.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060traverse f x\u0060\u0060 | \u0060\u0060sequence x\u0060\u0060\n*)\n(**\n    static member Traverse (t: \u0027Traversable\u003C\u0027T\u003E, f: \u0027T -\u003E \u0027Applicative\u003C\u0027U\u003E) : \u0027Applicative\u003C\u0027Traversable\u003C\u0027U\u003E\u003E\n    static member Sequence (t: \u0027Traversable\u003C\u0027Applicative\u003C\u0027T\u003E\u003E) : \u0027Applicative\u003C\u0027Traversable\u003C\u0027T\u003E\u003E\n*)\n(**\n\n\nOther operations\n----------------\n\n * \u0060\u0060gather f x\u0060\u0060 | \u0060\u0060transpose x\u0060\u0060 (same as traverse and sequence but operating on ZipApplicatives)\n*)\n(**\n    static member Gather (t: \u0027Traversable\u003C\u0027T\u003E, f: \u0027T -\u003E \u0027ZipApplicative\u003C\u0027U\u003E) : \u0027ZipApplicative\u003C\u0027Traversable\u003C\u0027U\u003E\u003E\n    static member Transpose (t: \u0027Traversable\u003C\u0027ZipApplicative\u003C\u0027T\u003E\u003E) : \u0027ZipApplicative\u003C\u0027Traversable\u003C\u0027T\u003E\u003E\n*)\n(**\n\n\n\nRules\n-----\n*)\n(**\n    t \u003C\u003C traverse f = traverse (t \u003C\u003C f) \n    traverse Identity = Identity\n    traverse (Compose \u003C\u003C map g \u003C\u003C f) = Compose \u003C\u003C map (traverse g) \u003C\u003C traverse f\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Functor](abstraction-functor.html): A traversable is generic on the Traversable type parameter and the (Applicative) Functor inner type parameter.\n - [Applicative](abstraction-applicative.html): An applicative is a functor whose \u0060\u0060map\u0060\u0060 operation can be splitted in \u0060\u0060return\u0060\u0060 and \u0060\u0060(\u003C*\u003E)\u0060\u0060 operations. \n - [Foldable](abstraction-foldable.html) : All traversables are foldables.\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Map\u003C\u0027K, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T, \u0027Error\u003E\u0060\u0060\n -  \u0060\u0060Choice\u003C\u0027T, \u0027Error\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060ZipList\u003C\u0027T\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060NonEmptyList\u003C\u0027T\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060NonEmptyMap\u003C\u0027Key, \u0027T\u003E\u0060\u0060](type-nonempty-map.html)\n -  [\u0060\u0060Validation\u003C\u0027Error, \u0027T\u003E\u0060\u0060](type-validation.html)\n\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\n\n\n// Some functions\nlet getLine    = async { return System.Console.ReadLine () }\nlet f x = if x \u003C 200 then [3 - x] else []\nlet g x = if x \u003C 200 then Some (3 - x) else None\n\n// traverse\nlet resSomeminus100 = traverse f (Some 103)\nlet resLstOfNull    = traverse f None \nlet res210          = traverse f [1; 2; 3]  \nlet resSome210      = traverse g [1; 2; 3]  \nlet resEmptyList    = traverse f [1000; 2000; 3000] \nlet resEListOfElist = traverse f []\n\n// sequence\nlet resSome321  = sequence [Some 3; Some 2; Some 1]\nlet resNone     = sequence [Some 3; None  ; Some 1]\nlet res654      = (sequence [(\u002B) 3; (\u002B) 2; (\u002B) 1]) 3\nlet resCombined = sequence [ [1; 2; 3] ;  [4; 5; 6]  ]\nlet resLstOfArr = sequence [|[1; 2; 3] ;  [4; 5; 6] |]  // \u003C- Uses the default method.\nlet resArrOfLst = sequence [[|1; 2; 3|]; [|4; 5; 6 |]]\n\n// This computation will ask for three user inputs\n// try Async.RunSynchronously get3strings\nlet get3strings = sequence [getLine; getLine; getLine]\n\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking Traversable](https://dev.to/choc13/grokking-traversable-bla).\n   It contains examples using F#\u002B and an explanation from scratch.\n\n*)"},{"uri":"/FSharpPlus/type-validation.html","title":"Validation\u003C\u0027Error, \u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nValidation\u003C\u0027Error, \u0027T\u003E\n======================\n\nThis is similar to Result\u003C\u0027T, \u0027Error\u003E but with accumulative errors semantics, instead of short-circuit.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen System\nopen FSharpPlus\nopen FSharpPlus.Data\n\nmodule MovieValidations =\n    type VError =\n        | MustNotBeEmpty\n        | MustBeAtLessThanChars of int\n        | MustBeADate\n        | MustBeOlderThan of int\n        | MustBeWithingRange of decimal * decimal\n\n    module String =\n        let nonEmpty (x:string) : Validation\u003CVError list, string\u003E =\n            if String.IsNullOrEmpty x\n            then Failure [MustNotBeEmpty]\n            else Success x\n        let mustBeLessThan (i: int) (x: string) : Validation\u003CVError list, string\u003E =\n            if isNull x || x.Length \u003E i\n            then Failure [MustBeAtLessThanChars i]\n            else Success x\n\n    module Number =\n        let mustBeWithin (from, to\u0027) x =\n            if from\u003C= x \u0026\u0026 x \u003C= to\u0027\n            then Success x\n            else Failure [MustBeWithingRange (from, to\u0027)]\n    \n    module DateTime =\n        let classicMovie year (d: DateTime) =\n            if d.Year \u003C year\n            then Success d\n            else Failure [MustBeOlderThan year]\n        let date (d: DateTime) =\n            if d.Date = d\n            then Success d\n            else Failure [MustBeADate]\n    \n    type Genre =\n        | Classic\n        | PostClassic\n        | Modern\n        | PostModern\n        | Contemporary\n    \n    type Movie = {\n        Id: int\n        Title: String\n        ReleaseDate: DateTime\n        Description: String\n        Price: decimal\n        Genre: Genre\n    } with\n        static member Create (id, title, releaseDate, description, price, genre) : Validation\u003CVError list, Movie\u003E =\n            fun title releaseDate description price -\u003E { Id = id; Title = title; ReleaseDate = releaseDate; Description = description; Price = price; Genre = genre }\n            \u003C!\u003E String.nonEmpty title \u003C* String.mustBeLessThan 100 title\n            \u003C*\u003E DateTime.classicMovie 1960 releaseDate \u003C* DateTime.date releaseDate\n            \u003C*\u003E String.nonEmpty description \u003C* String.mustBeLessThan 1000 description\n            \u003C*\u003E Number.mustBeWithin (0.0m, 999.99m) price\n\n    let newRelease = Movie.Create (1, \u0022Midsommar\u0022, DateTime (2019, 6, 24), \u0022Midsommar is a 2019 folk horror film written...\u0022, 1m, Classic) //Failure [MustBeOlderThan 1960]\n    let oldie = Movie.Create (2, \u0022Modern Times\u0022, DateTime (1936, 2, 5), \u0022Modern Times is a 1936 American comedy film...\u0022, 1m, Classic) // Success..\n    let titleToLong = Movie.Create (3, String.Concat (seq { 1..110 }), DateTime (1950, 1, 1), \u002211\u0022, 1m, Classic) //Failure [MustBeAtLessThanChars 100]\n\n\nmodule Person =\n\n    type Name = { unName: String }\n    with static member create s = {unName = s }\n\n    type Email = { unEmail: String } \n    with static member create s = { unEmail = s }\n\n    type Age = { unAge : int }\n    with static member create i = { unAge = i }\n\n    type Person = {\n        name: Name\n        email: Email\n        age: Age }\n    with static member create name email age = { name = name; email = email; age = age }\n\n\n    type Error = \n        | NameBetween1And50\n        | EmailMustContainAtChar\n        | AgeBetween0and120\n\n    // Smart constructors\n    let mkName s =\n        let l = length s\n        if (l \u003E= 1 \u0026\u0026 l \u003C= 50)\n        then Success \u003C| Name.create s\n        else Failure  [NameBetween1And50]\n\n    let mkEmail s =\n        if String.contains \u0027@\u0027 s\n        then Success \u003C| Email.create s\n        else Failure [EmailMustContainAtChar]\n\n    let mkAge a =\n        if (a \u003E= 0 \u0026\u0026 a \u003C= 120)\n        then Success \u003C| Age.create a\n        else Failure [AgeBetween0and120]\n\n    let mkPerson pName pEmail pAge =\n        Person.create\n        \u003C!\u003E mkName pName\n        \u003C*\u003E mkEmail pEmail\n        \u003C*\u003E mkAge pAge\n\n    // Examples\n\n    let validPerson = mkPerson \u0022Bob\u0022 \u0022bob@gmail.com\u0022 25\n    // Success ({name = {unName = \u0022Bob\u0022}; email = {unEmail = \u0022bob@gmail.com\u0022}; age = {unAge = 25}})\n\n    let badName = mkPerson \u0022\u0022 \u0022bob@gmail.com\u0022 25\n    // Failure [NameBetween1And50]\n\n    let badEmail = mkPerson \u0022Bob\u0022 \u0022bademail\u0022 25\n    // Failure [EmailMustContainAtChar]\n\n    let badAge = mkPerson \u0022Bob\u0022 \u0022bob@gmail.com\u0022 150\n    // Failure [AgeBetween0and120]\n\n    let badEverything = mkPerson \u0022\u0022 \u0022bademail\u0022 150\n    // Failure [NameBetween1And50;EmailMustContainAtChar;AgeBetween0and120]\n\n    open FSharpPlus.Lens\n    let asMaybeGood = validPerson ^? Validation._Success\n    // Some ({name = {unName = \u0022Bob\u0022}; email = {unEmail = \u0022bob@gmail.com\u0022}; age = {unAge = 25}})\n    let asMaybeBad = badEverything ^? Validation._Success\n    // None\n\n    let asResultGood = validPerson ^. Validation.isoValidationResult\n    // Ok ({name = {unName = \u0022Bob\u0022}; email = {unEmail = \u0022bob@gmail.com\u0022}; age = {unAge = 25}})\n\n    let asResultBad = badEverything ^. Validation.isoValidationResult\n    // Error [NameBetween1And50;EmailMustContainAtChar;AgeBetween0and120]\n\n\nmodule Email =\n\n    // ***** Types *****\n    type AtString = AtString of string\n    type PeriodString = PeriodString of string\n    type NonEmptyString = NonEmptyString of string\n\n    type Email = Email of string\n\n    type VError =\n        | MustNotBeEmpty\n        | MustContainAt\n        | MustContainPeriod\n\n    // ***** Base smart constructors *****\n    // String must contain an \u0027@\u0027 character\n    let atString (x: string) : Validation\u003CVError list, AtString\u003E =\n        if String.contains \u0027@\u0027 x then Success \u003C| AtString x\n        else Failure [MustContainAt]\n\n    // String must contain an \u0027.\u0027 character\n    let periodString (x: string) : Validation\u003CVError list, PeriodString\u003E =\n        if String.contains \u0027.\u0027 x\n        then Success \u003C| PeriodString x\n        else Failure [MustContainPeriod]\n\n    // String must not be empty\n    let nonEmptyString (x: string) : Validation\u003CVError list, NonEmptyString\u003E =\n        if not \u003C| String.IsNullOrEmpty x\n        then Success \u003C| NonEmptyString x\n        else Failure [MustNotBeEmpty]\n\n    // ***** Combining smart constructors *****\n    let email (x: string) : Validation\u003CVError list, Email\u003E =\n        result (Email x) \u003C*\n        nonEmptyString x \u003C*\n        atString       x \u003C*\n        periodString   x\n\n    // ***** Example usage *****\n    let success = email \u0022bob@gmail.com\u0022\n\n    // Success (Email \u0022bob@gmail.com\u0022)\n\n    let failureAt = email \u0022bobgmail.com\u0022\n    // Failure [MustContainAt]\n\n    let failurePeriod = email \u0022bob@gmailcom\u0022\n    // Failure [MustContainPeriod]\n\n\n    let failureAll = email \u0022\u0022\n    // Failure [MustNotBeEmpty;MustContainAt;MustContainPeriod]\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking Applicative Validation](https://dev.to/choc13/grokking-applicative-validation-lh6).\n   It contains examples using F#\u002B and an explanation from scratch.\n\n\n*)"},{"uri":"/FSharpPlus/type-seqt.html","title":"SeqT\u0026lt;Monad\u0026lt;bool\u0026gt;, \u0027T\u0026gt;\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n// For some reason AsyncDownloadString is not found during doc build. The following is a dumb implementation just to make the compiler happy.\n// TODO find out why.\n\ntype System.Net.WebClient with member wc.AsyncDownloadString (uri: System.Uri) = async { return wc.DownloadString uri }\n\n(**\nSeqT\u0026lt;Monad\u0026lt;bool\u0026gt;, \u0027T\u0026gt;\n=====================\n\nThis is the the Monad Transformer for \u0060seq\u003C\u0027T\u003E\u0060 so it adds sequencing to existing monads by composing them with \u0060seq\u003C\u0027T\u003E\u0060.\n\nAny monad can be composed, but a very typical usage is when combined with \u0060Async\u0060 or \u0060Task\u0060, which gives rise to what\u0027s called async sequences.\n\nTherefore the [AsyncSeq](https://github.com/fsprojects/FSharp.Control.AsyncSeq) library can be considered a specialization of this monad in Async.\n\nThe original post from AsyncSeq can be found [here](http://tomasp.net/blog/async-sequences.aspx) and we can run those examples with \u0060SeqT\u0060 by adapting the code.\n\nIn order to do so we need to be aware of the design differences of both implementations.\n\n\u003Cstyle\u003E\nbody #fsdocs-content table, th, td { border: 1px solid black;border-collapse: collapse; }\nbody #fsdocs-content table code { word-break: normal; }\n\u003C/style\u003E\n\n| **AsyncSeq**                  | **SeqT**                              | **Notes**\t|\n|:------------------------------|:--------------------------------------|:---------:|\n|\u0060AsyncSeq\u003C\u0027T\u003E\u0060                 |\u0060SeqT\u003CAsync\u003Cbool\u003E, \u0027T\u003E\u0060                |           |\n|\u0060asyncSeq { .. }\u0060              |\u0060monad.plus { .. }\u0060                    | At some point it needs to be inferred as \u0060SeqT\u003CAsync\u003Cbool\u003E, \u0027T\u003E\u0060, or it can be specified with type parameters: \u0060monad\u003CSeqT\u003CAsync\u003Cbool\u003E, \u0027T\u003E\u003E.plus\u0060 |\n|\u0060let! x = y\u0060                   |\u0060let! x = SeqT.lift y\u0060                 | No auto lifting. Lifting should be explicit. |\n|\u0060do! x\u0060                        |\u0060do! SeqT.lift x\u0060                      | \u0027\u0027        |\n|\u0060for x in s\u0060                   |\u0060let! x = s\u0060                           | When \u0060s: SeqT\u0060 otherwise \u0060for\u0060 is still ok with regular sequences. |\n|\u0060AsyncSeq.[function]\u0060          |\u0060SeqT.[function]\u0060                      | See differences in functions below. |\n|\u0060AsyncSeq.[function]Async\u0060     |\u0060SeqT.[function]M\u0060                     | \u0027\u0027        |\n|\u0060AsyncSeq.skip\u0060                |\u0060SeqT.drop\u0060                            | \u0060.skip\u0060 is available but consistently with F# collections, it throws when the sequence doesn\u0027t have enough elements. |\n|\u0060AsyncSeq.take\u0060                |\u0060SeqT.truncate\u0060                        | \u0060.take\u0060 is available but consistently with F# collections, it throws when the sequence doesn\u0027t have enough elements. |\n|\u0060AsyncSeq.toBlockingSequence\u0060  |\u0060SeqT.run \u003E\u003E Async.RunSynchronously\u0060   | Not really the same but semantically equivalent. |\n|\u0060AsyncSeq.toListAsync\u0060         |\u0060SeqT.runAsList\u0060                       |           |\n|\u0060AsyncSeq.toArrayAsync\u0060        |\u0060SeqT.runAsArray\u0060                      |           |\n|\u0060AsyncSeq.zipWith\u0060             |\u0060SeqT.map2\u0060                            | Aligned with F# collections. |\n|\u0060AsyncSeq.zipWithAsync\u0060        |\u0060SeqT.map2M\u0060                           |  \u0027\u0027       |\n|\u0060AsyncSeq.ofObservable\u0060        |\u0060Observable.toAsyncSeq\u0060                |\u0060.toTaskSeq\u0060 is also available. |\n|\u0060AsyncSeq.toObservable\u0060        |\u0060Observable.ofAsyncSeq\u0060                |\u0060.ofTaskSeq\u0060 is also available. |\n\n\n\nExamples\n--------\n*)\n\n#r \u0022nuget: FSharpPlus,1.3.0-CI02744\u0022 // still as pre-release\n\nopen System\nopen System.Net\nopen FSharpPlus\nopen FSharpPlus.Data\n\nlet urls =\n  [ \u0022http://bing.com\u0022; \u0022http://yahoo.com\u0022;\n    \u0022http://google.com\u0022; \u0022http://msn.com\u0022; ]\n\n// Asynchronous sequence that returns URLs and lengths\n// of the downloaded HTML. Web pages from a given list\n// are downloaded asynchronously in sequence.\nlet pages: SeqT\u003C_, _\u003E = monad.plus {\n    use wc = new WebClient ()\n    for url in urls do\n        try\n            let! html = wc.AsyncDownloadString (Uri url) |\u003E SeqT.lift\n            yield url, html.Length\n        with _ -\u003E\n            yield url, -1 }\n\n\n// Print URL of pages that are smaller than 100k\nlet printPages =\n    pages\n    |\u003E SeqT.filter (fun (_, len) -\u003E len \u003C 100000)\n    |\u003E SeqT.map fst\n    |\u003E SeqT.iter (printfn \u0022%s\u0022)\n \nprintPages |\u003E Async.Start\n\n\n(**\nThese samples above and below come from the [original AsyncSeq post](http://tomasp.net/blog/async-sequences.aspx) and they can be easily switched to task sequeces (taskSeq), simply add \u0060|\u003E Async.StartAsTask\u0060 between \u0060wc.AsyncDownloadString (Uri url)\u0060 and \u0060|\u003E SeqT.lift\u0060 then run eveything but the \u0060printPages |\u003E Async.Start\u0060.\n*)\n\n// A simple webcrawler\n\n#r \u0022nuget: FSharpPlus,1.3.0-CI02744\u0022\n#r \u0022nuget: HtmlAgilityPack\u0022\n\nopen System\nopen System.Net\nopen System.Text.RegularExpressions\nopen HtmlAgilityPack\nopen FSharp.Control\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n// ----------------------------------------------------------------------------\n// Helper functions for downloading documents, extracting links etc.\n\n/// Asynchronously download the document and parse the HTML\nlet downloadDocument url = async {\n  try let wc = new WebClient ()\n      let! html = wc.AsyncDownloadString (Uri url)\n      let doc = new HtmlDocument ()\n      doc.LoadHtml html\n      return Some doc \n  with _ -\u003E return None }\n\n/// Extract all links from the document that start with \u0022http://\u0022\nlet extractLinks (doc:HtmlDocument) = \n  try\n    [ for a in doc.DocumentNode.SelectNodes (\u0022//a\u0022) do\n        if a.Attributes.Contains \u0022href\u0022 then\n          let href = a.Attributes.[\u0022href\u0022].Value\n          if href.StartsWith \u0022https://\u0022 then\n            let endl = href.IndexOf \u0027?\u0027\n            yield if endl \u003E 0 then href.Substring(0, endl) else href ]\n  with _ -\u003E []\n\n/// Extract the \u003Ctitle\u003E of the web page\nlet getTitle (doc: HtmlDocument) =\n  let title = doc.DocumentNode.SelectSingleNode \u0022//title\u0022\n  if title \u003C\u003E null then title.InnerText.Trim () else \u0022Untitled\u0022\n\n// ----------------------------------------------------------------------------\n// Basic crawling - crawl web pages and follow just one link from every page\n\n/// Crawl the internet starting from the specified page\n/// From each page follow the first not-yet-visited page\nlet rec randomCrawl url = \n  let visited = new System.Collections.Generic.HashSet\u003C_\u003E ()\n\n  // Visits page and then recursively visits all referenced pages\n  let rec loop url = monad.plus {\n    if visited.Add(url) then\n      let! doc = downloadDocument url |\u003E SeqT.lift\n      match doc with \n      | Some doc -\u003E\n          // Yield url and title as the next element\n          yield url, getTitle doc\n          // For every link, yield all referenced pages too\n          for link in extractLinks doc do\n            yield! loop link \n      | _ -\u003E () }\n  loop url\n\n// Use SeqT combinators to print the titles of the first 10\n// web sites that are from other domains than en.wikipedia.org\nrandomCrawl \u0022https://en.wikipedia.org/wiki/Main_Page\u0022\n|\u003E SeqT.filter (fun (url, title) -\u003E url.Contains \u0022en.wikipedia.org\u0022 |\u003E not)\n|\u003E SeqT.map snd\n|\u003E SeqT.take 10\n|\u003E SeqT.iter (printfn \u0022%s\u0022)\n|\u003E Async.Start"},{"uri":"/FSharpPlus/type-writer.html","title":"Writer\u003C\u0027Monoid,\u0027T\u003E\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nWriter\u003C\u0027Monoid,\u0027T\u003E\n==================\n\nThe Writer monad is good way to introduce a log of a computation. \nIt gives you a different way of logging that can be useful when you want to be able to inspect the logged results.\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\nopen FSharpPlus\nopen FSharpPlus.Data\ntype LogEntry={msg:string}\nwith\n    static member create x = {msg = x}\n\nlet output x =  Writer.tell [LogEntry.create x]\n\nlet calc = monad {\n  do! output \u0022I\u0027m going to start a heavy computation\u0022 // start logging\n  let y = sum [1..100_000]\n  do! output (string y)\n  do! output \u0022The computation finished\u0022\n  return y // return the result of the computation\n}\n\nlet logs = Writer.exec calc\nlet (y,logs\u0027) = Writer.run calc\n\n(**\nThere are some performance implications around using a regular list, that\u0027s why you should use DList in these scenarios\n*)\n\nlet output\u0027 x =  Writer.tell \u003C| DList.ofSeq [LogEntry.create x]\n\nlet calc\u0027 = monad {\n  do! output\u0027 \u0022I\u0027m going to start a heavy computation\u0022 // start logging\n  let y = sum [1..100_000]\n  do! output\u0027 (string y)\n  do! output\u0027 \u0022The computation finished\u0022\n  return y // return the result of the computation\n}\n\nlet logs2 = Writer.exec calc\u0027\nlet (y\u0027,logs2\u0027) = Writer.run calc\u0027"},{"uri":"/FSharpPlus/abstraction-arrow.html","title":"Arrow\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n(**\nArrow\n=====\n\nArrow\u003C\u0027T, \u0027U\u003E represents a process that takes as input something of type \u0027T and outputs something of type \u0027U.\n\n___\n\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060arr f\u0060\u0060 and  \u0060\u0060first f\u0060\u0060\n\n*)\n(**\n    static member Arr(f: \u0027T -\u003E \u0027U) : \u0027Arrow\u003C\u0027T, \u0027U\u003E\n    static member First (f: \u0027Arrow\u003C\u0027T, \u0027U\u003E) : \u0027Arrow\u003C(\u0027T * \u0027V),(\u0027U * \u0027V)\u003E\n*)\n(**\n\n\n\nOther operations\n----------------\n\n * \u0060\u0060second f\u0060\u0060\n*)\n(**\n    static member Second (f: \u0027Arrow\u003C\u0027T, \u0027U\u003E) : \u0027Arrow\u003C(\u0027V * \u0027T),(\u0027V * \u0027U)\u003E\n*)\n(**\n * \u0060\u0060(***) f g\u0060\u0060\n*)\n(**\n    static member \u0060\u0060***\u0060\u0060 (f : \u0027Arrow\u003C\u0027T1,\u0027U1\u003E) (g : \u0027Arrow\u003C\u0027T2,\u0027U2\u003E) : \u0027Arrow\u003C(\u0027T1 * \u0027T2),(\u0027U1 * \u0027U2)\u003E\n*)\n(**\n * \u0060\u0060(\u0026\u0026\u0026) f g\u0060\u0060\n*)\n(**\n    static member  (\u0026\u0026\u0026) (f : \u0027Arrow\u003C\u0027T,\u0027U1\u003E) (g : \u0027Arrow\u003C\u0027T,\u0027U2\u003E) : \u0027Arrow\u003C\u0027T,(\u0027U1 * \u0027U2)\u003E\n*)\n(**\n\n\n\nRules\n-----\n*)\n(**\n    arr id = id\n    arr (f \u003E\u003E\u003E g) = arr f \u003E\u003E\u003E arr g\n    first (arr f) = arr (first f)\n    first (f \u003E\u003E\u003E g) = first f \u003E\u003E\u003E first g\n    first f \u003E\u003E\u003E arr fst = arr fst \u003E\u003E\u003E f\n    first f \u003E\u003E\u003E arr (id *** g) = arr (id *** g) \u003E\u003E\u003E first f\n    first (first f) \u003E\u003E\u003E arr assoc = arr assoc \u003E\u003E\u003E first f\n\n    where assoc ((a,b),c) = (a,(b,c))\n*)\n(**\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060\u0027T-\u003E\u0027U\u0060\u0060\n -  \u0060\u0060Func\u003C\u0027T,\u0027U\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060Kleisli\u003C\u0027T, \u0027Monad\u003C\u0027U\u003E\u003E\u0060\u0060](type-kleisli.html)\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n*)"},{"uri":"/FSharpPlus/extensions.html","title":"Extensions\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nExtensions\n=======================\nExtensions are what you probably expect: helper functions for existing types.\n \nThey are defined as modules with the same name as the types they operate on\nunder the FSharpPlus namespace, so can be accessed via:\n*)\nopen FSharpPlus\n\n(**\nSome functions are common across foldable types such as \u0060intercalate\u0060 on\nList, Array and Seq, and others are common across wrapping containers,\nsuch as \u0060map\u0060, \u0060bind\u0060 and \u0060apply\u0060 on List, Array, and Seq, but also Option and Result.\n\nConstruction:\n=============\nThe \u0060singleton\u0060 function is already defined for Seq, Array and List, but F#\u002B adds it for Enumerator:\n\n * Enumerator.singleton - construct a container with the given value inside it\n\nTo construct MonadError instances (Result or Choice) you can use result/throw:\n\n * Result.result / Choice.result - construct with the given value (as Ok or Choice1Of2)\n * Result.throw / Choice.throw - construct an error from the given value (as Error or Choice2of2)\n\nIt\u0027s also possible to construct by wrapping exception producing functions:\n\n * Option.protect - returns None on exception\n * Result.protect - returns Error with exception value on exception\n * Choice.protect - returns Choice2Of2 with exception value on exception\n*)\n// throws \u0022ArgumentException: The input sequence was empty.\u0022\nlet expectedSingleItem1 : int = List.exactlyOne []\n\n// returns a Result.Error holding the exception as its value:\nlet expectedSingleItem2 : Result\u003Cint,exn\u003E = Result.protect List.exactlyOne []\n\n// ...or like typical try prefixed functions, treat exception as None\nlet expectedSingleItem3 : Option\u003Cint\u003E = Option.protect List.exactlyOne []\n\n// which might look like this:\nlet inline tryExactlyOne xs = Option.protect List.exactlyOne xs\n\n(**\nDeconstruction (unwrapping):\n============================\nSome extensions on Result are designed to behave like Option:\n\n * Result.get - unwraps the value when it is an \u0027ok, otherwise throws an exception\n * Result.defaultValue - return the \u0027ok value if present, otherwise the default value\n * Result.defaultWith - return the \u0027ok value if present, otherwise apply the given function\n   to the \u0027error value\n\nTo deconstruct MonadError instances (Result or Choice) use:\n\n * Result.either - unwraps the result by applying the given \u0060ok\u0060 or \u0060err\u0060 function as appropriate\n * Choice.either - unwraps the choice by applying the given \u0060choice1\u0060 or \u0060choice2\u0060 function as appropriate\n\nNote that there is also the generic \u0060either\u0060 operator function that works\nexactly the same as \u0060Result.either\u0060.\n\nAlso, see the generic function [\u0060option\u0060](reference/fsharpplus-operators.html) that\nunwraps an Option in a similar way to \u0060either\u0060.\n\nOn Foldables\n============\nFoldables are the class of data structures that can be folded to a summary value.\nMost collections, or specifically \u0027foldable\u0027 instances implement these:\n\n * intersperse - takes an element and \u0060intersperses\u0027 that element between the elements\n\n*)\nlet a = [\u0022Bob\u0022; \u0022Jane\u0022] |\u003E List.intersperse \u0022and\u0022\n// vat a : string list = [\u0022Bob\u0022; \u0022and\u0022; \u0022Jane\u0022]\n\nlet b = \u0022WooHoo\u0022 |\u003E String.intersperse \u0027-\u0027\n// val b : string = \u0022W-o-o-H-o-o\u0022\n\n(**\n * intercalate - insert a list of elements between each element and flattens\n*)\nlet c = [[1;2]; [3;4]] |\u003E List.intercalate [-1;-2];;\n// val c : int list = [1; 2; -1; -2; 3; 4]\n\nlet d = [\u0022Woo\u0022; \u0022Hoo\u0022] |\u003E String.intercalate \u0022--o.o--\u0022;;\n// val d : string = \u0022Woo--o.o--Hoo\u0022\n\n(**\n * zip/unzip - tuple together values inside two containers, or untuble tupled values\n\nOn Monad/Functor/Applicatives\n=============================\nTypes that implement these will (typically) have these functions defined:\n\n * map - apply a mapping function to the value inside a container\n * bind - take a contained value, and apply a function that produces another contained value\n * apply - like map but where the mapping function is also inside a container\n\nThese can also be invoked from the generic functions without module prefix as per\n[generic functions \u0026 operators](reference/fsharpplus-operators.html).\n\nFlatten:\n========\nFlatten can be used when a container has another container inside it:\n\n * Choice.flatten\n * Result.flatten\n * Option.flatten (already defined in FSharp Core)\n\nNote that on traversable types like List, Array and Seq, FSharp Core uses the\nmore common \u0060concat\u0060 for flatten and so this naming is continued for Enumerable:\n\n * Enumerable.concat\n\nPartitioning:\n=============\nPartitioning can be done by applying a separating function that produces a Choice:\n\n * Array.partitionMap\n * List.partitionMap\n*)\nlet isEven x = (x % 2) = 0\nlet chooseEven x = if isEven x then Choice1Of2 x else Choice2Of2 x\n\nlet e = [1; 2; 3; 4] |\u003E List.partitionMap chooseEven\n// val e : int list * int list = ([2; 4], [1; 3])\n\n(**\nConversion functions:\n=====================\nF#\u002B adds functions to convert between Result, Choice and Option types.\n\nThese should be self explanatory, but be aware that sometimes they are \u0027lossy\u0027\nusually when converting to Option:\n*)\n(**\n// Convert a \u0060Result\u0060 to an \u0060Option\u0060 - effectively throws away error value\n// when present, by replacing with \u0060None\u0060\n\u0060\u0060\u0060f#\nrequest |\u003E validateRequest |\u003E Option.ofResult\n\u0060\u0060\u0060\n*)\n\n(**\nGoing the other way is similar, but a value needs to be filled in for None:\n*)\nlet xs = [\u0022some value\u0022]\nlet firstElementOption = xs |\u003E List.tryHead\n\n// Convert an \u0060Option\u0060 to a \u0060Result\u0060 will use unit as the Error:\nfirstElementOption |\u003E Option.toResult\n\n// ...but you can specify an error value with Option.toResultWith:\nfirstElementOption |\u003E Option.toResultWith \u0022No Element\u0022\n\n(**\nConverting between \u0060Choice\u0060 and \u0060Result\u0060 is often useful:\n\u0060\u0060\u0060f#\nlet asyncChoice = anAsyncValue |\u003E Async.Catch |\u003E Async.map Result.ofChoice\n\u0060\u0060\u0060\n*)\n\n(**\nThe String type:\n================\n\n * [ String ](reference/fsharpplus-string.html)\n   * intercalate, intersperse, \n   * split, replace\n   * isSubString, startsWith, endsWith, contains\n   * toUpper, toLower\n   * trimWhiteSpaces\n   * normalize\n   * removeDiacritics\n   * padLeft, padLeftWith, padRight, padRightWith\n   * trim, trimStart, trimEnd\n   * item, tryItem\n   * rev\n   * take, skip takeWhile, skipWhile\n   * truncate, drop\n   * findIndex, tryFindIndex\n   * findSliceIndex, tryFindSliceIndex\n   * findLastSliceIndex, tryFindLastSliceIndex\n   * toArray, ofArray, toList, ofList, toSeq, ofSeq, toCodePoints, ofCodePoints\n   * getBytes\n\nCollections / Traversable types:\n=================================\n * [Array](reference/fsharpplus-array.html)\n   * intercalate, intersperse,\n   * split, replace,\n   * findSliceIndex, trySliceIndex,\n   * findLastSliceIndex, tryLastSliceIndex,\n   * partitionMap\n * [IList](reference/fsharpplus-ilist.html)\n   * toIReadOnlyList\n * [List](reference/fsharpplus-list.html)\n   * singleton,\n   * cons,\n   * apply,\n   * tails, take, skip, drop,\n   * intercalate, intersperse, \n   * split, replace,\n   * toIReadOnlyList,\n   * findSliceIndex, tryFindSliceIndex,\n   * findLastSliceIndex, tryLastSliceIndex,\n   * partitionMap\n   * setAt, removeAt\n * [Enumerator](reference/fsharpplus-enumerator.html)\n   * EmptyEnumerator\n      * Empty - create an empty enumerator\n   * ConcatEnumerator\n      * concat\n   * MapEnumerators\n      * map, mapi, map2, mapi2, map3\n   * singleton\n   * tryItem, nth\n   * choose\n   * filter\n   * unfold\n   * upto\n   * zip, zip3\n * [ Seq ](reference/fsharpplus-seq.html)\n    * bind, apply, foldback\n    * chunkBy\n    * intersperse, intercalate,\n    * split, replace\n    * drop\n    * replicate\n    * toIReadOnlyList\n    * findSliceIndex, tryFindSliceIndex\n    * findLastSliceIndex, tryLastSliceIndex,\n * [ IReadOnlyCollection ](reference/fsharpplus-ireadonlycollection.html)\n     * ofArray, ofList, ofSeq\n     * map\n * [ IReadOnlyList ](reference/fsharpplus-ireadonlylist.html)\n   * ofArray, toArray\n   * trySetItem, tryItem\n * [ Map ](reference/fsharpplus-map.html)\n   * keys, values\n   * mapValues, mapValues2\n   * zip, unzip\n   * unionWith, union, intersectWith, intersect\n * [ Dict ](reference/fsharpplus-dict.html)\n   * toIReadOnlyDictionary\n   * tryGetValue\n   * containsKey\n   * keys, values\n   * map, map2\n   * zip, unzip\n   * unionWith, union, intersectWith, intersect\n * [ IReadOnlyDictionary ](reference/fsharpplus-ireadonlydictionary.html)\n   * add, \n   * tryGetValue, containsKey,\n   * keys, values,\n   * map, map2, \n   * zip, unzip, \n   * unionWith, union, intersectWith, intersect\n\nAsync, Task and ValueTask:\n==========================\n * [ Task ](reference/fsharpplus-task.html)\n   * map, map2, map3\n   * apply\n   * zip\n   * join\n   * ignore\n * [ ValueTask ](reference/fsharpplus-valueTask.html)\n   * map, map2, map3\n   * apply\n   * zip\n   * join\n   * ignore\n * [ Async ](reference/fsharpplus-async.html)\n   * map, map2\n   * zip\n   * join\n   * apply\n   * raise\n\nOption, Choice and Result types:\n================================\n * [Option](reference/fsharpplus-option.html)\n   * apply, \n   * unzip, zip,\n   * toResult, toResultWith, ofResult, \n   * protect\n * [Choice](reference/fsharpplus-choice.html)\n   * result, throw - construct a Choice\n   * bind, apply, flatten,\n   * map,\n   * catch, - deprecated\n   * bindChoice2Of2,\n   * either,\n   * protect\n * [ Result ](reference/fsharpplus-result.html)\n   * result, throw - construct a Result\n   * apply, (map, bind already defined)\n   * flatten,\n   * bindError,\n   * either,\n   * protect,\n   * get,\n   * defaultValue, defaultWith,\n   * toChoice, ofChoice,\n   * partition\n\nExtensions Methods (on existing types):\n=======================================\nThese are usable from C#\n\n * [ Extension Methods ](extension-methods.html)\n   * IEnumerable\u003C\u0027T\u0027\u003E.GetSlice\n   * List\u003C\u0027T\u003E.GetSlice\n   * Task\u003C\u0027T\u003E.WhenAll\n   * Async.Sequence - of seq, list or array\n   * Option.Sequence - of seq\n\n*)"},{"uri":"/FSharpPlus/type-dlist.html","title":"DList\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nDList\n=========================\n\nDList is an ordered linear structure implementing the List signature (head, tail, cons), \nend-insertion (add), and O(1) append. Ordering is by insertion history.\nDList is an implementation of [John Hughes\u0027 append list](http://dl.acm.org/citation.cfm?id=8475).\n\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n(**\n### Constructing DLists\n*)\n// you can construct a DList by using ofSeq\nlet list123 = DList.ofSeq [ 1; 2; 3 ]\n\nlet listEmpty = DList.empty\n// cons\nlet list2 = DList.cons 100 list123 \n// append two DLists\nlet list3 = DList.append list2 (DList.singleton 200)\n// this can be written as (since list2 is a DList):\nlet list3\u0027 = plus list2 (result 200)\n// in order to get back to a regular list you can then use toList:\nlet list4 = toList list3\u0027\n\n(**\n### Operations on DList\n*)\n\nlet lengthOfList3 = DList.length list3\nlet lengthOfList3\u0027 = length list3\n\nlet headOf3 = DList.head list3 \nlet headOf3\u0027 = head list3 "},{"uri":"/FSharpPlus/abstraction-functor.html","title":"Functor\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nFunctor\n=======\nThe Functor abstraction is used for types that can be mapped over.\n___\nMinimal complete definition\n---------------------------\n * \u0060\u0060map f x\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060(|\u003E\u003E) x f\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060(\u003C\u003C|) f x\u0060\u0060 \u0026nbsp; / \u0026nbsp; \u0060\u0060(\u003C!\u003E) f x\u0060\u0060\n*)\n(**\n    static member Map (x: \u0027Functor\u003C\u0027T\u003E, f: \u0027T -\u003E \u0027U) : \u0027Functor\u003C\u0027U\u003E\n*)\n(**\nOther operations\n----------------\n * \u0060\u0060unzip x\u0060\u0060\n*)\n(**\n    static member Unzip (x: \u0027Functor\u003C\u0027T * \u0027U\u003E) : \u0027Functor\u003C\u0027T\u003E * \u0027Functor\u003C\u0027U\u003E\n*)\n(**\nRules\n-----\n*)\n(**\n    map id  =  id\n    map (f \u003C\u003C g) = map f \u003C\u003C map g\n*)\n(**\nRelated Abstractions\n--------------------\n - [Applicative](abstraction-applicative.html): An applicative is a functor whose \u0060\u0060map\u0060\u0060 operation can be splitted in \u0060\u0060return\u0060\u0060 and \u0060\u0060(\u003C*\u003E)\u0060\u0060 operations,\n \n - [Monad](abstraction-monad.html) : Monads are functors with an additional \u0060\u0060Join\u0060\u0060 operation,\nConcrete implementations\n------------------------\nFrom F#\n \n -  \u0060\u0060seq\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060list\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060array\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027T [,]\u0060\u0060\n -  \u0060\u0060\u0027T [,,]\u0060\u0060\n -  \u0060\u0060\u0027T [,,,]\u0060\u0060\n -  \u0060\u0060option\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060voption\u003C\u0027T\u003E\u0060\u0060 \n -  \u0060\u0060IObservable\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Lazy\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Async\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T,\u0027U\u003E\u0060\u0060\n -  \u0060\u0060Choice\u003C\u0027T,\u0027U\u003E\u0060\u0060\n -  \u0060\u0060KeyValuePair\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060Map\u003C\u0027Key,\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027Monoid * \u0027T\u0060\u0060\n -  \u0060\u0060\u0027struct (\u0027Monoid * \u0027T)\u0060\u0060\n -  \u0060\u0060Task\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060ValueTask\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060\u0027R-\u003E\u0027T\u0060\u0060\n -  \u0060\u0060Expr\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060Dictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060IDictionary\u003C\u0027Key,\u0027 T\u003E\u0060\u0060\n -  \u0060\u0060IReadOnlyDictionary\u003C\u0027Key, \u0027T\u003E\u0060\u0060\n -  \u0060\u0060ResizeArray\u003C\u0027T\u003E\u0060\u0060\n \nFrom F#\u002B\n\n -  [\u0060\u0060Cont\u003C\u0027R, \u0027T\u003E\u0060\u0060](type-cont.html)\n -  [\u0060\u0060ContT\u003C\u0027R, \u0027T\u003E\u0060\u0060](type-contt.html)\n -  [\u0060\u0060Reader\u003C\u0027R, \u0027T\u003E\u0060\u0060](type-reader.html)\n -  [\u0060\u0060ReaderT\u003C\u0027R, \u0027Monad\u003C\u0027T\u003E\u003E\u0060\u0060](type-readert.html)\n -  [\u0060\u0060Writer\u003C\u0027Monoid, \u0027T\u003E\u0060\u0060](type-writer.html)\n -  [\u0060\u0060WriterT\u003C\u0027Monad\u003C\u0027T * \u0027Monoid\u003E\u003E\u0060\u0060](type-writert.html)\n -  [\u0060\u0060State\u003C\u0027S, \u0027T * \u0027S\u003E\u0060\u0060](type-state.html)\n -  [\u0060\u0060StateT\u003C\u0027S, \u0027Monad\u003C\u0027T * \u0027S\u003E\u003E\u0060\u0060](type-statet.html)\n -  [\u0060\u0060OptionT\u003C\u0027Monad\u003Coption\u003C\u0027T\u003E\u003E\u0060\u0060](type-optiont.html)\n -  [\u0060\u0060ValueOptionT\u003C\u0027Monad\u003Cvoption\u003C\u0027T\u003E\u003E\u0060\u0060](type-valueoptiont.html)\n -  [\u0060\u0060SeqT\u003C\u0027Monad\u003Cseq\u003C\u0027T\u003E\u003E\u0060\u0060](type-seqt.html)\n -  [\u0060\u0060ListT\u003C\u0027Monad\u003Clist\u003C\u0027T\u003E\u003E\u0060\u0060](type-listt.html)\n -  [\u0060\u0060ResultT\u003C\u0027Monad\u003CResult\u003C\u0027T, \u0027TError\u003E\u003E\u0060\u0060](type-resultt.html)\n -  [\u0060\u0060ChoiceT\u003C\u0027Monad\u003CChoice\u003C\u0027T, \u0027TError\u003E\u003E\u0060\u0060](type-choicet.html)\n -  [\u0060\u0060Free\u003C\u0027Functor\u003C\u0027T\u003E, \u0027T\u003E\u0060\u0060](type-free.html)\n -  [\u0060\u0060NonEmptyList\u003C\u0027T\u003E\u0060\u0060](type-nonempty.html)\n -  [\u0060\u0060NonEmptySet\u003C\u0027T\u003E\u0060\u0060](type-nonempty-set.html)\n -  [\u0060\u0060NonEmptyMap\u003C\u0027Key, \u0027T\u003E\u0060\u0060](type-nonempty-map.html)\n -  [\u0060\u0060Validation\u003C\u0027Error, \u0027T\u003E\u0060\u0060](type-validation.html)\n -  [\u0060\u0060ZipList\u003C\u0027T\u003E\u0060\u0060](type-ziplist.html)\n -  [\u0060\u0060ParallelArray\u003C\u0027T\u003E\u0060\u0060](type-parallelarray.html)\n -  [\u0060\u0060Const\u003C\u0027C, \u0027T\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060Compose\u003C\u0027AlternativeF\u003C\u0027AlternativeG\u003C\u0027T\u003E\u003E\u003E\u0060\u0060](type-compose.html)\n -  [\u0060\u0060DList\u003C\u0027T\u003E\u0060\u0060](type-dlist.html)\n -  [\u0060\u0060Kleisli\u003C\u0027T, \u0027Monad\u003C\u0027U\u003E\u003E\u0060\u0060](type-kleisli.html)\n -  [\u0060\u0060Coproduct\u003C\u0027FunctorL\u003C\u0027T\u003E, \u0027FunctorR\u003C\u0027T\u003E\u003E\u0060\u0060](type-coproduct.html)\n -  [\u0060\u0060Vector\u003C\u0027T, \u0027Dimension\u003E\u0060\u0060](type-vector.html)\n -  [\u0060\u0060Matrix\u003C\u0027T, \u0027Rows, \u0027Columns\u003E\u0060\u0060](type-matrix.html)\n\nRestricted:\n -  \u0060\u0060string\u0060\u0060\n -  \u0060\u0060StringBuilder\u0060\u0060\n -  \u0060\u0060Set\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IEnumerator\u003C\u0027T\u003E\u0060\u0060\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Math.Generic\n\nlet getLine    = async { return System.Console.ReadLine () }\nlet putStrLn x = async { printfn \u0022%s\u0022 x}\nlet print    x = async { printfn \u0022%A\u0022 x}\n\n// Test IO\nlet action = monad {\n    do! putStrLn  \u0022What is your first name?\u0022\n    let! fn = getLine\n    do! putStrLn  (\u0022Thanks, \u0022 \u002B fn) \n    do! putStrLn  (\u0022What is your last name?\u0022)\n    let! ln = getLine\n    let  fullname = fn \u002B \u0022 \u0022 \u002B ln\n    do! putStrLn  (\u0022Your full name is: \u0022 \u002B fullname)\n    return fullname }\n\n\n// Test Functors\nlet times2,minus3 = (*) 2, (-)/\u003E 3\nlet resSome1      = map minus3 (Some 4G)\nlet noValue       = map minus3 None\nlet lstTimes2     = map times2 [1;2;3;4]\nlet fTimes2minus3 = map minus3 times2\nlet res39         = fTimes2minus3 21G\nlet getChars      = map (fun (x: string) -\u003E x.ToCharArray () |\u003E Seq.toList) action\nlet quot7         = map ((\u002B) 2) \u003C@ 5 @\u003E\n\n\n// try -\u003E runIO getChars ;;\n\n// Define a type Tree\ntype Tree\u003C\u0027a\u003E =\n    | Tree of \u0027a * Tree\u003C\u0027a\u003E * Tree\u003C\u0027a\u003E\n    | Leaf of \u0027a\n    static member map f (t:Tree\u003C\u0027a\u003E  )  =\n        match t with\n        | Leaf  x          -\u003E Leaf (f x)\n        | Tree (x, t1, t2) -\u003E Tree (f x, Tree.map f t1, Tree.map f t2)\n\n// add instance for Functor class\n    static member Map (x: Tree\u003C_\u003E, f) = Tree.map f x\n\nlet myTree = Tree(6, Tree(2, Leaf 1, Leaf 3), Leaf 9)\nlet mappedTree = map fTimes2minus3 myTree\n\n\n\n// An Applicative is automatically a Functor\n\ntype ZipList\u003C\u0027s\u003E = ZipList of \u0027s seq with\n    static member Return (x: \u0027a) = ZipList (Seq.initInfinite (konst x))\n    static member (\u003C*\u003E) (ZipList (f :seq\u003C\u0027a-\u003E\u0027b\u003E), ZipList x) = ZipList (Seq.zip f x |\u003E Seq.map (fun (f, x) -\u003E f x)) : ZipList\u003C\u0027b\u003E\n\nlet mappedZipList = map string (ZipList [1; 2; 3])\n\n\n// A Monad is automatically a Functor\n\ntype MyList\u003C\u0027s\u003E = MyList of \u0027s seq with\n    static member Return (x:\u0027a)     = MyList x\n    static member (\u003E\u003E=)  (MyList x: MyList\u003C\u0027T\u003E, f) = MyList (Seq.collect (f \u003E\u003E (fun (MyList x) -\u003E x)) x)\n\nlet mappedMyList = map string (MyList [1; 2; 3])\n\n\n(**\nRecommended reading\n-------------------\n\n - Highly recommended Matt Thornton\u0027s blog [Grokking Functors](https://dev.to/choc13/grokking-functors-bla).\n   It contains examples using F#\u002B and an explanation from scratch.\n*)"},{"uri":"/FSharpPlus/abstraction-bifunctor.html","title":"Bifunctor\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n(**\nBifunctor\n=======\n\nIntuitively a bifunctor is a functor with 2 arguments which are covariant.\n\n___\n\nA bifunctor (short for binary functor) or functor of two variables is simply a functor whose domain is the product of two types.\n\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060bimap f g x\u0060\u0060\n*)\n(**\n    static member Bimap (x:\u0027Bifunctor\u003C\u0027T,\u0027V\u003E, f:\u0027T-\u003E\u0027U, g:\u0027V-\u003E\u0027W) :\u0027Bifunctor\u003C\u0027U,\u0027W\u003E\n*)\n(**\n\n\nOther operations\n----------------\n\n * \u0060\u0060first f x\u0060\u0060\n*)\n(**\n    static member First (x:Bifunctor\u003C\u0027T,\u0027V\u003E, f:\u0027T-\u003E\u0027U) :\u0027Bifunctor\u003C\u0027U,\u0027V\u003E\n*)\n(**\n\n * \u0060\u0060second g x\u0060\u0060\n*)\n(**\n    static member Map (x:Bifunctor\u003C\u0027T,\u0027V\u003E, f:\u0027V-\u003E\u0027W) :\u0027Bifunctor\u003C\u0027T,\u0027W\u003E\n*)\n(**\n\n\n\n\nRules\n-----\n*)\n(**\n    bimap f g = first f \u003C\u003C second g\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Functor](abstraction-functor.html): All bifunctors are also functors over the second parameter.\n\n\nConcrete implementations of Bifunctor\u003C\u0027T1,\u0027T2\u003E\n-----------------------------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060\u0027T1 * \u0027T2\u0060\u0060\n -  \u0060\u0060struct (\u0027T1 * \u0027T2)\u0060\u0060\n -  \u0060\u0060Result\u003C\u0027T2, \u0027T1\u003E\u0060\u0060\n -  \u0060\u0060Choice\u003C\u0027T2, \u0027T1\u003E\u0060\u0060\n -  \u0060\u0060KeyValuePair\u003C\u0027T1, \u0027T2\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060Const\u003C\u0027C, \u0027T\u003E\u0060\u0060](type-const.html)\n -  [\u0060\u0060Validation\u003C\u0027Error, \u0027T\u003E\u0060\u0060](type-validation.html)\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\n\n// convert (map) first element to an int and the second to a string\nlet rInt10Str10 = bimap  int string (10.0, 10)\n\n\nlet resOk11  = bimap  ((\u002B) 1) string (Ok 10)\nlet rStrTrue = first  string (true, 10)\nlet rStr10   = second string (true, 10)"},{"uri":"/FSharpPlus/type-compose.html","title":"Compose\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nCompose\n=======\n\nAllows to compose applicatives and functors.\n\nIt worth noting that:\n\n - A composition of 2 functors is a functor\n - A composition of 2 applicatives is an applicative\n - A composition of 2 monads is not always a monad\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen FSharpPlus\nopen FSharpPlus.Data\n\n// First let\u0027s create some values\n\nlet (one : Async\u003CResult\u003Cint, string\u003E\u003E) = async { return Ok 1 }\nlet (two : Async\u003CResult\u003Cint, string\u003E\u003E) = async { return Ok 2 }\n\n// Now we can combine then\n\nlet (Compose three) = Compose (async {return Ok (\u002B)}) \u003C*\u003E Compose one \u003C*\u003E Compose two\n// val three : Async\u003CFSharpPlus.Result\u003Cint,string\u003E\u003E\n\n// or shorter\n\nlet (Compose three\u0027) = (\u002B) \u003C!\u003E Compose one \u003C*\u003E Compose two\n// val three\u0027 : Async\u003CFSharpPlus.Result\u003Cint,string\u003E\u003E"},{"uri":"/FSharpPlus/abstraction-contravariant.html","title":"Contravariant\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\n\n(**\nContravariant\n=============\n\nA Contravariant Functor can be mapped over the input.\n\n___\n\nOne can think of a [Functor](abstraction-functor.html) as containing or producing values, a contravariant functor is a functor that can be thought of as consuming values.\n\nMinimal complete definition\n---------------------------\n\n\n * \u0060\u0060contramap f x\u0060\u0060\n*)\n(**\n    static member Contramap (x:\u0027Contravariant\u003C\u0027T\u003E, f:\u0027U-\u003E\u0027T) :\u0027Contravariant\u003C\u0027U\u003E\n*)\n(**\n\n\n\n\nRules\n-----\n*)\n(**\n    contramap id = id\n    contramap f \u003C\u003C contramap g = contramap (g \u003C\u003C f)\n*)\n(**\n\n\nRelated Abstractions\n--------------------\n\n - [Functor](abstraction-functor.html): A Covariant Functor.\n \n - [Profunctor](abstraction-profunctor.html) : A profunctor is a bifunctor that is contravariant in the first argument and covariant in the second.\n\n\nConcrete implementations\n------------------------\n\nFrom .Net/F#\n \n -  \u0060\u0060(\u0027T -\u003E \u0027U)\u0060\u0060\n -  \u0060\u0060Predicate\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IComparer\u003C\u0027T\u003E\u0060\u0060\n -  \u0060\u0060IEqualityComparer\u003C\u0027T\u003E\u0060\u0060\n\n \nFrom F#\u002B\n\n -  [\u0060\u0060Const\u003C\u0027C,\u0027T\u003E\u0060\u0060](type-const.html)\n\n [Suggest another](https://github.com/fsprojects/FSharpPlus/issues/new) concrete implementation\n\nExamples\n--------\n*)\n\n(**\n\u0060\u0060\u0060f#\n#r @\u0022nuget: FSharpPlus\u0022\n\u0060\u0060\u0060\n*)\n\nopen System\nopen FSharpPlus\n\n\nmodule Predicate = let run (p: Predicate\u003C_\u003E) x = p.Invoke (x)\n\nlet intToString (x:int) = string x\nlet resStr54 = contramap (fun (x:float) -\u003E int x) intToString \u003C| 54.\nlet isEven      = Predicate (fun x -\u003E x % 2 = 0)\nlet fstIsEven   = contramap List.head isEven\nlet resBoolTrue = Predicate.run fstIsEven [0..10]\n\ntype Person = Person of string\nlet personEqComp = HashIdentity.Structural\u003CPerson\u003E\nlet personList = [1, Person \u0022me\u0022; 2, Person \u0022you\u0022; 3, Person \u0022you\u0022]\nlet cnt3 = Seq.length \u003C| Linq.Enumerable.Distinct (personList)\nlet cnt2 = Seq.length \u003C| Linq.Enumerable.Distinct (personList, contramap snd personEqComp)\n\n(**\nFor instance a predicate function from a type to bool. An example of such a function is the predicate that classifies \nintegers as negative: \n*)\nlet negative = Predicate( fun integer -\u003E integer \u003C 0 )\n(**\n\nHowever, given this predicate, we can re-use it in other situations, providing we have a way to map values to integers. \nFor instance, we can use the \u0060negative\u0060 predicate on a person\u0027s bank balance to work out if they are currently overdrawn.\n*)\nlet personBankBalance (person:Person) : int = failwith \u0022query persons bank account\u0022 \nlet overdrawn = contramap personBankBalance negative"},{"uri":"/FSharpPlus/numerics.html","title":"Numeric functions\n","content":"(*** hide ***)\n// This block of code is omitted in the generated HTML documentation. Use \n// it to define helpers that you do not want to show in the documentation.\n#r @\u0022../../src/FSharpPlus/bin/Release/netstandard2.0/FSharpPlus.dll\u0022\nopen FSharpPlus\n\n(**\nNumeric functions\n=================\n\nThis library comes with some additional numeric functions and constants.\n\nThese functions work over many numeric types\n\n*)\n\nlet qr0  = divRem 7  3  //val qr0 : int * int = (2, 1)\nlet qr1  = divRem 7I 3I //val qr1 : System.Numerics.BigInteger * System.Numerics.BigInteger = (2, 1)\nlet qr2  = divRem 7. 3. //val qr2 : float * float = (2.333333333, 0.0) -\u003E using default method.\n\n(**\n\nNumeric constants\n=================\n\nApart from typical math constants, bounded types comes with \u003Ccode\u003EminValue\u003C/code\u003E and \u003Ccode\u003EmaxValue\u003C/code\u003E constants.\n\nHere\u0027s an example how can this be used to implement an efficient \u003Ccode\u003EfindMin\u003C/code\u003E function\n\n*)\n\nlet inline findMin (lst: \u0027a list) =\n    let rec loop acc = function\n        | [] -\u003E acc\n        | x::_ when x = minValue -\u003E x\n        | x::xs -\u003E loop (if x \u003C acc then x else acc) xs\n    loop maxValue lst\n    \nlet minInt  = findMin [1;0;12;2]\nlet minUInt = findMin [1u;0u;12u;2u]  // loops only twice\n\n\n(**\nGeneric operations over numeric types\n=====================================\n\n*)\n\n(**\n\nWriting code that is generic over different numeric types can be really tedious in F#.\n\nUsing this library it becomes an easy task, but it\u0027s important to understand the numeric abstractions and its limitations.\n\nIn order to have a reasonable type inference over generic types we need strict operations.\n\nFor example the F# definition of \u003Ccode\u003E(\u002B)\u003C/code\u003E can take 2 different types, this makes possible to interact with some .NET types that have defined the \u003Ccode\u003E(\u002B)\u003C/code\u003E operator in a very arbitrary way.\n\nFor instance you can add a \u003Ccode\u003Efloat\u003C/code\u003E to a \u003Ccode\u003EDateTime\u003C/code\u003E with the \u003Ccode\u003E(\u002B)\u003C/code\u003E operator, and that \u003Ccode\u003Efloat\u003C/code\u003E will be interpreted as seconds.\n\nBy opening the \u003Ccode\u003EFSharpPlus.Math.Generic\u003C/code\u003E namespace this will no longer be possible, because that\u0027s the tradeoff in order to get decent type inference.\n\n\n\nGeneric number literals\n=======================\n\nNumbers with a G suffix are generics.\n\n*)\n\nopen FSharpPlus.Math.Generic\n\nlet res5Int  : int    = 5G\nlet res5UInt : uint32 = 5G\n\n(**\nOften you need to define generic constants when defining generic functions.\nSince there is no way to define generic decimal literals in F# at the moment of writing this, we can use divisions:\n*)\n\n\nlet inline areaOfCircle radio =\n    let pi = \n        314159265358979323846264338G \n                    / \n        100000000000000000000000000G\n    pi * radio * radio\n\nlet area1 = areaOfCircle 5.\nlet area2 = areaOfCircle 5.0f\nlet area3 = areaOfCircle 5.0M\n\n\n\n(**\nDefining custom types, support generic operations\n=================================================\n*)\n\ntype Vector2d\u003C\u0027T\u003E = Vector2d of \u0027T * \u0027T  with\n    static member inline (\u002B) (Vector2d(a:\u0027t, b:\u0027t), Vector2d(c:\u0027t, d:\u0027t)) = Vector2d (((a \u002B c):\u0027t), ((b \u002B d):\u0027t))\n    static member inline (-) (Vector2d(a:\u0027t, b:\u0027t), Vector2d(c:\u0027t, d:\u0027t)) = Vector2d (((a - c):\u0027t), ((b - d):\u0027t))\n    static member inline (*) (Vector2d(a:\u0027t, b:\u0027t), Vector2d(c:\u0027t, d:\u0027t)) = Vector2d (((a * c):\u0027t), ((b * d):\u0027t))\n    static member        Return x                               = Vector2d (x, x)\n    static member        Map(Vector2d(x, y), f)                 = Vector2d (f x, f y)\n    static member inline FromBigInt x = let y = fromBigInt x in Vector2d (y, y)\n\n(**\nNote we don\u0027t define overloads for adding a vector to a number\n\nWhy? Apart from being tedious they will break math operators strictness \n\nso we will have problems type inferencing generic functions.\n\nOK, but then how to add (subtract, multiply) to a number?\n\n\n\nOption 1, explicitely \u0027lift\u0027 the number.\n\nRequires Return and ( \u002B , - , * )\n\n*)\n\nlet x1  = Vector2d (32,5) \u002B result 7\nlet x1\u0027 = result 7 \u002B Vector2d (32,5)\n\n(**\nOption 2, use Generic Numbers\n\nRequires \u003Ccode\u003EFromBigInt\u003C/code\u003E and (\u002B,-,*,/)\n*)\n\nopen FSharpPlus.Math.Generic\nlet x2  = Vector2d (32,5) \u002B 7G\nlet x2\u0027 = 7G \u002B Vector2d (32,5)\n\n(**\nOption 3, use Applicative Math Operators\nRequires only \u003Ccode\u003EMap\u003C/code\u003E\n*)\n\nopen FSharpPlus.Math.Applicative\nlet x3 = Vector2d (32,5) .\u002B 7\nlet x3\u0027 = 7 \u002B. Vector2d (32,5)\n\n\n(**\nIntegrate with 3rd party libraries\n==================================\n\nWe may use types defined in other libraries, let\u0027s suppose we have this type Ratio defined somewhere.\n*)\n\ntype Ratio =\n    struct\n        val Numerator   : bigint\n        val Denominator : bigint\n        new (numerator: bigint, denominator: bigint) = {Numerator = numerator; Denominator = denominator}\n    end\n    override this.ToString() = this.Numerator.ToString() \u002B \u0022 % \u0022 \u002B this.Denominator.ToString()\n\nlet ratio (a:bigint) (b:bigint) :Ratio =\n    if b = 0I then failwith \u0022Ratio.%: zero denominator\u0022\n    let a, b = if b \u003C 0I then (-a, -b) else (a, b)\n    let gcd = gcd a b\n    Ratio (a / gcd, b / gcd)\n\nlet Ratio (x,y) = x \u003C/ratio/\u003E y\n\ntype Ratio with\n    static member inline (/) (a:Ratio, b:Ratio) = (a.Numerator * b.Denominator) \u003C/ratio/\u003E (a.Denominator * b.Numerator)                                              \n    static member inline (\u002B) (a:Ratio, b:Ratio) = (a.Numerator * b.Denominator \u002B b.Numerator * a.Denominator) \u003C/ratio/\u003E (a.Denominator * b.Denominator)\n    static member inline (-) (a:Ratio, b:Ratio) = (a.Numerator * b.Denominator - b.Numerator * a.Denominator) \u003C/ratio/\u003E (a.Denominator * b.Denominator)\n    static member inline (*) (a:Ratio, b:Ratio) = (a.Numerator * b.Numerator) \u003C/ratio/\u003E (a.Denominator * b.Denominator)\n\n    static member inline Abs        (r:Ratio) = (abs    r.Numerator) \u003C/ratio/\u003E r.Denominator\n    static member inline Signum     (r:Ratio) = (signum r.Numerator) \u003C/ratio/\u003E 1I\n    static member inline FromBigInt (x:bigint) = fromBigInt x \u003C/ratio/\u003E 1I\n    static member inline (~-)       (r:Ratio) = -(r.Numerator) \u003C/ratio/\u003E r.Denominator\n\n(**\nSince most Rational implementations have Numerator and Denominator defined we can just use our generic functions on it:\n*)\n\nlet some3_2 = trySqrt (Ratio(9I, 4I))\n\n\n(**\n\nExample: creating a polymorphic quadratic function\n==================================================\n\nThe quadratic function has different results depending on which domain it operates.\n\nFor example for real numbers it can have 0 or 2 solutions (arguably also 1 that is a double solution).\n\nBut for complex numbers it always has 2 solutions.\n\n*)\n\nopen FSharpPlus.Math.Generic\n\nlet inline quadratic a b c =\n    let root1 = ( -b \u002B sqrt (  b * b - 4G * a * c) )  / (2G * a)\n    let root2 = ( -b - sqrt (  b * b - 4G * a * c) )  / (2G * a)\n    (root1,root2)\n\n\nlet noRes  = quadratic 2.0  3G 9G\n// val noRes : float * float = (nan, nan)\n\nlet res30_15  = quadratic 2.0  -3G -9G\n// val res30_15 : float * float = (3.0, -1.5)\n\nlet res30_15f = quadratic 2.0f -3G -9G\n// val res30_15f : float32 * float32 = (3.0f, -1.5f)\n\nlet resCmplx:System.Numerics.Complex * _ = quadratic 2G -3G 9G\n// val resCmplx : System.Numerics.Complex * System.Numerics.Complex = ((0.75, -1.98431348329844), (0.75, 1.98431348329844))\n\nlet res30_15r:Ratio * _ = quadratic 2G -3G -9G\n// val res30_15r : Ratio * Ratio = (3 % 1, -3 % 2)"}]